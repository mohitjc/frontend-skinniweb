{"version":3,"file":"static/js/5813.2ea2b1bd.chunk.js","mappings":"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","sources":["Pages/BusinessForecast/Business.js","Pages/BusinessForecast/Graph.jsx","Pages/BusinessForecast/Table.jsx","Pages/BusinessForecast/Timeline.jsx","components/Table/index.jsx","components/common/DateRangePicker/index.js","components/common/LineChart/index.js","models/colors.model.js","models/datepipemodel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/global/layout\";\nimport DateRangePicker from \"../../components/common/DateRangePicker\";\nimport { Tab, TabGroup, TabList, TabPanel, TabPanels } from \"@headlessui/react\";\nimport Graph from \"./Graph\";\nimport Timeline from \"./Timeline\";\nimport TableBusiness from \"./Table\";\nimport { FaDollarSign, FaArrowDown, FaArrowUp } from 'react-icons/fa';\n\n\nconst BusinessForecast = () => {\n  const [filters, setFilter] = useState({});\n  const getData = () => {};\n\n  const clear = () => {\n    let f = {\n      startDate: \"\",\n      endDate: \"\",\n      platform: \"\",\n      search: \"\",\n      status: \"\",\n      page: 1,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const filter = (p = {}) => {\n    let f = {\n      page: 1,\n      ...p,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const tabs = [\"Graph\", \"Table\", \"Timeline\"];\n\n\n\n  return (\n    <div>\n      <Layout>\n       \n        <TabGroup>\n          <TabList className=\" w-full flex gap-4 items-center justify-between\">\n            <div className=\" flex gap-6 items-center border-b-2 border-gray-200\">\n            {tabs.map((tab) => (\n          <Tab\n            key={tab}\n            className={({ selected }) =>\n              ` focus:outline-none py-2  ${\n                selected\n                  ? \"border-b-2 border-primary font-medium\"\n                  : \" text-gray-700\"\n              }`\n            }\n          >\n            {tab}\n          </Tab>\n        ))}\n              \n                {/* <Tab className=\"\">Graph</Tab>\n                <Tab className=\"\">Table</Tab>\n                <Tab className=\"\">Timeline</Tab> */}\n            </div>\n\n\n            <div className=\"flex gap-2 items-center \">\n                <DateRangePicker\n                  value={{\n                    startDate: filters.startDate,\n                    endDate: filters.endDate,\n                  }}\n                  onChange={(e) => {\n                    filter({\n                      startDate: e.startDate,\n                      endDate: e.endDate,\n                    });\n                  }}\n                />\n\n                {filters.status || filters.startDate || filters.platform ? (\n                  <>\n                    <button\n                      className=\"bg-primary leading-10 h-10 inline-block shadow-btn px-6 hover:opacity-80 text-sm text-white rounded-lg\"\n                      onClick={() => clear()}\n                    >\n                      Reset\n                    </button>\n                  </>\n                ) : (\n                  <></>\n                )}\n            </div>\n\n\n          </TabList>\n          <div className=\"mt-5\">\n         \n         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n   <div className=\"border border-gray-200 bg-white shadow-lg p-6 rounded-xl hover:shadow-xl transition duration-300 ease-in-out\">\n     <div className=\"flex items-center space-x-4\">\n       <div className=\"p-3 bg-green-100 rounded-full\">\n         <FaDollarSign className=\"text-3xl text-green-500\" />\n       </div>\n       <div>\n         <span className=\"block text-2xl font-semibold\">Revenue</span>\n         <div className=\"flex text-sm font-medium text-gray-500\">\n           <span>last 14 days</span>\n         </div>\n       </div>\n     </div>\n   </div>\n\n   <div className=\"border border-gray-200 bg-white shadow-lg p-6 rounded-xl hover:shadow-xl transition duration-300 ease-in-out\">\n     <div className=\"flex items-center space-x-4\">\n       <div className=\"p-3 bg-red-100 rounded-full\">\n         <FaArrowDown className=\"text-3xl text-red-500\" />\n       </div>\n       <div>\n         <span className=\"block text-2xl font-semibold\">Expenses</span>\n         <div className=\"flex text-sm font-medium text-gray-500\">\n           <span>last 14 days</span>\n         </div>\n       </div>\n     </div>\n   </div>\n\n   <div className=\"border border-gray-200 bg-white shadow-lg p-6 rounded-xl hover:shadow-xl transition duration-300 ease-in-out\">\n     <div className=\"flex items-center space-x-4\">\n       <div className=\"p-3 bg-blue-100 rounded-full\">\n         <FaArrowUp className=\"text-3xl text-blue-500\" />\n       </div>\n       <div>\n         <span className=\"block text-2xl font-semibold\">Profit</span>\n         <div className=\"flex text-sm font-medium text-gray-500\">\n           <span>last 14 days</span>\n         </div>\n       </div>\n     </div>\n   </div>\n </div>\n         </div>\n          <TabPanels className=\"mt-6\">\n            <TabPanel>\n\n\n           \n\n\n              <Graph />\n            </TabPanel>\n            <TabPanel>\n              <TableBusiness filters={filters}/>\n            </TabPanel>\n            <TabPanel>\n              <Timeline filters={filters}/>\n            </TabPanel>\n          </TabPanels>\n          \n        </TabGroup>\n      </Layout>\n    </div>\n  );\n};\n\nexport default BusinessForecast;\n","import React from \"react\";\nimport LineChart from \"../../components/common/LineChart\";\n\nconst Graph = () => {\n  return (\n    <div>\n      <div className=\"shadow-box  w-full bg-white rounded-lg mt-6\">\n        <div className=\"\">\n          <h5 className=\"p-4 border-b font-[600] rounded-[5px] rounded-bl-[0] rounded-br-[0] flex items-center text-[#0065FF]\">\n            Revenue And Cash Flow\n          </h5>\n        </div>\n        <div className=\"col-span-12 md:col-span-12  p-4\">\n          <div className=\"chatr_ones border border-gray-200 p-6 rounded-lg\">\n            <LineChart\n              // legends={[{ label: \"Margin\", key: \"margin\" }]}\n              data={[\n                // { count: 10, date: \"2020-12-04\" },\n                // { count: 13, date: \"2020-12-04\" },\n                // { count: 40, date: \"2020-12-04\" },\n                // { count: 45, date: \"2020-12-04\" },\n                // { count: 30, date: \"2020-12-04\" },\n                // { count: 20, date: \"2020-12-04\" },\n              ]}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Graph;\n","import React, { useState } from 'react'\nimport Table from \"../../components/Table\";\nconst TableBusiness = ({filters}) => {\nconst [laoding, setLoading] = useState(false)\n    const columns = [\n        {\n          key: \"name\",\n          name: \"Jan\",\n          // sort: true,\n          render: (row) => {\n            return <span className=\"capitalize\">{row?.name}</span>;\n          },\n        },\n        {\n          key: \"user\",\n          name: \"Feb\",\n          // sort: true,\n          render: (row) => {\n            // const totalMetrics = row?.metrics.reduce((acc, metric) => acc + metric, 0);\n            return <span>{row?.totalActiveUsers}</span>;\n          },\n        },\n        {\n          key: \"percent\",\n          name: \"mar\",\n          // sort: true,\n          render: (row) => {\n            // const totalMetrics = row?.metrics.reduce((acc, metric) => acc + metric, 0);\n            return <span>{row?.activeUserPercentage}</span>;\n          },\n        },\n        {\n            key: \"percent\",\n            name: \"Apr\",\n            // sort: true,\n            render: (row) => {\n              // const totalMetrics = row?.metrics.reduce((acc, metric) => acc + metric, 0);\n              return <span>{row?.activeUserPercentage}</span>;\n            },\n          },\n          {\n            key: \"percent\",\n            name: \"May\",\n            // sort: true,\n            render: (row) => {\n              // const totalMetrics = row?.metrics.reduce((acc, metric) => acc + metric, 0);\n              return <span>{row?.activeUserPercentage}</span>;\n            },\n          },\n      ];\n  return (\n    <div>\n      <div className=\"shadow-box  w-full bg-white rounded-lg mt-6\">\n         \n              <div className=\"\">\n                <Table\n                  className=\"\"\n                  data={[]}\n                  columns={columns}\n                  page={1}\n                  count={filters.count}\n                  filters={filters}\n                  total={0}\n                  result={(e) => {\n                    // if (e.event == \"page\") pageChange(e.value);\n                    // if (e.event == \"sort\") {\n                    //   sorting(e.value);\n                    //   sortClass(e.value);\n                    // }\n                    // if (e.event == \"count\") count(e.value);\n                  }}\n                />\n              </div>\n        </div>\n    </div>\n  )\n}\n\nexport default TableBusiness\n","import React from 'react'\nimport Table from '../../components/Table';\n\nconst Timeline = ({filters}) => {\n  const columns = [\n    {\n      key: \"task\",\n      name: \"Task\",\n      render: (row) => {\n        return <span className=\"capitalize\">{row?.name}</span>;\n      },\n    },\n    {\n      key: \"status\",\n      name: \"Status\",\n      render: (row) => {\n        return <span>{row?.totalActiveUsers}</span>;\n      },\n    },\n    {\n      key: \"impact\",\n      name: \"Business Impact\",  \n      render: (row) => {\n        return <span>{row?.activeUserPercentage}</span>;\n      },\n    },\n    \n  ];\n  return (\n    <div>\n      <div className=\"shadow-box  w-full bg-white rounded-lg mt-6\"> \n              <div className=\"\">\n                <Table\n                  className=\"\"\n                  data={[]}\n                  columns={columns}\n                  page={1}\n                  count={filters.count}\n                  filters={filters}\n                  total={0}\n                  result={(e) => {\n                    // if (e.event == \"page\") pageChange(e.value);\n                    // if (e.event == \"sort\") {\n                    //   sorting(e.value);\n                    //   sortClass(e.value);\n                    // }\n                    // if (e.event == \"count\") count(e.value);\n                  }}\n                />\n              </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Timeline\n","import React, { useEffect, useState } from \"react\";\nimport { HiOutlineArrowDown } from \"react-icons/hi\";\nimport Pagination from \"react-pagination-js\";\n\nconst Table = ({\n  className = \"\",\n  data = [],\n  theme = \"table\",\n  ListHtml = (e) => {},\n  rowClass = \"\",\n  columns = [],\n  topHead = [],\n  count = 50,\n  total = 0,\n  page = 1,\n  result = (e) => {},\n  nodata = \"Data Not Found\",\n  filters,\n}) => {\n  const [pageSize, setPageSize] = useState(count);\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(parseInt(e.target.value));\n    result({ event: \"count\", value: parseInt(e.target.value) });\n  };\n\n  const handlePaginate = (e) => {\n    result({ event: \"page\", value: e });\n  };\n\n  const view = (row) => {\n    result({ event: \"row\", row: row });\n  };\n\n  const headclick = (itm) => {\n    if (itm.sort) {\n      result({ event: \"sort\", value: itm.key });\n    }\n  };\n\n  // Generate options array based on the total value\n  const generateOptions = () => {\n    const options = [];\n    for (let i = 10; i <= total; i += 10) {\n      options.push(i);\n    }\n    return options;\n  };\n\n  return (\n    <>\n      <div className={`${className}`}>\n        {total ? (\n          <>\n            {/* Table view */}\n            {theme === \"table\" && (\n              <div className=\"relative overflow-x-auto border border-[#eee] sm:rounded-lg \">\n                <table className=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\n                  <thead className=\"text-xs text-gray-700 capitalize bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n                    {/* Top header */}\n                    {topHead?.length ? (\n                      <tr className=\"bg-gray-200 border-b border-black\">\n                        {topHead.map((itm, i) => (\n                          <th\n                            scope=\"col\"\n                            className={`px-2 py-3 text-center ${\n                              topHead.length - 1 === i\n                                ? \"\"\n                                : \"border-r border-black\"\n                            }`}\n                            colSpan={itm?.colSpan || 0}\n                            key={i}\n                          >\n                            {itm.name}\n                          </th>\n                        ))}\n                      </tr>\n                    ) : null}\n                    {/* Main header */}\n                    <tr>\n                      {columns.map((itm) => (\n                        <th\n                          scope=\"col\"\n                          className={`px-2 py-3   ${\n                            itm.sort ? \"cursor-pointer\" : \"\"\n                          }`}\n                          key={itm.key}\n                        >\n                          <span className=\"inline-flex items-center gap-1\">\n                            <span> {itm.name} </span>\n                            {itm.sort ? (\n                              <>\n                                <span className=\"\" onClick={() => headclick(itm)}>\n                                  <HiOutlineArrowDown className=\" inline text-sm\" />\n                                </span>\n                              </>\n                            ) : null}\n                          </span>\n                        </th>\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {/* Table data */}\n                    {data.map((itm) => (\n                      <tr\n                        onClick={() => view(itm)}\n                        className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n                        key={itm.id}\n                      >\n                        {columns.map((citm) => (\n                          <td className={`px-2 py-4 ${citm.className}`} key={citm.key}>\n                            {citm.render(itm) || \"--\"}\n                          </td>\n                        ))}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n\n            {/* List view */}\n            {theme === \"list\" && (\n              <div className={`rowClass ${rowClass}`}>\n                {data.map((itm, index) => (\n                  <ListHtml key={index} row={itm} />\n                ))}\n              </div>\n            )}\n\n            {/* Pagination */}\n            {count < total && (\n              <div className=\"paginationWrapper flex items-center justify-between mt-15 px-4\">\n                <p className=\"w-96 text-sm text-gray-500\">\n                  Show{\" \"}\n                  <select\n                    value={pageSize}\n                    onChange={handlePageSizeChange}\n                    className=\"border bg-[#0065FF] rounded-md px-2 py-1\"\n                  >\n                    {/* Dynamically generated options */}\n                    {generateOptions().map((option) => (\n                      <option key={option} value={option}>\n                        {option}\n                      </option>\n                    ))}\n                  </select>{\" \"}\n                  from {total} data\n                </p>\n                <Pagination\n                  currentPage={page}\n                  totalSize={total}\n                  sizePerPage={pageSize}\n                  changeCurrentPage={handlePaginate}\n                />\n              </div>\n            )}\n          </>\n        ) : (\n          // <div className=\"p-4 text-center\">{nodata}</div>\n          <div className=\"\">\n          <div className=\"relative overflow-x-auto border border-[#eee] sm:rounded-lg \">\n           \n            <table className=\"xl:w-full lg:w-[1300px] md:w-[1200px] w-[1200px] text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\n              <thead className=\"text-xs text-gray-700 capitalize bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n                {/* Top header */}\n                {topHead?.length ? (\n                  <tr className=\"bg-gray-200 border-b border-black\">\n                    {topHead.map((itm, i) => (\n                      <th\n                        scope=\"col\"\n                        className={`px-2 py-3 text-center ${\n                          topHead.length - 1 === i\n                            ? \"\"\n                            : \"border-r border-black\"\n                        }`}\n                        colSpan={itm?.colSpan || 0}\n                        key={i}\n                      >\n                        {itm.name}\n                      </th>\n                    ))}\n                  </tr>\n                ) : null}\n                {/* Main header */}\n                <tr>\n                  {columns.map((itm) => (\n                    <th\n                      scope=\"col\"\n                      className={`px-2 py-3   ${\n                        itm.sort ? \"cursor-pointer\" : \"\"\n                      }`}\n                      onClick={() => headclick(itm)}\n                      key={itm.key}\n                    >\n                      <span className=\"inline-flex items-center gap-1\">\n                        <span> {itm.name} </span>\n                        {itm.sort ? (\n                          <>\n                            <span className=\"\">\n                              <HiOutlineArrowDown className=\" inline text-sm\" />\n                            </span>\n                          </>\n                        ) : null}\n                      </span>\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td colspan=\"7\">\n                <div className=\"p-4 text-center\">\n                  <img src =\"assets/img/no-data.png\" alt=\"\" className=\"w-[150px] mx-auto \"/>\n                  {nodata}\n                  </div>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport { DateRangePicker as DateRange } from 'react-date-range';\nimport datepipeModel from \"../../../models/datepipemodel\";\nimport { useSelector } from 'react-redux';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport \"./style.scss\";\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { ChevronDownIcon } from '@heroicons/react/20/solid'\n\nconst DateRangePicker = ({ value, onChange, dynamicStyle = false,\n    className = null, disabled = false, title = '', placeholder = '', isCompare = false, \n    showcustom = true,\n    showRange = true,\n}) => {\n    const user = useSelector((state) => state.user)\n    const [toggle, setToggle] = useState(false)\n    const [range, setRange] = useState('')\n\n    const rangeList = [\n        { id: 'This Month', name: \"This Month\" },\n        { id: 'This Year', name: \"This Year\" },\n        { id: 'Last Month', name: \"Last Month\" },\n        { id: 'Last Year', name: \"Last Year\" },\n        { id: '', name: \"Custom\" }\n    ]\n\n    const blockDateChange = (e) => {\n        let v={\n            ...value, ...e, compare: '' \n        }\n\n        v.startDate=datepipeModel.datetostring(v.startDate)\n        v.endDate=datepipeModel.datetostring(v.endDate)\n        \n        onChange({ ...v })\n        if (v.startDate != v.endDate) {\n            setToggle(false)\n        }\n    }\n\n    const toggleChange = () => {\n        setToggle(!toggle)\n    }\n\n    const getBlockValue = () => {\n        let v = {\n            startDate: value['startDate'] ? new Date(value['startDate']) : new Date(),\n            endDate: value['endDate'] ? new Date(value['endDate']) : new Date(),\n            key: 'selection'\n        }\n        return [v]\n    }\n\n    const dropdownMenuClick = (e) => {\n        // let el = document.getElementById(`daterangeDropdown-${id}`)\n        // el.click()\n    }\n\n    const rangeClick = (e) => {\n        let startDate = ''\n        let endDate = ''\n\n        if (e == 'Last Month') {\n            let current = new Date()\n            let monthdate = current.setDate(0)\n            monthdate = datepipeModel.datetostring(monthdate)\n            startDate = `${monthdate.split('-')[0]}-${monthdate.split('-')[1]}-01`\n            endDate = monthdate\n\n        } else if (e == 'This Month') {\n            let current = datepipeModel.datetostring(new Date())\n            startDate = `${current.split('-')[0]}-${current.split('-')[1]}-01`\n\n            let month2 = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n\n        else if (e == 'This Year') {\n            let current = datepipeModel.datetostring(new Date())\n            startDate = `${current.split('-')[0]}-01-01`\n\n            let month2 = new Date(new Date().getFullYear() + 1, 0, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n        else if (e == 'Last Year') {\n            let current = new Date()\n            startDate = `${current.getFullYear() - 1}-01-01`\n            let month2 = new Date(current.getFullYear(), 0, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n        setRange(e)\n        onChange({ ...value, startDate, endDate, compare: '' })\n        if (e != '') {\n            setToggle(false)\n        }\n    }\n\n    const getDays = (s, e) => {\n        // Define two date objects\n        const startDate = new Date(s); // Replace with your start date\n        const endDate = new Date(e);   // Replace with your end date\n        // Calculate the time difference in milliseconds\n        const timeDifference = endDate - startDate;\n        // Convert milliseconds to days\n        const daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n        return daysDifference\n    }\n\n    const previousYear = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            let ssplit = value.startDate.split('-')\n            let esplit = value.endDate.split('-')\n            let year = Number(ssplit[0])\n            let eyear = Number(esplit[0])\n\n            let d = new Date(`${year - 1}-${ssplit[1]}-${ssplit[2]}`)\n            start = datepipeModel.datetostring(d)\n\n            let ed = new Date(`${eyear - 1}-${esplit[1]}-${esplit[2]}`)\n            end = datepipeModel.datetostring(ed)\n        }\n        return { start, end }\n    }\n\n    const previousMonth = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            // let sMonth=new Date(value.startDate).getMonth()\n            // start=new Date(value.startDate).setMonth(sMonth-1)\n            // start=datepipeModel.datetostring(start)\n\n            // let eMonth=new Date(value.endDate).getMonth()\n            // end=new Date(value.endDate).setMonth(eMonth-1)\n            // end=datepipeModel.datetostring(end)\n\n            let current = new Date(value.startDate)\n            let monthdate = current.setDate(0)\n            monthdate = datepipeModel.datetostring(monthdate)\n            start = `${monthdate.split('-')[0]}-${monthdate.split('-')[1]}-01`\n            end = monthdate\n        }\n        return { start, end }\n    }\n\n    const previousPeriod = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            let days = getDays(value.startDate, value.endDate) + 1\n\n            let d = new Date(value.startDate)\n            d.setDate(d.getDate() - days)\n            start = datepipeModel.datetostring(d)\n\n            let ed = new Date(value.startDate)\n            ed.setDate(ed.getDate() - 1)\n            end = datepipeModel.datetostring(ed)\n        }\n        return { start, end }\n    }\n\n    const compareChange = (e) => {\n        let start = ''\n        let end = ''\n        if (e == 'Previous Period') {\n            start = previousPeriod().start\n            end = previousPeriod().end\n        } else if (e == 'Previous Year') {\n            start = previousYear().start\n            end = previousYear().end\n        } else if (e == 'Previous Month') {\n            start = previousMonth().start\n            end = previousMonth().end\n        }\n\n        let v = {\n            ...value,\n            compareStart: start,\n            compareEnd: end,\n            compare: e\n        }\n        setToggle(false)\n        onChange({ ...v })\n    }\n\n    return <>\n\n\n        <Menu as=\"div\" className=\"relative list_box_active_state \" title={title}>\n            <div>\n\n                <Menu.Button title={title} disabled={disabled} onClick={toggleChange} className=\" set-bg flex w-full bg-primary justify-center border gap-x-1.5 rounded-md  px-3 py-2.5 text-sm font-normal text-white shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\">\n                    {!value?.startDate || !value?.endDate ? <>{placeholder || 'Start Date - End Date'}</> : <>{datepipeModel.date(value?.startDate, user?.companyDateFormat)} -  {datepipeModel.date(value?.endDate, user?.companyDateFormat)}</>}\n                    <ChevronDownIcon className=\"-mr-1 h-5 w-5 text-white-400\" aria-hidden=\"true\" />\n\n\n                </Menu.Button>\n            </div>\n\n            <Transition\n                as={Fragment}\n                enter=\"transition ease-out duration-100\"\n                enterFrom=\"transform opacity-0 scale-95\"\n                enterTo=\"transform opacity-100 scale-100\"\n                leave=\"transition ease-in duration-75\"\n                leaveFrom=\"transform opacity-100 scale-100\"\n                leaveTo=\"transform opacity-0 scale-95\"\n            >\n                <Menu.Items className={`${dynamicStyle ? \"\" : \"\"}   focus:!outline-[#0065FF] focus:!outline text-sm absolute z-40 ${className ? className : \" min-w-[360px]\"\n                    }  right-0 shadow-lg !py-2 !mt-3 overflow-auto bg-white  rounded-lg scrollbar`}>\n                    <div className=\"fffff\">\n                        <div className=\"\" >\n                            {/* <p className=\"text-center px-2\">{!value?.startDate || !value?.endDate ? <>{placeholder || 'Start Date - End Date'}</> : <>{datepipeModel.date(value?.startDate, user?.companyDateFormat)} -  {datepipeModel.date(value?.endDate, user?.companyDateFormat)}</>}</p> */}\n                           \n                           {showRange?<>\n                            <div className=\"  row-gap-2 column-gap-2 whitespace-nowrap flex p-2 mb-0\">\n                                {rangeList.map(itm => {\n                                    return showcustom == false && itm.name == \"Custom\" ? null : <button className={`btn ${range == itm.id ? 'bg-[#0065FF] text-white' : 'bg-transparent hover:border-gray-400 border-1 border-gray-400'}`} type=\"button\" onClick={e => rangeClick(itm.id)}>{itm.name}</button>\n                                })}\n                            </div>\n                           </>:<></>}\n                           \n\n                            {range || showcustom == false ? <></> : <>\n                                <div className=\"w-full customcalender\">\n                                    <DateRange\n                                        showSelectionPreview={false}\n                                        editableDateInputs={true}\n                                        onChange={e => blockDateChange(e.selection)}\n                                        moveRangeOnFirstSelection={false}\n                                        ranges={getBlockValue()}\n                                    />\n                                </div>\n                            </>}\n\n\n                            {isCompare ? <>\n\n                                <Menu as=\"div\" className=\"relative \">\n                                    <div className=\"text-center\">\n                                        <Menu.Button className=\"inline-flex w-full justify-center border gap-x-1.5 rounded-md bg-white px-3 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\">\n                                            Compare\n                                            <ChevronDownIcon\n                                                className=\"-mr-1 ml-2 h-5 w-5 text-violet-200 hover:text-violet-100\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Menu.Button>\n                                    </div>\n                                    <Transition\n                                        as={Fragment}\n                                        enter=\"transition ease-out duration-100\"\n                                        enterFrom=\"transform opacity-0 scale-95\"\n                                        enterTo=\"transform opacity-100 scale-100\"\n                                        leave=\"transition ease-in duration-75\"\n                                        leaveFrom=\"transform opacity-100 scale-100\"\n                                        leaveTo=\"transform opacity-0 scale-95\"\n                                    >\n                                        <Menu.Items className=\"absolute right-0 mt-2 w-full origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black/5 focus:outline-none\">\n                                            <div className=\"px-1 py-1 \">\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Month' ? 'active' : ''}`} onClick={e => compareChange('Previous Month')}>Previous Month ({datepipeModel.date(previousMonth().start, user.companyDateFormat)} - {datepipeModel.date(previousMonth().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Year' ? 'active' : ''}`} onClick={e => compareChange('Previous Year')}>Previous Year(Same Date) ({datepipeModel.date(previousYear().start, user.companyDateFormat)} - {datepipeModel.date(previousYear().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Period' ? 'active' : ''}`} onClick={e => compareChange('Previous Period')}>Previous Period(Custom Dates) ({datepipeModel.date(previousPeriod().start, user.companyDateFormat)} - {datepipeModel.date(previousPeriod().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                            </div>\n\n\n                                        </Menu.Items>\n                                    </Transition>\n                                </Menu>\n\n\n                            </> : <></>}\n\n                        </div>\n\n                    </div>\n                </Menu.Items>\n            </Transition>\n        </Menu>\n\n    </>\n}\nexport default DateRangePicker","import ReactECharts from 'echarts-for-react';\nimport { useEffect, useState } from 'react';\nimport colorsModel from '../../../models/colors.model';\n\nconst LineChart = ({data=[],legends=[],hideLegends=false}) => {\n    const colors=colorsModel.list\n    const [overtimeLoader, setOvertimeLoader] = useState(false)\n\n    useEffect(()=>{\n        if(data?.length){\n            setOvertimeLoader(true)\n            setTimeout(()=>{\n                setOvertimeLoader(false)\n            },100)\n        }\n    },[data,legends])\n\n    const performanceLegends = [...legends.map(itm=>itm.label)]\n    const performanceOption = {\n        tooltip: {\n            trigger: 'axis'\n        },\n        legend:hideLegends?null:{\n          data: [...performanceLegends]\n          \n        },\n        toolbox: {\n            feature: {\n                saveAsImage: {}\n            }\n        },\n        grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n        },\n        xAxis: [\n            {\n                type: 'category',\n                boundaryGap: false,\n                data: [\n                    ...data.map(itm => itm.date)\n                ]\n            }\n        ],\n        yAxis: [\n            {\n                type: 'value'\n            }\n        ],\n        series: [\n            ...legends.map((itm,i)=>{\n                return {\n                    name: itm.label,\n                    type: 'line',\n                    itemStyle: {normal: {areaStyle: {type: 'default'},color: colors?.[i]}},\n                    data: [\n                        ...data.map(ditm => Number(ditm[itm.key]||0)),\n                    ]\n                }\n            })\n            \n        ]\n    };\n\n    return <>\n        {overtimeLoader ? <>\n            <div className='shine shineCard'></div>\n        </> : <>\n            <ReactECharts\n                option={performanceOption}\n                style={{ height: 400 }}\n            />\n        </>}\n    </>\n}\n\nexport default LineChart"," \nconst list=[\n    \"#3ac4a3\",\n    \"#3f89f9\",\n    \"#7777e9\",\n    \"#ff7eb4\",\n    \"#ffc337\",\n    \"#be6fdc\",\n    \"#bd6a33\"\n]\n\nconst colorsModel = { list }\nexport default colorsModel","const monthArray = [\n    { value: 'Jan',name:'January', id: 0 },\n    { value: 'Feb',name:'February', id: 1 },\n    { value: 'Mar',name:'March', id: 2 },\n    { value: 'Apr',name:'April', id: 3 },\n    { value: 'May',name:'May', id: 4 },\n    { value: 'Jun',name:'Jun', id: 5 },\n    { value: 'Jul',name:'July', id: 6 },\n    { value: 'Aug',name:'Auguest', id: 7 },\n    { value: 'Sep',name:'September', id: 8 },\n    { value: 'Oct',name:'October', id: 9 },\n    { value: 'Nov',name:'November', id: 10 },\n    { value: 'Dec',name:'December', id: 11 }\n]\n\nconst monthname = (id) => {\n    let ext = monthArray.find(itm => itm.id === id)\n    return ext?ext?.name:'--'\n}\n\nconst monthfind = (id) => {\n    let value = 0\n    let ext = monthArray.find(itm => itm.id === id)\n    if (ext) value = ext.value\n    return value\n}\n\nconst getWeekDate = (date = new Date(), week = 1) => {\n    let d = new Date(date)\n    let month = d.getMonth()\n    month = String(month + 1)\n\n    let value = 1\n    if (week == 1) value = 1\n    else if (week > 1) value = 7 * (week - 1)\n    if (value > 30) value = 30\n\n    return new Date(`${d.getFullYear()}-${month}-${value}`)\n}\n\nconst date = (p) => {\n    if(!p) return '--'\n    if(p.includes('T')) p=p.split('T')[0]\n    let d = new Date(p)\n    return `${d.getDate()} ${monthfind(d.getMonth())} ${d.getFullYear()}`\n}\n\nconst stringToDate=(p)=>{\n    let d=''\n    if(p){\n        d=new Date(p)\n    }\n    return d\n}\n\nconst daysArray = [\n    { value: 'Monday', id: 1 },\n    { value: 'Tuesday', id: 2 },\n    { value: 'Wednesday', id: 3 },\n    { value: 'Thursday', id: 4 },\n    { value: 'Friday', id: 5 },\n    { value: 'Saturday', id: 6 },\n    { value: 'Sunday', id: 0 },\n]\n\nconst getDayName = (id) => {\n    let value = daysArray.find((itm) => itm.id === id).value\n    return value;\n}\n\nconst day = (p) => {\n    if (!p) return ''\n    let day = new Date(p).getDay()\n    day = getDayName(day)\n    return day\n}\n\nconst time = (p) => {\n    if (!p) return ''\n    let v = p.split('T')\n    if (v.length === 2) {\n        return new Date(p).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n    } else {\n        return new Date(`2020-07-19 ${p}`).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n    }\n}\n\nconst datetime = (p) => {\n    if(!p) return ''\n    return `${date(p)}, ${time(timeString(p))}`\n}\n\nconst timeString = (p) => {\n    let date = new Date(p)\n    let hr = String(date.getHours())\n    let minutes = String(date.getMinutes())\n    if (hr.length === 1) hr = `0${hr}`\n    if (minutes.length === 1) minutes = `0${minutes}`\n    return `${hr}:${minutes}:00`\n}\n\nconst datetostring = (p) => {\n    if (!p) return ''\n    let date = new Date(p)\n    let month = String(date.getMonth() + 1)\n    let d = String(date.getDate())\n    if (month.length === 1) month = `0${month}`\n    if (d.length === 1) d = `0${d}`\n    return `${date.getFullYear()}-${month}-${d}`\n}\n\nconst datetoIso = (p) => {\n    if (!p) return ''\n    let date = datetostring(p)\n\n    let value = `${date}T00:00:00.000Z`\n    return value\n}\n\nconst datetoIsotime = (p) => {\n    let date = datetostring(p)\n    let time = timeString(p)\n    let value = `${date}T${time}.000Z`\n    return value\n}\n\nconst isototime = (p) => {\n    if (!p) return ''\n    let value = p.split('T')[1].split('.')\n    // if (value.length === 2) {\n    // } else {\n    //     value = p.split('T')[1].split('+')\n    // }\n    return value[0]\n}\n\nconst isotime = (p) => {\n    return time(isototime(p))\n}\n\nconst isotodate = (p) => {\n    let d = new Date(`${datetostring(p)} ${isototime(p)}`)\n    return d\n}\n\nconst datetodatepicker = (p) => {\n    if(!p) return ''\n    let value=p?.split('.')?.[0]\n    return `${value}`\n}\n\nconst DaysNo = (s, e) => {\n    // JavaScript program to illustrate \n    // calculation of no. of days between two date \n\n    // To set two dates to two variables\n    var date1 = new Date(s);\n    var date2 = new Date(e);\n\n    // To calculate the time difference of two dates\n    var Difference_In_Time = date2.getTime() - date1.getTime();\n\n    // To calculate the no. of days between two dates\n    var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\n\n    return Difference_In_Days + 1\n}\n\nfunction getHoursAndMinutes(s, e) {\n    let startDate=new Date(s)\n    let endDate=new Date(e)\n    // Convert dates to timestamps\n    var startTimestamp = startDate.getTime();\n    var endTimestamp = endDate.getTime();\n\n    // Calculate the difference in milliseconds\n    var difference = Math.abs(endTimestamp - startTimestamp);\n\n    // Convert milliseconds to hours and minutes\n    var hours = Math.floor(difference / (1000 * 60 * 60));\n    var minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n\n    let value=''\n    if(hours>24){\n        let days=hours/24\n        days=Math.round(days)\n        value=`${days} days`\n    }else if(hours){\n        value=`${hours} hours ${minutes?`and ${minutes} minutes`:''}`\n    }else{\n        value=`${minutes?`${minutes} minutes`:''}`\n    }\n\n    return value;\n}\nfunction getHoursAndMinutesSeconds(s, e) {\n    let startDate = new Date(s);\n    let endDate = new Date(e);\n    // Convert dates to timestamps\n    var startTimestamp = startDate.getTime();\n    var endTimestamp = endDate.getTime();\n\n    // Calculate the difference in milliseconds\n    var difference = Math.abs(endTimestamp - startTimestamp);\n\n    // Convert milliseconds to hours, minutes, and seconds\n    var hours = Math.floor(difference / (1000 * 60 * 60));\n    var minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n    var seconds = Math.floor((difference % (1000 * 60)) / 1000);\n\n    let value = '';\n    if (hours > 24) {\n        let days = hours / 24;\n        days = Math.round(days);\n        value = `${days} days`;\n    } else if (hours) {\n        value = `${hours} hours ${minutes ? `and ${minutes} minutes` : ''}`;\n    } else if (minutes) {\n        value = `${minutes} minutes ${seconds ? `and ${seconds} seconds` : ''}`;\n    } else {\n        value = `${seconds} seconds`;\n    }\n\n    return value;\n}\n\n\nconst datepipeModel = {\n    DaysNo,\n    date,\n    getHoursAndMinutes,\n    getHoursAndMinutesSeconds,\n    stringToDate,\n    day,\n    datetostring,\n    datetoIso,\n    isototime,\n    isotodate,\n    isotime,\n    datetoIsotime,\n    time,\n    timeString,\n    datetime,\n    monthfind,\n    getWeekDate,\n    monthname,\n    monthArray,\n    datetodatepicker\n}\n\nexport default datepipeModel;\n"],"names":["BusinessForecast","filters","setFilter","useState","useEffect","_jsx","children","Layout","_jsxs","TabGroup","TabList","className","map","tab","Tab","_ref","selected","DateRangePicker","value","startDate","endDate","onChange","e","f","page","arguments","length","undefined","filter","status","platform","_Fragment","onClick","clear","search","FaDollarSign","FaArrowDown","FaArrowUp","TabPanels","TabPanel","Graph","TableBusiness","Timeline","LineChart","data","laoding","setLoading","columns","key","name","render","row","totalActiveUsers","activeUserPercentage","Table","count","total","result","theme","ListHtml","rowClass","topHead","nodata","pageSize","setPageSize","headclick","itm","sort","event","i","scope","colSpan","HiOutlineArrowDown","citm","id","index","parseInt","target","generateOptions","options","push","option","Pagination","currentPage","totalSize","sizePerPage","changeCurrentPage","colspan","src","alt","dynamicStyle","disabled","title","placeholder","isCompare","showcustom","showRange","user","useSelector","state","toggle","setToggle","range","setRange","previousYear","start","end","ssplit","split","esplit","year","Number","eyear","d","Date","datepipeModel","datetostring","ed","previousMonth","monthdate","setDate","previousPeriod","days","getDays","s","timeDifference","Math","floor","getDate","compareChange","v","compareStart","compareEnd","compare","Menu","as","Button","toggleChange","date","companyDateFormat","ChevronDownIcon","Transition","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","type","current","month2","getFullYear","getMonth","rangeClick","DateRange","showSelectionPreview","editableDateInputs","blockDateChange","selection","moveRangeOnFirstSelection","ranges","Item","_ref2","active","_ref3","_ref4","legends","hideLegends","colors","colorsModel","list","overtimeLoader","setOvertimeLoader","setTimeout","performanceLegends","label","performanceOption","tooltip","trigger","legend","toolbox","feature","saveAsImage","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","series","itemStyle","normal","areaStyle","color","ditm","ReactECharts","style","height","monthArray","monthfind","ext","find","p","includes","daysArray","time","toLocaleString","hour","minute","hour12","timeString","hr","String","getHours","minutes","getMinutes","month","isototime","DaysNo","date1","getTime","getHoursAndMinutes","startTimestamp","endTimestamp","difference","abs","hours","round","getHoursAndMinutesSeconds","seconds","stringToDate","day","getDay","datetoIso","isotodate","isotime","datetoIsotime","datetime","getWeekDate","week","monthname","datetodatepicker","_p$split"],"sourceRoot":""}