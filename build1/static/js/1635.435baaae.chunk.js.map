{"version":3,"file":"static/js/1635.435baaae.chunk.js","mappings":"yOAQA,MAwGA,EAxGaA,KACX,MAAMC,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,OACpCG,EAAsB,IACrBC,EAASC,IAAaC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,EAAGC,MAAO,GAAIC,OAAQ,MAC7DC,EAAMC,IAAWL,EAAAA,EAAAA,UAAS,KAC1BM,EAAOC,IAAYP,EAAAA,EAAAA,UAAS,IAC5BQ,EAASC,IAAaT,EAAAA,EAAAA,WAAS,GA0BhCU,IAzBUC,EAAAA,EAAAA,MAyBA,WAAa,IAAZC,EAACC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GACpBG,EAAAA,EAAAA,IAAO,GACP,IAAIC,EAAS,IAAKnB,KAAYc,GAE9BM,EAAAA,EAAUC,IAAIC,EAAAA,QAAOC,QAASJ,GAAQK,MAAMC,IACtCA,EAAIC,UACNnB,EACEkB,EAAInB,KAAKqB,KAAKC,GAELA,KAGXnB,EAASgB,EAAIjB,SAEfU,EAAAA,EAAAA,IAAO,EAAM,GAEjB,GAoCA,OAPAW,EAAAA,EAAAA,YAAU,KACJjC,GAAQA,EAAKkC,WACf7B,EAAU,IAAKD,EAASK,OAAQN,IAChCa,EAAQ,CAAEP,OAAQN,EAAkBI,KAAM,IAC5C,GACC,KAGD4B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,QAAI,CACHC,MArCQA,KACZ,IAAIC,EAAI,CACNC,SAAU,GACVhC,OAAQ,GACRiC,OAAQ,GACRnC,KAAM,GAERF,EAAU,IAAKD,KAAYoC,IAC3BxB,EAAQ,IAAKwB,GAAI,EA8BbG,UA/EaC,IACjB,IAAIC,EAAM,UAIV,OAHIzC,EAAQwC,KAAOA,GAAyB,OAAlBxC,EAAQ0C,OAAiBD,EAAM,aAChDzC,EAAQwC,KAAOA,GAAyB,QAAlBxC,EAAQ0C,SACrCD,EAAM,gBACD,MAAQA,CAAG,EA2EdE,QAxEWH,IACf,IAAIE,EAAS,MACT1C,EAAQwC,KAAOA,IAEfE,EADoB,OAAlB1C,EAAQ0C,OACD,OAEA,OAIb,IAAIE,EAAS,GAAGJ,KAAOE,IACvBzC,EAAU,IAAKD,EAAS4C,SAAQJ,MAAKE,WACrC9B,EAAQ,CAAEgC,SAAQJ,MAAKE,UAAS,EA6D5BG,QApBU,WAAe,IAADC,EAAAC,EAAA,IAAbP,EAAGzB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACjBiC,EAAkB,OAAJpD,QAAI,IAAJA,GAAU,QAANkD,EAAJlD,EAAMqD,YAAI,IAAAH,GAAa,QAAbC,EAAVD,EAAYE,mBAAW,IAAAD,OAAnB,EAAJA,EAA0B,GACxCG,EAAmB,OAAXF,QAAW,IAAXA,OAAW,EAAXA,EAAcR,GAE1B,MADiB,SAAb5C,EAAKqD,OAAiBC,GAAQ,GAC3BA,CACT,EAgBMlD,QAASA,EACTC,UAAWA,EACXkB,OAhCS,WAAa,IACtBiB,EAAI,CACNjC,KAAM,KAFOY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAKnBd,EAAU,IAAKD,KAAYoC,IAC3BxB,EAAQ,IAAKwB,GACf,EA0BM1B,QAASA,EACTJ,KAAMA,EACNE,MAAOA,EACPD,QAASA,EACTK,QAASA,KAEV,C","sources":["Pages/Faq/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ApiClient from \"../../methods/api/apiClient\";\nimport loader from \"../../methods/loader\";\nimport Html from \"./html\";\nimport { useNavigate } from \"react-router-dom\";\nimport shared from \"./shared\";\nimport { useSelector } from \"react-redux\";\n\nconst Faqs = () => {\n  const user = useSelector((state) => state.user);\n  const searchState = { data: \"\" };\n  const [filters, setFilter] = useState({ page: 1, count: 10, search: \"\" });\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loaging, setLoader] = useState(true);\n  const history = useNavigate();\n\n  const sortClass = (key) => {\n    let cls = \"fa-sort\";\n    if (filters.key == key && filters.sorder == \"asc\") cls = \"fa-sort-up\";\n    else if (filters.key == key && filters.sorder == \"desc\")\n      cls = \"fa-sort-down\";\n    return \"fa \" + cls;\n  };\n\n  const sorting = (key) => {\n    let sorder = \"asc\";\n    if (filters.key == key) {\n      if (filters.sorder == \"asc\") {\n        sorder = \"desc\";\n      } else {\n        sorder = \"asc\";\n      }\n    }\n\n    let sortBy = `${key} ${sorder}`;\n    setFilter({ ...filters, sortBy, key, sorder });\n    getData({ sortBy, key, sorder });\n  };\n\n  const getData = (p = {}) => {\n    loader(true);\n    let filter = { ...filters, ...p };\n\n    ApiClient.get(shared.listApi, filter).then((res) => {\n      if (res.success) {\n        setData(\n          res.data.map((itm) => {\n            // itm.id = itm.id;\n            return itm;\n          })\n        );\n        setTotal(res.total);\n      }\n      loader(false);\n    });\n  };\n\n  const clear = () => {\n    let f = {\n      category: \"\",\n      search: \"\",\n      status: \"\",\n      page: 1,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const filter = (p = {}) => {\n    let f = {\n      page: 1,\n      ...p,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const isAllow = (key = \"\") => {\n    let permissions = user?.role?.permissions?.[0];\n    let value = permissions?.[key];\n    if (user.role == \"admin\") value = true;\n    return value;\n  };\n\n  useEffect(() => {\n    if (user && user.loggedIn) {\n      setFilter({ ...filters, search: searchState.data });\n      getData({ search: searchState.data, page: 1 });\n    }\n  }, []);\n\n  return (\n    <>\n      <Html\n        clear={clear}\n        sortClass={sortClass}\n        sorting={sorting}\n        isAllow={isAllow}\n        filters={filters}\n        setFilter={setFilter}\n        filter={filter}\n        loaging={loaging}\n        data={data}\n        total={total}\n        setData={setData}\n        getData={getData}\n      />\n    </>\n  );\n};\n\nexport default Faqs;\n"],"names":["Faqs","user","useSelector","state","searchState","filters","setFilter","useState","page","count","search","data","setData","total","setTotal","loaging","setLoader","getData","useNavigate","p","arguments","length","undefined","loader","filter","ApiClient","get","shared","listApi","then","res","success","map","itm","useEffect","loggedIn","_jsx","_Fragment","children","Html","clear","f","category","status","sortClass","key","cls","sorder","sorting","sortBy","isAllow","_user$role","_user$role$permission","permissions","role","value"],"sourceRoot":""}