{"version":3,"file":"static/js/9730.a15af0c9.chunk.js","mappings":"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","sources":["../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../node_modules/@headlessui/react/dist/hooks/use-element-size.js","../node_modules/@headlessui/react/dist/utils/get-text-value.js","../node_modules/@headlessui/react/dist/hooks/use-text-value.js","../node_modules/@headlessui/react/dist/hooks/use-tracked-pointer.js","../node_modules/@floating-ui/react/dist/floating-ui.react.utils.mjs","../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs","../node_modules/@floating-ui/react/dist/floating-ui.react.mjs","../node_modules/@headlessui/react/dist/internal/floating.js","../node_modules/@headlessui/react/dist/utils/calculate-active-index.js","../node_modules/@headlessui/react/dist/internal/id.js","../node_modules/@headlessui/react/dist/components/label/label.js","../node_modules/@headlessui/react/dist/components/menu/menu.js","../node_modules/@headlessui/react/dist/hooks/use-did-element-move.js","../node_modules/@headlessui/react/dist/hooks/use-tree-walker.js"],"sourcesContent":["import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  let htmlX = 0;\n  let htmlY = 0;\n  if (documentElement && !isOffsetParentAnElement && !isFixed) {\n    const htmlRect = documentElement.getBoundingClientRect();\n    htmlY = htmlRect.top + scroll.scrollTop;\n    htmlX = htmlRect.left + scroll.scrollLeft -\n    // RTL <body> scrollbar.\n    getWindowScrollBarX(documentElement, htmlRect);\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlX;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlY;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import{useMemo as o,useReducer as h}from\"react\";import{useIsoMorphicEffect as s}from'./use-iso-morphic-effect.js';function f(e){if(e===null)return{width:0,height:0};let{width:t,height:r}=e.getBoundingClientRect();return{width:t,height:r}}function d(e,t=!1){let[r,u]=h(()=>({}),{}),i=o(()=>f(e),[e,r]);return s(()=>{if(!e)return;let n=new ResizeObserver(u);return n.observe(e),()=>{n.disconnect()}},[e]),t?{width:`${i.width}px`,height:`${i.height}px`}:i}export{d as useElementSize};\n","let a=/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g;function o(e){var r,i;let n=(r=e.innerText)!=null?r:\"\",t=e.cloneNode(!0);if(!(t instanceof HTMLElement))return n;let u=!1;for(let f of t.querySelectorAll('[hidden],[aria-hidden],[role=\"img\"]'))f.remove(),u=!0;let l=u?(i=t.innerText)!=null?i:\"\":n;return a.test(l)&&(l=l.replace(a,\"\")),l}function g(e){let n=e.getAttribute(\"aria-label\");if(typeof n==\"string\")return n.trim();let t=e.getAttribute(\"aria-labelledby\");if(t){let u=t.split(\" \").map(l=>{let r=document.getElementById(l);if(r){let i=r.getAttribute(\"aria-label\");return typeof i==\"string\"?i.trim():o(r).trim()}return null}).filter(Boolean);if(u.length>0)return u.join(\", \")}return o(e).trim()}export{g as getTextValue};\n","import{useRef as l}from\"react\";import{getTextValue as i}from'../utils/get-text-value.js';import{useEvent as o}from'./use-event.js';function s(c){let t=l(\"\"),r=l(\"\");return o(()=>{let e=c.current;if(!e)return\"\";let u=e.innerText;if(t.current===u)return r.current;let n=i(e).trim().toLowerCase();return t.current=u,r.current=n,n})}export{s as useTextValue};\n","import{useRef as o}from\"react\";function t(e){return[e.screenX,e.screenY]}function u(){let e=o([-1,-1]);return{wasMoved(r){let n=t(r);return e.current[0]===n[0]&&e.current[1]===n[1]?!1:(e.current=n,!0)},update(r){e.current=t(r)}}}export{u as useTrackedPointer};\n","import { isShadowRoot, isHTMLElement } from '@floating-ui/utils/dom';\n\nfunction activeElement(doc) {\n  let activeElement = doc.activeElement;\n  while (((_activeElement = activeElement) == null || (_activeElement = _activeElement.shadowRoot) == null ? void 0 : _activeElement.activeElement) != null) {\n    var _activeElement;\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n  return activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n\n  // then fallback to custom implementation with Shadow DOM support\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) {\n        return true;\n      }\n      // @ts-ignore\n      next = next.parentNode || next.host;\n    }\n  }\n\n  // Give up, the result is false\n  return false;\n}\n// Avoid Chrome DevTools blue warning.\nfunction getPlatform() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.platform) {\n    return uaData.platform;\n  }\n  return navigator.platform;\n}\nfunction getUserAgent() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(_ref => {\n      let {\n        brand,\n        version\n      } = _ref;\n      return brand + \"/\" + version;\n    }).join(' ');\n  }\n  return navigator.userAgent;\n}\n\n// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts\nfunction isVirtualClick(event) {\n  // FIXME: Firefox is now emitting a deprecation warning for `mozInputSource`.\n  // Try to find a workaround for this. `react-aria` source still has the check.\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  if (isAndroid() && event.pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isVirtualPointerEvent(event) {\n  if (isJSDOM()) return false;\n  return !isAndroid() && event.width === 0 && event.height === 0 || isAndroid() && event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'mouse' ||\n  // iOS VoiceOver returns 0.333• for width/height.\n  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'touch';\n}\nfunction isSafari() {\n  // Chrome DevTools does not complain about navigator.vendor\n  return /apple/i.test(navigator.vendor);\n}\nfunction isAndroid() {\n  const re = /android/i;\n  return re.test(getPlatform()) || re.test(getUserAgent());\n}\nfunction isMac() {\n  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;\n}\nfunction isJSDOM() {\n  return getUserAgent().includes('jsdom/');\n}\nfunction isMouseLikePointerType(pointerType, strict) {\n  // On some Linux machines with Chromium, mouse inputs return a `pointerType`\n  // of \"pen\": https://github.com/floating-ui/floating-ui/issues/2015\n  const values = ['mouse', 'pen'];\n  if (!strict) {\n    values.push('', undefined);\n  }\n  return values.includes(pointerType);\n}\nfunction isReactEvent(event) {\n  return 'nativeEvent' in event;\n}\nfunction isRootElement(element) {\n  return element.matches('html,body');\n}\nfunction getDocument(node) {\n  return (node == null ? void 0 : node.ownerDocument) || document;\n}\nfunction isEventTargetWithin(event, node) {\n  if (node == null) {\n    return false;\n  }\n  if ('composedPath' in event) {\n    return event.composedPath().includes(node);\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't\n  const e = event;\n  return e.target != null && node.contains(e.target);\n}\nfunction getTarget(event) {\n  if ('composedPath' in event) {\n    return event.composedPath()[0];\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support\n  // `composedPath()`, but browsers without shadow DOM don't.\n  return event.target;\n}\nconst TYPEABLE_SELECTOR = \"input:not([type='hidden']):not([disabled]),\" + \"[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\";\nfunction isTypeableElement(element) {\n  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\nfunction isTypeableCombobox(element) {\n  if (!element) return false;\n  return element.getAttribute('role') === 'combobox' && isTypeableElement(element);\n}\n\nexport { TYPEABLE_SELECTOR, activeElement, contains, getDocument, getPlatform, getTarget, getUserAgent, isAndroid, isEventTargetWithin, isJSDOM, isMac, isMouseLikePointerType, isReactEvent, isRootElement, isSafari, isTypeableCombobox, isTypeableElement, isVirtualClick, isVirtualPointerEvent, stopEvent };\n","import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n","import * as React from 'react';\nimport { useLayoutEffect, useEffect, useRef } from 'react';\nimport { stopEvent, getDocument, isMouseLikePointerType, contains, activeElement, isSafari, isTypeableCombobox, isVirtualClick, isVirtualPointerEvent, getTarget, getPlatform, isTypeableElement, isReactEvent, isRootElement, isEventTargetWithin, isMac, getUserAgent } from '@floating-ui/react/utils';\nimport { floor, evaluate, max, min, round } from '@floating-ui/utils';\nimport { getComputedStyle, isElement, getNodeName, isHTMLElement, getWindow, isLastTraversableNode, getParentNode, isWebKit } from '@floating-ui/utils/dom';\nimport { tabbable, isTabbable } from 'tabbable';\nimport * as ReactDOM from 'react-dom';\nimport { getOverflowAncestors, useFloating as useFloating$1, offset, detectOverflow } from '@floating-ui/react-dom';\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/react-dom';\n\n/**\n * Merges an array of refs into a single memoized callback ref or `null`.\n * @see https://floating-ui.com/docs/react-utils#usemergerefs\n */\nfunction useMergeRefs(refs) {\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      refs.forEach(ref => {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref != null) {\n          ref.current = value;\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nconst SafeReact = {\n  ...React\n};\n\nconst useInsertionEffect = SafeReact.useInsertionEffect;\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEffectEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\n\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nfunction isDifferentRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction getMinIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\nfunction findNonDisabledIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  const list = listRef.current;\n  let index = startingIndex;\n  do {\n    index += decrement ? -amount : amount;\n  } while (index >= 0 && index <= list.length - 1 && isDisabled(list, index, disabledIndices));\n  return index;\n}\nfunction getGridNavigatedIndex(elementsRef, _ref) {\n  let {\n    event,\n    orientation,\n    loop,\n    cols,\n    disabledIndices,\n    minIndex,\n    maxIndex,\n    prevIndex,\n    stopEvent: stop = false\n  } = _ref;\n  let nextIndex = prevIndex;\n  if (event.key === ARROW_UP) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = maxIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: nextIndex,\n        amount: cols,\n        decrement: true,\n        disabledIndices\n      });\n      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {\n        const col = prevIndex % cols;\n        const maxCol = maxIndex % cols;\n        const offset = maxIndex - (maxCol - col);\n        if (maxCol === col) {\n          nextIndex = maxIndex;\n        } else {\n          nextIndex = maxCol > col ? offset : offset - cols;\n        }\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n  if (event.key === ARROW_DOWN) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = minIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: prevIndex,\n        amount: cols,\n        disabledIndices\n      });\n      if (loop && prevIndex + cols > maxIndex) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex % cols - cols,\n          amount: cols,\n          disabledIndices\n        });\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n\n  // Remains on the same row/column.\n  if (orientation === 'both') {\n    const prevRow = floor(prevIndex / cols);\n    if (event.key === ARROW_RIGHT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== cols - 1) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex - prevIndex % cols - 1,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    if (event.key === ARROW_LEFT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== 0) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          decrement: true,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex + (cols - prevIndex % cols),\n            decrement: true,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex + (cols - prevIndex % cols),\n          decrement: true,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    const lastRow = floor(maxIndex / cols) === prevRow;\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      if (loop && lastRow) {\n        nextIndex = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      } else {\n        nextIndex = prevIndex;\n      }\n    }\n  }\n  return nextIndex;\n}\n\n/** For each cell index, gets the item index that occupies that cell */\nfunction buildCellMap(sizes, cols, dense) {\n  const cellMap = [];\n  let startIndex = 0;\n  sizes.forEach((_ref2, index) => {\n    let {\n      width,\n      height\n    } = _ref2;\n    if (width > cols) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw new Error(\"[Floating UI]: Invalid grid - item width at index \" + index + \" is greater than grid columns\");\n      }\n    }\n    let itemPlaced = false;\n    if (dense) {\n      startIndex = 0;\n    }\n    while (!itemPlaced) {\n      const targetCells = [];\n      for (let i = 0; i < width; i++) {\n        for (let j = 0; j < height; j++) {\n          targetCells.push(startIndex + i + j * cols);\n        }\n      }\n      if (startIndex % cols + width <= cols && targetCells.every(cell => cellMap[cell] == null)) {\n        targetCells.forEach(cell => {\n          cellMap[cell] = index;\n        });\n        itemPlaced = true;\n      } else {\n        startIndex++;\n      }\n    }\n  });\n\n  // convert into a non-sparse array\n  return [...cellMap];\n}\n\n/** Gets cell index of an item's corner or -1 when index is -1. */\nfunction getCellIndexOfCorner(index, sizes, cellMap, cols, corner) {\n  if (index === -1) return -1;\n  const firstCellIndex = cellMap.indexOf(index);\n  const sizeItem = sizes[index];\n  switch (corner) {\n    case 'tl':\n      return firstCellIndex;\n    case 'tr':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + sizeItem.width - 1;\n    case 'bl':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + (sizeItem.height - 1) * cols;\n    case 'br':\n      return cellMap.lastIndexOf(index);\n  }\n}\n\n/** Gets all cell indices that correspond to the specified indices */\nfunction getCellIndices(indices, cellMap) {\n  return cellMap.flatMap((index, cellIndex) => indices.includes(index) ? [cellIndex] : []);\n}\nfunction isDisabled(list, index, disabledIndices) {\n  if (disabledIndices) {\n    return disabledIndices.includes(index);\n  }\n  const element = list[index];\n  return element == null || element.hasAttribute('disabled') || element.getAttribute('aria-disabled') === 'true';\n}\n\nlet rafId = 0;\nfunction enqueueFocus(el, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    preventScroll = false,\n    cancelPrevious = true,\n    sync = false\n  } = options;\n  cancelPrevious && cancelAnimationFrame(rafId);\n  const exec = () => el == null ? void 0 : el.focus({\n    preventScroll\n  });\n  if (sync) {\n    exec();\n  } else {\n    rafId = requestAnimationFrame(exec);\n  }\n}\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction sortByDocumentPosition(a, b) {\n  const position = a.compareDocumentPosition(b);\n  if (position & Node.DOCUMENT_POSITION_FOLLOWING || position & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n    return -1;\n  }\n  if (position & Node.DOCUMENT_POSITION_PRECEDING || position & Node.DOCUMENT_POSITION_CONTAINS) {\n    return 1;\n  }\n  return 0;\n}\nfunction areMapsEqual(map1, map2) {\n  if (map1.size !== map2.size) {\n    return false;\n  }\n  for (const [key, value] of map1.entries()) {\n    if (value !== map2.get(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nconst FloatingListContext = /*#__PURE__*/React.createContext({\n  register: () => {},\n  unregister: () => {},\n  map: /*#__PURE__*/new Map(),\n  elementsRef: {\n    current: []\n  }\n});\n/**\n * Provides context for a list of items within the floating element.\n * @see https://floating-ui.com/docs/FloatingList\n */\nfunction FloatingList(props) {\n  const {\n    children,\n    elementsRef,\n    labelsRef\n  } = props;\n  const [map, setMap] = React.useState(() => new Map());\n  const register = React.useCallback(node => {\n    setMap(prevMap => new Map(prevMap).set(node, null));\n  }, []);\n  const unregister = React.useCallback(node => {\n    setMap(prevMap => {\n      const map = new Map(prevMap);\n      map.delete(node);\n      return map;\n    });\n  }, []);\n  index(() => {\n    const newMap = new Map(map);\n    const nodes = Array.from(newMap.keys()).sort(sortByDocumentPosition);\n    nodes.forEach((node, index) => {\n      newMap.set(node, index);\n    });\n    if (!areMapsEqual(map, newMap)) {\n      setMap(newMap);\n    }\n  }, [map]);\n  return /*#__PURE__*/React.createElement(FloatingListContext.Provider, {\n    value: React.useMemo(() => ({\n      register,\n      unregister,\n      map,\n      elementsRef,\n      labelsRef\n    }), [register, unregister, map, elementsRef, labelsRef])\n  }, children);\n}\n/**\n * Used to register a list item and its index (DOM position) in the\n * `FloatingList`.\n * @see https://floating-ui.com/docs/FloatingList#uselistitem\n */\nfunction useListItem(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    label\n  } = props;\n  const {\n    register,\n    unregister,\n    map,\n    elementsRef,\n    labelsRef\n  } = React.useContext(FloatingListContext);\n  const [index$1, setIndex] = React.useState(null);\n  const componentRef = React.useRef(null);\n  const ref = React.useCallback(node => {\n    componentRef.current = node;\n    if (index$1 !== null) {\n      elementsRef.current[index$1] = node;\n      if (labelsRef) {\n        var _node$textContent;\n        const isLabelDefined = label !== undefined;\n        labelsRef.current[index$1] = isLabelDefined ? label : (_node$textContent = node == null ? void 0 : node.textContent) != null ? _node$textContent : null;\n      }\n    }\n  }, [index$1, elementsRef, labelsRef, label]);\n  index(() => {\n    const node = componentRef.current;\n    if (node) {\n      register(node);\n      return () => {\n        unregister(node);\n      };\n    }\n  }, [register, unregister]);\n  index(() => {\n    const index = componentRef.current ? map.get(componentRef.current) : null;\n    if (index != null) {\n      setIndex(index);\n    }\n  }, [map]);\n  return React.useMemo(() => ({\n    ref,\n    index: index$1 == null ? -1 : index$1\n  }), [index$1, ref]);\n}\n\nfunction renderJsx(render, computedProps) {\n  if (typeof render === 'function') {\n    return render(computedProps);\n  }\n  if (render) {\n    return /*#__PURE__*/React.cloneElement(render, computedProps);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", computedProps);\n}\nconst CompositeContext = /*#__PURE__*/React.createContext({\n  activeIndex: 0,\n  onNavigate: () => {}\n});\nconst horizontalKeys = [ARROW_LEFT, ARROW_RIGHT];\nconst verticalKeys = [ARROW_UP, ARROW_DOWN];\nconst allKeys = [...horizontalKeys, ...verticalKeys];\n\n/**\n * Creates a single tab stop whose items are navigated by arrow keys, which\n * provides list navigation outside of floating element contexts.\n *\n * This is useful to enable navigation of a list of items that aren’t part of a\n * floating element. A menubar is an example of a composite, with each reference\n * element being an item.\n * @see https://floating-ui.com/docs/Composite\n */\nconst Composite = /*#__PURE__*/React.forwardRef(function Composite(props, forwardedRef) {\n  const {\n    render,\n    orientation = 'both',\n    loop = true,\n    cols = 1,\n    disabledIndices,\n    activeIndex: externalActiveIndex,\n    onNavigate: externalSetActiveIndex,\n    itemSizes,\n    dense = false,\n    ...domProps\n  } = props;\n  const [internalActiveIndex, internalSetActiveIndex] = React.useState(0);\n  const activeIndex = externalActiveIndex != null ? externalActiveIndex : internalActiveIndex;\n  const onNavigate = useEffectEvent(externalSetActiveIndex != null ? externalSetActiveIndex : internalSetActiveIndex);\n  const elementsRef = React.useRef([]);\n  const renderElementProps = render && typeof render !== 'function' ? render.props : {};\n  const contextValue = React.useMemo(() => ({\n    activeIndex,\n    onNavigate\n  }), [activeIndex, onNavigate]);\n  const isGrid = cols > 1;\n  function handleKeyDown(event) {\n    if (!allKeys.includes(event.key)) return;\n    let nextIndex = activeIndex;\n    const minIndex = getMinIndex(elementsRef, disabledIndices);\n    const maxIndex = getMaxIndex(elementsRef, disabledIndices);\n    if (isGrid) {\n      const sizes = itemSizes || Array.from({\n        length: elementsRef.current.length\n      }, () => ({\n        width: 1,\n        height: 1\n      }));\n      // To calculate movements on the grid, we use hypothetical cell indices\n      // as if every item was 1x1, then convert back to real indices.\n      const cellMap = buildCellMap(sizes, cols, dense);\n      const minGridIndex = cellMap.findIndex(index => index != null && !isDisabled(elementsRef.current, index, disabledIndices));\n      // last enabled index\n      const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !isDisabled(elementsRef.current, index, disabledIndices) ? cellIndex : foundIndex, -1);\n      const maybeNextIndex = cellMap[getGridNavigatedIndex({\n        current: cellMap.map(itemIndex => itemIndex ? elementsRef.current[itemIndex] : null)\n      }, {\n        event,\n        orientation,\n        loop,\n        cols,\n        // treat undefined (empty grid spaces) as disabled indices so we\n        // don't end up in them\n        disabledIndices: getCellIndices([...(disabledIndices || elementsRef.current.map((_, index) => isDisabled(elementsRef.current, index) ? index : undefined)), undefined], cellMap),\n        minIndex: minGridIndex,\n        maxIndex: maxGridIndex,\n        prevIndex: getCellIndexOfCorner(activeIndex > maxIndex ? minIndex : activeIndex, sizes, cellMap, cols,\n        // use a corner matching the edge closest to the direction we're\n        // moving in so we don't end up in the same item. Prefer\n        // top/left over bottom/right.\n        event.key === ARROW_DOWN ? 'bl' : event.key === ARROW_RIGHT ? 'tr' : 'tl')\n      })];\n      if (maybeNextIndex != null) {\n        nextIndex = maybeNextIndex;\n      }\n    }\n    const toEndKeys = {\n      horizontal: [ARROW_RIGHT],\n      vertical: [ARROW_DOWN],\n      both: [ARROW_RIGHT, ARROW_DOWN]\n    }[orientation];\n    const toStartKeys = {\n      horizontal: [ARROW_LEFT],\n      vertical: [ARROW_UP],\n      both: [ARROW_LEFT, ARROW_UP]\n    }[orientation];\n    const preventedKeys = isGrid ? allKeys : {\n      horizontal: horizontalKeys,\n      vertical: verticalKeys,\n      both: allKeys\n    }[orientation];\n    if (nextIndex === activeIndex && [...toEndKeys, ...toStartKeys].includes(event.key)) {\n      if (loop && nextIndex === maxIndex && toEndKeys.includes(event.key)) {\n        nextIndex = minIndex;\n      } else if (loop && nextIndex === minIndex && toStartKeys.includes(event.key)) {\n        nextIndex = maxIndex;\n      } else {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: nextIndex,\n          decrement: toStartKeys.includes(event.key),\n          disabledIndices\n        });\n      }\n    }\n    if (nextIndex !== activeIndex && !isIndexOutOfBounds(elementsRef, nextIndex)) {\n      event.stopPropagation();\n      if (preventedKeys.includes(event.key)) {\n        event.preventDefault();\n      }\n      onNavigate(nextIndex);\n\n      // Wait for FocusManager `returnFocus` to execute.\n      queueMicrotask(() => {\n        enqueueFocus(elementsRef.current[nextIndex]);\n      });\n    }\n  }\n  const computedProps = {\n    ...domProps,\n    ...renderElementProps,\n    ref: forwardedRef,\n    'aria-orientation': orientation === 'both' ? undefined : orientation,\n    onKeyDown(e) {\n      domProps.onKeyDown == null || domProps.onKeyDown(e);\n      renderElementProps.onKeyDown == null || renderElementProps.onKeyDown(e);\n      handleKeyDown(e);\n    }\n  };\n  return /*#__PURE__*/React.createElement(CompositeContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(FloatingList, {\n    elementsRef: elementsRef\n  }, renderJsx(render, computedProps)));\n});\n/**\n * @see https://floating-ui.com/docs/Composite\n */\nconst CompositeItem = /*#__PURE__*/React.forwardRef(function CompositeItem(props, forwardedRef) {\n  const {\n    render,\n    ...domProps\n  } = props;\n  const renderElementProps = render && typeof render !== 'function' ? render.props : {};\n  const {\n    activeIndex,\n    onNavigate\n  } = React.useContext(CompositeContext);\n  const {\n    ref,\n    index\n  } = useListItem();\n  const mergedRef = useMergeRefs([ref, forwardedRef, renderElementProps.ref]);\n  const isActive = activeIndex === index;\n  const computedProps = {\n    ...domProps,\n    ...renderElementProps,\n    ref: mergedRef,\n    tabIndex: isActive ? 0 : -1,\n    'data-active': isActive ? '' : undefined,\n    onFocus(e) {\n      domProps.onFocus == null || domProps.onFocus(e);\n      renderElementProps.onFocus == null || renderElementProps.onFocus(e);\n      onNavigate(index);\n    }\n  };\n  return renderJsx(render, computedProps);\n});\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nlet serverHandoffComplete = false;\nlet count = 0;\nconst genId = () => // Ensure the id is unique with multiple independent versions of Floating UI\n// on <React 18\n\"floating-ui-\" + Math.random().toString(36).slice(2, 6) + count++;\nfunction useFloatingId() {\n  const [id, setId] = React.useState(() => serverHandoffComplete ? genId() : undefined);\n  index(() => {\n    if (id == null) {\n      setId(genId());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    serverHandoffComplete = true;\n  }, []);\n  return id;\n}\nconst useReactId = SafeReact.useId;\n\n/**\n * Uses React 18's built-in `useId()` when available, or falls back to a\n * slightly less performant (requiring a double render) implementation for\n * earlier React versions.\n * @see https://floating-ui.com/docs/react-utils#useid\n */\nconst useId = useReactId || useFloatingId;\n\nlet devMessageSet;\nif (process.env.NODE_ENV !== \"production\") {\n  devMessageSet = /*#__PURE__*/new Set();\n}\nfunction warn() {\n  var _devMessageSet;\n  for (var _len = arguments.length, messages = new Array(_len), _key = 0; _key < _len; _key++) {\n    messages[_key] = arguments[_key];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet = devMessageSet) != null && _devMessageSet.has(message))) {\n    var _devMessageSet2;\n    (_devMessageSet2 = devMessageSet) == null || _devMessageSet2.add(message);\n    console.warn(message);\n  }\n}\nfunction error() {\n  var _devMessageSet3;\n  for (var _len2 = arguments.length, messages = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    messages[_key2] = arguments[_key2];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet3 = devMessageSet) != null && _devMessageSet3.has(message))) {\n    var _devMessageSet4;\n    (_devMessageSet4 = devMessageSet) == null || _devMessageSet4.add(message);\n    console.error(message);\n  }\n}\n\n/**\n * Renders a pointing arrow triangle.\n * @see https://floating-ui.com/docs/FloatingArrow\n */\nconst FloatingArrow = /*#__PURE__*/React.forwardRef(function FloatingArrow(props, ref) {\n  const {\n    context: {\n      placement,\n      elements: {\n        floating\n      },\n      middlewareData: {\n        arrow,\n        shift\n      }\n    },\n    width = 14,\n    height = 7,\n    tipRadius = 0,\n    strokeWidth = 0,\n    staticOffset,\n    stroke,\n    d,\n    style: {\n      transform,\n      ...restStyle\n    } = {},\n    ...rest\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!ref) {\n      warn('The `ref` prop is required for `FloatingArrow`.');\n    }\n  }\n  const clipPathId = useId();\n  const [isRTL, setIsRTL] = React.useState(false);\n\n  // https://github.com/floating-ui/floating-ui/issues/2932\n  index(() => {\n    if (!floating) return;\n    const isRTL = getComputedStyle(floating).direction === 'rtl';\n    if (isRTL) {\n      setIsRTL(true);\n    }\n  }, [floating]);\n  if (!floating) {\n    return null;\n  }\n  const [side, alignment] = placement.split('-');\n  const isVerticalSide = side === 'top' || side === 'bottom';\n  let computedStaticOffset = staticOffset;\n  if (isVerticalSide && shift != null && shift.x || !isVerticalSide && shift != null && shift.y) {\n    computedStaticOffset = null;\n  }\n\n  // Strokes must be double the border width, this ensures the stroke's width\n  // works as you'd expect.\n  const computedStrokeWidth = strokeWidth * 2;\n  const halfStrokeWidth = computedStrokeWidth / 2;\n  const svgX = width / 2 * (tipRadius / -8 + 1);\n  const svgY = height / 2 * tipRadius / 4;\n  const isCustomShape = !!d;\n  const yOffsetProp = computedStaticOffset && alignment === 'end' ? 'bottom' : 'top';\n  let xOffsetProp = computedStaticOffset && alignment === 'end' ? 'right' : 'left';\n  if (computedStaticOffset && isRTL) {\n    xOffsetProp = alignment === 'end' ? 'left' : 'right';\n  }\n  const arrowX = (arrow == null ? void 0 : arrow.x) != null ? computedStaticOffset || arrow.x : '';\n  const arrowY = (arrow == null ? void 0 : arrow.y) != null ? computedStaticOffset || arrow.y : '';\n  const dValue = d || 'M0,0' + (\" H\" + width) + (\" L\" + (width - svgX) + \",\" + (height - svgY)) + (\" Q\" + width / 2 + \",\" + height + \" \" + svgX + \",\" + (height - svgY)) + ' Z';\n  const rotation = {\n    top: isCustomShape ? 'rotate(180deg)' : '',\n    left: isCustomShape ? 'rotate(90deg)' : 'rotate(-90deg)',\n    bottom: isCustomShape ? '' : 'rotate(180deg)',\n    right: isCustomShape ? 'rotate(-90deg)' : 'rotate(90deg)'\n  }[side];\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, rest, {\n    \"aria-hidden\": true,\n    ref: ref,\n    width: isCustomShape ? width : width + computedStrokeWidth,\n    height: width,\n    viewBox: \"0 0 \" + width + \" \" + (height > width ? height : width),\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      [xOffsetProp]: arrowX,\n      [yOffsetProp]: arrowY,\n      [side]: isVerticalSide || isCustomShape ? '100%' : \"calc(100% - \" + computedStrokeWidth / 2 + \"px)\",\n      transform: [rotation, transform].filter(t => !!t).join(' '),\n      ...restStyle\n    }\n  }), computedStrokeWidth > 0 && /*#__PURE__*/React.createElement(\"path\", {\n    clipPath: \"url(#\" + clipPathId + \")\",\n    fill: \"none\",\n    stroke: stroke\n    // Account for the stroke on the fill path rendered below.\n    ,\n    strokeWidth: computedStrokeWidth + (d ? 0 : 1),\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: computedStrokeWidth && !d ? rest.fill : 'none',\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: clipPathId\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: -halfStrokeWidth,\n    y: halfStrokeWidth * (isCustomShape ? -1 : 1),\n    width: width + computedStrokeWidth,\n    height: width\n  })));\n});\n\nfunction createPubSub() {\n  const map = new Map();\n  return {\n    emit(event, data) {\n      var _map$get;\n      (_map$get = map.get(event)) == null || _map$get.forEach(handler => handler(data));\n    },\n    on(event, listener) {\n      map.set(event, [...(map.get(event) || []), listener]);\n    },\n    off(event, listener) {\n      var _map$get2;\n      map.set(event, ((_map$get2 = map.get(event)) == null ? void 0 : _map$get2.filter(l => l !== listener)) || []);\n    }\n  };\n}\n\nconst FloatingNodeContext = /*#__PURE__*/React.createContext(null);\nconst FloatingTreeContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the parent node id for nested floating elements, if available.\n * Returns `null` for top-level floating elements.\n */\nconst useFloatingParentNodeId = () => {\n  var _React$useContext;\n  return ((_React$useContext = React.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;\n};\n\n/**\n * Returns the nearest floating tree context, if available.\n */\nconst useFloatingTree = () => React.useContext(FloatingTreeContext);\n\n/**\n * Registers a node into the `FloatingTree`, returning its id.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction useFloatingNodeId(customParentId) {\n  const id = useId();\n  const tree = useFloatingTree();\n  const reactParentId = useFloatingParentNodeId();\n  const parentId = customParentId || reactParentId;\n  index(() => {\n    const node = {\n      id,\n      parentId\n    };\n    tree == null || tree.addNode(node);\n    return () => {\n      tree == null || tree.removeNode(node);\n    };\n  }, [tree, id, parentId]);\n  return id;\n}\n/**\n * Provides parent node context for nested floating elements.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingNode(props) {\n  const {\n    children,\n    id\n  } = props;\n  const parentId = useFloatingParentNodeId();\n  return /*#__PURE__*/React.createElement(FloatingNodeContext.Provider, {\n    value: React.useMemo(() => ({\n      id,\n      parentId\n    }), [id, parentId])\n  }, children);\n}\n/**\n * Provides context for nested floating elements when they are not children of\n * each other on the DOM.\n * This is not necessary in all cases, except when there must be explicit communication between parent and child floating elements. It is necessary for:\n * - The `bubbles` option in the `useDismiss()` Hook\n * - Nested virtual list navigation\n * - Nested floating elements that each open on hover\n * - Custom communication between parent and child floating elements\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingTree(props) {\n  const {\n    children\n  } = props;\n  const nodesRef = React.useRef([]);\n  const addNode = React.useCallback(node => {\n    nodesRef.current = [...nodesRef.current, node];\n  }, []);\n  const removeNode = React.useCallback(node => {\n    nodesRef.current = nodesRef.current.filter(n => n !== node);\n  }, []);\n  const events = React.useState(() => createPubSub())[0];\n  return /*#__PURE__*/React.createElement(FloatingTreeContext.Provider, {\n    value: React.useMemo(() => ({\n      nodesRef,\n      addNode,\n      removeNode,\n      events\n    }), [addNode, removeNode, events])\n  }, children);\n}\n\nfunction createAttribute(name) {\n  return \"data-floating-ui-\" + name;\n}\n\nfunction useLatestRef(value) {\n  const ref = useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\nconst safePolygonIdentifier = /*#__PURE__*/createAttribute('safe-polygon');\nfunction getDelay(value, prop, pointerType) {\n  if (pointerType && !isMouseLikePointerType(pointerType)) {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return value == null ? void 0 : value[prop];\n}\n/**\n * Opens the floating element while hovering over the reference element, like\n * CSS `:hover`.\n * @see https://floating-ui.com/docs/useHover\n */\nfunction useHover(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    delay = 0,\n    handleClose = null,\n    mouseOnly = false,\n    restMs = 0,\n    move = true\n  } = props;\n  const tree = useFloatingTree();\n  const parentId = useFloatingParentNodeId();\n  const handleCloseRef = useLatestRef(handleClose);\n  const delayRef = useLatestRef(delay);\n  const openRef = useLatestRef(open);\n  const pointerTypeRef = React.useRef();\n  const timeoutRef = React.useRef(-1);\n  const handlerRef = React.useRef();\n  const restTimeoutRef = React.useRef(-1);\n  const blockMouseMoveRef = React.useRef(true);\n  const performedPointerEventsMutationRef = React.useRef(false);\n  const unbindMouseMoveRef = React.useRef(() => {});\n  const restTimeoutPendingRef = React.useRef(false);\n  const isHoverOpen = React.useCallback(() => {\n    var _dataRef$current$open;\n    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;\n    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';\n  }, [dataRef]);\n\n  // When closing before opening, clear the delay timeouts to cancel it\n  // from showing.\n  React.useEffect(() => {\n    if (!enabled) return;\n    function onOpenChange(_ref) {\n      let {\n        open\n      } = _ref;\n      if (!open) {\n        clearTimeout(timeoutRef.current);\n        clearTimeout(restTimeoutRef.current);\n        blockMouseMoveRef.current = true;\n        restTimeoutPendingRef.current = false;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [enabled, events]);\n  React.useEffect(() => {\n    if (!enabled) return;\n    if (!handleCloseRef.current) return;\n    if (!open) return;\n    function onLeave(event) {\n      if (isHoverOpen()) {\n        onOpenChange(false, event, 'hover');\n      }\n    }\n    const html = getDocument(elements.floating).documentElement;\n    html.addEventListener('mouseleave', onLeave);\n    return () => {\n      html.removeEventListener('mouseleave', onLeave);\n    };\n  }, [elements.floating, open, onOpenChange, enabled, handleCloseRef, isHoverOpen]);\n  const closeWithDelay = React.useCallback(function (event, runElseBranch, reason) {\n    if (runElseBranch === void 0) {\n      runElseBranch = true;\n    }\n    if (reason === void 0) {\n      reason = 'hover';\n    }\n    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);\n    if (closeDelay && !handlerRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = window.setTimeout(() => onOpenChange(false, event, reason), closeDelay);\n    } else if (runElseBranch) {\n      clearTimeout(timeoutRef.current);\n      onOpenChange(false, event, reason);\n    }\n  }, [delayRef, onOpenChange]);\n  const cleanupMouseMoveHandler = useEffectEvent(() => {\n    unbindMouseMoveRef.current();\n    handlerRef.current = undefined;\n  });\n  const clearPointerEvents = useEffectEvent(() => {\n    if (performedPointerEventsMutationRef.current) {\n      const body = getDocument(elements.floating).body;\n      body.style.pointerEvents = '';\n      body.removeAttribute(safePolygonIdentifier);\n      performedPointerEventsMutationRef.current = false;\n    }\n  });\n\n  // Registering the mouse events on the reference directly to bypass React's\n  // delegation system. If the cursor was on a disabled element and then entered\n  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.\n  React.useEffect(() => {\n    if (!enabled) return;\n    function isClickLikeOpenEvent() {\n      return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;\n    }\n    function onMouseEnter(event) {\n      clearTimeout(timeoutRef.current);\n      blockMouseMoveRef.current = false;\n      if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && !getDelay(delayRef.current, 'open')) {\n        return;\n      }\n      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);\n      if (openDelay) {\n        timeoutRef.current = window.setTimeout(() => {\n          if (!openRef.current) {\n            onOpenChange(true, event, 'hover');\n          }\n        }, openDelay);\n      } else {\n        onOpenChange(true, event, 'hover');\n      }\n    }\n    function onMouseLeave(event) {\n      if (isClickLikeOpenEvent()) return;\n      unbindMouseMoveRef.current();\n      const doc = getDocument(elements.floating);\n      clearTimeout(restTimeoutRef.current);\n      restTimeoutPendingRef.current = false;\n      if (handleCloseRef.current && dataRef.current.floatingContext) {\n        // Prevent clearing `onScrollMouseLeave` timeout.\n        if (!open) {\n          clearTimeout(timeoutRef.current);\n        }\n        handlerRef.current = handleCloseRef.current({\n          ...dataRef.current.floatingContext,\n          tree,\n          x: event.clientX,\n          y: event.clientY,\n          onClose() {\n            clearPointerEvents();\n            cleanupMouseMoveHandler();\n            closeWithDelay(event, true, 'safe-polygon');\n          }\n        });\n        const handler = handlerRef.current;\n        doc.addEventListener('mousemove', handler);\n        unbindMouseMoveRef.current = () => {\n          doc.removeEventListener('mousemove', handler);\n        };\n        return;\n      }\n\n      // Allow interactivity without `safePolygon` on touch devices. With a\n      // pointer, a short close delay is an alternative, so it should work\n      // consistently.\n      const shouldClose = pointerTypeRef.current === 'touch' ? !contains(elements.floating, event.relatedTarget) : true;\n      if (shouldClose) {\n        closeWithDelay(event);\n      }\n    }\n\n    // Ensure the floating element closes after scrolling even if the pointer\n    // did not move.\n    // https://github.com/floating-ui/floating-ui/discussions/1692\n    function onScrollMouseLeave(event) {\n      if (isClickLikeOpenEvent()) return;\n      if (!dataRef.current.floatingContext) return;\n      handleCloseRef.current == null || handleCloseRef.current({\n        ...dataRef.current.floatingContext,\n        tree,\n        x: event.clientX,\n        y: event.clientY,\n        onClose() {\n          clearPointerEvents();\n          cleanupMouseMoveHandler();\n          closeWithDelay(event);\n        }\n      })(event);\n    }\n    if (isElement(elements.domReference)) {\n      var _elements$floating;\n      const ref = elements.domReference;\n      open && ref.addEventListener('mouseleave', onScrollMouseLeave);\n      (_elements$floating = elements.floating) == null || _elements$floating.addEventListener('mouseleave', onScrollMouseLeave);\n      move && ref.addEventListener('mousemove', onMouseEnter, {\n        once: true\n      });\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      return () => {\n        var _elements$floating2;\n        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);\n        (_elements$floating2 = elements.floating) == null || _elements$floating2.removeEventListener('mouseleave', onScrollMouseLeave);\n        move && ref.removeEventListener('mousemove', onMouseEnter);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [elements, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, openRef, tree, delayRef, handleCloseRef, dataRef]);\n\n  // Block pointer-events of every element other than the reference and floating\n  // while the floating element is open and has a `handleClose` handler. Also\n  // handles nested floating elements.\n  // https://github.com/floating-ui/floating-ui/issues/1722\n  index(() => {\n    var _handleCloseRef$curre;\n    if (!enabled) return;\n    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {\n      performedPointerEventsMutationRef.current = true;\n      const floatingEl = elements.floating;\n      if (isElement(elements.domReference) && floatingEl) {\n        var _tree$nodesRef$curren;\n        const body = getDocument(elements.floating).body;\n        body.setAttribute(safePolygonIdentifier, '');\n        const ref = elements.domReference;\n        const parentFloating = tree == null || (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null || (_tree$nodesRef$curren = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren.elements.floating;\n        if (parentFloating) {\n          parentFloating.style.pointerEvents = '';\n        }\n        body.style.pointerEvents = 'none';\n        ref.style.pointerEvents = 'auto';\n        floatingEl.style.pointerEvents = 'auto';\n        return () => {\n          body.style.pointerEvents = '';\n          ref.style.pointerEvents = '';\n          floatingEl.style.pointerEvents = '';\n        };\n      }\n    }\n  }, [enabled, open, parentId, elements, tree, handleCloseRef, isHoverOpen]);\n  index(() => {\n    if (!open) {\n      pointerTypeRef.current = undefined;\n      restTimeoutPendingRef.current = false;\n      cleanupMouseMoveHandler();\n      clearPointerEvents();\n    }\n  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);\n  React.useEffect(() => {\n    return () => {\n      cleanupMouseMoveHandler();\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      clearPointerEvents();\n    };\n  }, [enabled, elements.domReference, cleanupMouseMoveHandler, clearPointerEvents]);\n  const reference = React.useMemo(() => {\n    function setPointerRef(event) {\n      pointerTypeRef.current = event.pointerType;\n    }\n    return {\n      onPointerDown: setPointerRef,\n      onPointerEnter: setPointerRef,\n      onMouseMove(event) {\n        const {\n          nativeEvent\n        } = event;\n        function handleMouseMove() {\n          if (!blockMouseMoveRef.current && !openRef.current) {\n            onOpenChange(true, nativeEvent, 'hover');\n          }\n        }\n        if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current)) {\n          return;\n        }\n        if (open || restMs === 0) {\n          return;\n        }\n\n        // Ignore insignificant movements to account for tremors.\n        if (restTimeoutPendingRef.current && event.movementX ** 2 + event.movementY ** 2 < 2) {\n          return;\n        }\n        clearTimeout(restTimeoutRef.current);\n        if (pointerTypeRef.current === 'touch') {\n          handleMouseMove();\n        } else {\n          restTimeoutPendingRef.current = true;\n          restTimeoutRef.current = window.setTimeout(handleMouseMove, restMs);\n        }\n      }\n    };\n  }, [mouseOnly, onOpenChange, open, openRef, restMs]);\n  const floating = React.useMemo(() => ({\n    onMouseEnter() {\n      clearTimeout(timeoutRef.current);\n    },\n    onMouseLeave(event) {\n      closeWithDelay(event.nativeEvent, false);\n    }\n  }), [closeWithDelay]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating\n  } : {}, [enabled, reference, floating]);\n}\n\nconst NOOP = () => {};\nconst FloatingDelayGroupContext = /*#__PURE__*/React.createContext({\n  delay: 0,\n  initialDelay: 0,\n  timeoutMs: 0,\n  currentId: null,\n  setCurrentId: NOOP,\n  setState: NOOP,\n  isInstantPhase: false\n});\n\n/**\n * @deprecated\n * Use the return value of `useDelayGroup()` instead.\n */\nconst useDelayGroupContext = () => React.useContext(FloatingDelayGroupContext);\n/**\n * Provides context for a group of floating elements that should share a\n * `delay`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nfunction FloatingDelayGroup(props) {\n  const {\n    children,\n    delay,\n    timeoutMs = 0\n  } = props;\n  const [state, setState] = React.useReducer((prev, next) => ({\n    ...prev,\n    ...next\n  }), {\n    delay,\n    timeoutMs,\n    initialDelay: delay,\n    currentId: null,\n    isInstantPhase: false\n  });\n  const initialCurrentIdRef = React.useRef(null);\n  const setCurrentId = React.useCallback(currentId => {\n    setState({\n      currentId\n    });\n  }, []);\n  index(() => {\n    if (state.currentId) {\n      if (initialCurrentIdRef.current === null) {\n        initialCurrentIdRef.current = state.currentId;\n      } else if (!state.isInstantPhase) {\n        setState({\n          isInstantPhase: true\n        });\n      }\n    } else {\n      if (state.isInstantPhase) {\n        setState({\n          isInstantPhase: false\n        });\n      }\n      initialCurrentIdRef.current = null;\n    }\n  }, [state.currentId, state.isInstantPhase]);\n  return /*#__PURE__*/React.createElement(FloatingDelayGroupContext.Provider, {\n    value: React.useMemo(() => ({\n      ...state,\n      setState,\n      setCurrentId\n    }), [state, setCurrentId])\n  }, children);\n}\n/**\n * Enables grouping when called inside a component that's a child of a\n * `FloatingDelayGroup`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nfunction useDelayGroup(context, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    floatingId\n  } = context;\n  const {\n    id: optionId,\n    enabled = true\n  } = options;\n  const id = optionId != null ? optionId : floatingId;\n  const groupContext = useDelayGroupContext();\n  const {\n    currentId,\n    setCurrentId,\n    initialDelay,\n    setState,\n    timeoutMs\n  } = groupContext;\n  index(() => {\n    if (!enabled) return;\n    if (!currentId) return;\n    setState({\n      delay: {\n        open: 1,\n        close: getDelay(initialDelay, 'close')\n      }\n    });\n    if (currentId !== id) {\n      onOpenChange(false);\n    }\n  }, [enabled, id, onOpenChange, setState, currentId, initialDelay]);\n  index(() => {\n    function unset() {\n      onOpenChange(false);\n      setState({\n        delay: initialDelay,\n        currentId: null\n      });\n    }\n    if (!enabled) return;\n    if (!currentId) return;\n    if (!open && currentId === id) {\n      if (timeoutMs) {\n        const timeout = window.setTimeout(unset, timeoutMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      }\n      unset();\n    }\n  }, [enabled, open, setState, currentId, id, onOpenChange, initialDelay, timeoutMs]);\n  index(() => {\n    if (!enabled) return;\n    if (setCurrentId === NOOP || !open) return;\n    setCurrentId(id);\n  }, [enabled, open, setCurrentId, id]);\n  return groupContext;\n}\n\nfunction getAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\n\nfunction getChildren(nodes, id) {\n  let allChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);\n  });\n  let currentChildren = allChildren;\n  while (currentChildren.length) {\n    currentChildren = nodes.filter(node => {\n      var _currentChildren;\n      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {\n        var _node$context2;\n        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);\n      });\n    });\n    allChildren = allChildren.concat(currentChildren);\n  }\n  return allChildren;\n}\nfunction getDeepestNode(nodes, id) {\n  let deepestNodeId;\n  let maxDepth = -1;\n  function findDeepest(nodeId, depth) {\n    if (depth > maxDepth) {\n      deepestNodeId = nodeId;\n      maxDepth = depth;\n    }\n    const children = getChildren(nodes, nodeId);\n    children.forEach(child => {\n      findDeepest(child.id, depth + 1);\n    });\n  }\n  findDeepest(id, 0);\n  return nodes.find(node => node.id === deepestNodeId);\n}\n\n// Modified to add conditional `aria-hidden` support:\n// https://github.com/theKashey/aria-hidden/blob/9220c8f4a4fd35f63bee5510a9f41a37264382d4/src/index.ts\nlet counterMap = /*#__PURE__*/new WeakMap();\nlet uncontrolledElementsSet = /*#__PURE__*/new WeakSet();\nlet markerMap = {};\nlet lockCount$1 = 0;\nconst supportsInert = () => typeof HTMLElement !== 'undefined' && 'inert' in HTMLElement.prototype;\nconst unwrapHost = node => node && (node.host || unwrapHost(node.parentNode));\nconst correctElements = (parent, targets) => targets.map(target => {\n  if (parent.contains(target)) {\n    return target;\n  }\n  const correctedTarget = unwrapHost(target);\n  if (parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  return null;\n}).filter(x => x != null);\nfunction applyAttributeToOthers(uncorrectedAvoidElements, body, ariaHidden, inert) {\n  const markerName = 'data-floating-ui-inert';\n  const controlAttribute = inert ? 'inert' : ariaHidden ? 'aria-hidden' : null;\n  const avoidElements = correctElements(body, uncorrectedAvoidElements);\n  const elementsToKeep = new Set();\n  const elementsToStop = new Set(avoidElements);\n  const hiddenElements = [];\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n  const markerCounter = markerMap[markerName];\n  avoidElements.forEach(keep);\n  deep(body);\n  elementsToKeep.clear();\n  function keep(el) {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n    elementsToKeep.add(el);\n    el.parentNode && keep(el.parentNode);\n  }\n  function deep(parent) {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    [].forEach.call(parent.children, node => {\n      if (getNodeName(node) === 'script') return;\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        const attr = controlAttribute ? node.getAttribute(controlAttribute) : null;\n        const alreadyHidden = attr !== null && attr !== 'false';\n        const counterValue = (counterMap.get(node) || 0) + 1;\n        const markerValue = (markerCounter.get(node) || 0) + 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenElements.push(node);\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledElementsSet.add(node);\n        }\n        if (markerValue === 1) {\n          node.setAttribute(markerName, '');\n        }\n        if (!alreadyHidden && controlAttribute) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  }\n  lockCount$1++;\n  return () => {\n    hiddenElements.forEach(element => {\n      const counterValue = (counterMap.get(element) || 0) - 1;\n      const markerValue = (markerCounter.get(element) || 0) - 1;\n      counterMap.set(element, counterValue);\n      markerCounter.set(element, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledElementsSet.has(element) && controlAttribute) {\n          element.removeAttribute(controlAttribute);\n        }\n        uncontrolledElementsSet.delete(element);\n      }\n      if (!markerValue) {\n        element.removeAttribute(markerName);\n      }\n    });\n    lockCount$1--;\n    if (!lockCount$1) {\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledElementsSet = new WeakSet();\n      markerMap = {};\n    }\n  };\n}\nfunction markOthers(avoidElements, ariaHidden, inert) {\n  if (ariaHidden === void 0) {\n    ariaHidden = false;\n  }\n  if (inert === void 0) {\n    inert = false;\n  }\n  const body = getDocument(avoidElements[0]).body;\n  return applyAttributeToOthers(avoidElements.concat(Array.from(body.querySelectorAll('[aria-live]'))), body, ariaHidden, inert);\n}\n\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, direction) {\n  const allTabbable = tabbable(container, getTabbableOptions());\n  if (direction === 'prev') {\n    allTabbable.reverse();\n  }\n  const activeIndex = allTabbable.indexOf(activeElement(getDocument(container)));\n  const nextTabbableElements = allTabbable.slice(activeIndex + 1);\n  return nextTabbableElements[0];\n}\nfunction getNextTabbable() {\n  return getTabbableIn(document.body, 'next');\n}\nfunction getPreviousTabbable() {\n  return getTabbableIn(document.body, 'prev');\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\n// See Diego Haz's Sandbox for making this logic work well on Safari/iOS:\n// https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/FocusTrap.tsx\n\nconst HIDDEN_STYLES = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'fixed',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  top: 0,\n  left: 0\n};\nlet timeoutId;\nfunction setActiveElementOnTab(event) {\n  if (event.key === 'Tab') {\n    event.target;\n    clearTimeout(timeoutId);\n  }\n}\nconst FocusGuard = /*#__PURE__*/React.forwardRef(function FocusGuard(props, ref) {\n  const [role, setRole] = React.useState();\n  index(() => {\n    if (isSafari()) {\n      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor\n      // on VoiceOver does trigger the onFocus event, so we can use the focus\n      // trap element. On Safari, only buttons trigger the onFocus event.\n      // NB: \"group\" role in the Sandbox no longer appears to work, must be a\n      // button role.\n      setRole('button');\n    }\n    document.addEventListener('keydown', setActiveElementOnTab);\n    return () => {\n      document.removeEventListener('keydown', setActiveElementOnTab);\n    };\n  }, []);\n  const restProps = {\n    ref,\n    tabIndex: 0,\n    // Role is only for VoiceOver\n    role,\n    'aria-hidden': role ? undefined : true,\n    [createAttribute('focus-guard')]: '',\n    style: HIDDEN_STYLES\n  };\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, props, restProps));\n});\n\nconst PortalContext = /*#__PURE__*/React.createContext(null);\nconst attr = /*#__PURE__*/createAttribute('portal');\n/**\n * @see https://floating-ui.com/docs/FloatingPortal#usefloatingportalnode\n */\nfunction useFloatingPortalNode(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    id,\n    root\n  } = props;\n  const uniqueId = useId();\n  const portalContext = usePortalContext();\n  const [portalNode, setPortalNode] = React.useState(null);\n  const portalNodeRef = React.useRef(null);\n  index(() => {\n    return () => {\n      portalNode == null || portalNode.remove();\n      // Allow the subsequent layout effects to create a new node on updates.\n      // The portal node will still be cleaned up on unmount.\n      // https://github.com/floating-ui/floating-ui/issues/2454\n      queueMicrotask(() => {\n        portalNodeRef.current = null;\n      });\n    };\n  }, [portalNode]);\n  index(() => {\n    // Wait for the uniqueId to be generated before creating the portal node in\n    // React <18 (using `useFloatingId` instead of the native `useId`).\n    // https://github.com/floating-ui/floating-ui/issues/2778\n    if (!uniqueId) return;\n    if (portalNodeRef.current) return;\n    const existingIdRoot = id ? document.getElementById(id) : null;\n    if (!existingIdRoot) return;\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    existingIdRoot.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, uniqueId]);\n  index(() => {\n    // Wait for the root to exist before creating the portal node. The root must\n    // be stored in state, not a ref, for this to work reactively.\n    if (root === null) return;\n    if (!uniqueId) return;\n    if (portalNodeRef.current) return;\n    let container = root || (portalContext == null ? void 0 : portalContext.portalNode);\n    if (container && !isElement(container)) container = container.current;\n    container = container || document.body;\n    let idWrapper = null;\n    if (id) {\n      idWrapper = document.createElement('div');\n      idWrapper.id = id;\n      container.appendChild(idWrapper);\n    }\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    container = idWrapper || container;\n    container.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, root, uniqueId, portalContext]);\n  return portalNode;\n}\n/**\n * Portals the floating element into a given container element — by default,\n * outside of the app root and into the body.\n * This is necessary to ensure the floating element can appear outside any\n * potential parent containers that cause clipping (such as `overflow: hidden`),\n * while retaining its location in the React tree.\n * @see https://floating-ui.com/docs/FloatingPortal\n */\nfunction FloatingPortal(props) {\n  const {\n    children,\n    id,\n    root,\n    preserveTabOrder = true\n  } = props;\n  const portalNode = useFloatingPortalNode({\n    id,\n    root\n  });\n  const [focusManagerState, setFocusManagerState] = React.useState(null);\n  const beforeOutsideRef = React.useRef(null);\n  const afterOutsideRef = React.useRef(null);\n  const beforeInsideRef = React.useRef(null);\n  const afterInsideRef = React.useRef(null);\n  const modal = focusManagerState == null ? void 0 : focusManagerState.modal;\n  const open = focusManagerState == null ? void 0 : focusManagerState.open;\n  const shouldRenderGuards =\n  // The FocusManager and therefore floating element are currently open/\n  // rendered.\n  !!focusManagerState &&\n  // Guards are only for non-modal focus management.\n  !focusManagerState.modal &&\n  // Don't render if unmount is transitioning.\n  focusManagerState.open && preserveTabOrder && !!(root || portalNode);\n\n  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx\n  React.useEffect(() => {\n    if (!portalNode || !preserveTabOrder || modal) {\n      return;\n    }\n\n    // Make sure elements inside the portal element are tabbable only when the\n    // portal has already been focused, either by tabbing into a focus trap\n    // element outside or using the mouse.\n    function onFocus(event) {\n      if (portalNode && isOutsideEvent(event)) {\n        const focusing = event.type === 'focusin';\n        const manageFocus = focusing ? enableFocusInside : disableFocusInside;\n        manageFocus(portalNode);\n      }\n    }\n    // Listen to the event on the capture phase so they run before the focus\n    // trap elements onFocus prop is called.\n    portalNode.addEventListener('focusin', onFocus, true);\n    portalNode.addEventListener('focusout', onFocus, true);\n    return () => {\n      portalNode.removeEventListener('focusin', onFocus, true);\n      portalNode.removeEventListener('focusout', onFocus, true);\n    };\n  }, [portalNode, preserveTabOrder, modal]);\n  React.useEffect(() => {\n    if (!portalNode) return;\n    if (open) return;\n    enableFocusInside(portalNode);\n  }, [open, portalNode]);\n  return /*#__PURE__*/React.createElement(PortalContext.Provider, {\n    value: React.useMemo(() => ({\n      preserveTabOrder,\n      beforeOutsideRef,\n      afterOutsideRef,\n      beforeInsideRef,\n      afterInsideRef,\n      portalNode,\n      setFocusManagerState\n    }), [preserveTabOrder, portalNode])\n  }, shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: beforeOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _beforeInsideRef$curr;\n        (_beforeInsideRef$curr = beforeInsideRef.current) == null || _beforeInsideRef$curr.focus();\n      } else {\n        const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        prevTabbable == null || prevTabbable.focus();\n      }\n    }\n  }), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-owns\": portalNode.id,\n    style: HIDDEN_STYLES\n  }), portalNode && /*#__PURE__*/ReactDOM.createPortal(children, portalNode), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: afterOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _afterInsideRef$curre;\n        (_afterInsideRef$curre = afterInsideRef.current) == null || _afterInsideRef$curre.focus();\n      } else {\n        const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        nextTabbable == null || nextTabbable.focus();\n        (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false, event.nativeEvent, 'focus-out'));\n      }\n    }\n  }));\n}\nconst usePortalContext = () => React.useContext(PortalContext);\n\nconst FOCUSABLE_ATTRIBUTE = 'data-floating-ui-focusable';\nfunction getFloatingFocusElement(floatingElement) {\n  if (!floatingElement) {\n    return null;\n  }\n  // Try to find the element that has `{...getFloatingProps()}` spread on it.\n  // This indicates the floating element is acting as a positioning wrapper, and\n  // so focus should be managed on the child element with the event handlers and\n  // aria props.\n  return floatingElement.hasAttribute(FOCUSABLE_ATTRIBUTE) ? floatingElement : floatingElement.querySelector(\"[\" + FOCUSABLE_ATTRIBUTE + \"]\") || floatingElement;\n}\n\nconst LIST_LIMIT = 20;\nlet previouslyFocusedElements = [];\nfunction addPreviouslyFocusedElement(element) {\n  previouslyFocusedElements = previouslyFocusedElements.filter(el => el.isConnected);\n  let tabbableEl = element;\n  if (!tabbableEl || getNodeName(tabbableEl) === 'body') return;\n  if (!isTabbable(tabbableEl, getTabbableOptions())) {\n    const tabbableChild = tabbable(tabbableEl, getTabbableOptions())[0];\n    if (tabbableChild) {\n      tabbableEl = tabbableChild;\n    }\n  }\n  previouslyFocusedElements.push(tabbableEl);\n  if (previouslyFocusedElements.length > LIST_LIMIT) {\n    previouslyFocusedElements = previouslyFocusedElements.slice(-LIST_LIMIT);\n  }\n}\nfunction getPreviouslyFocusedElement() {\n  return previouslyFocusedElements.slice().reverse().find(el => el.isConnected);\n}\nconst VisuallyHiddenDismiss = /*#__PURE__*/React.forwardRef(function VisuallyHiddenDismiss(props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    type: \"button\",\n    ref: ref,\n    tabIndex: -1,\n    style: HIDDEN_STYLES\n  }));\n});\n/**\n * Provides focus management for the floating element.\n * @see https://floating-ui.com/docs/FloatingFocusManager\n */\nfunction FloatingFocusManager(props) {\n  const {\n    context,\n    children,\n    disabled = false,\n    order = ['content'],\n    guards: _guards = true,\n    initialFocus = 0,\n    returnFocus = true,\n    restoreFocus = false,\n    modal = true,\n    visuallyHiddenDismiss = false,\n    closeOnFocusOut = true\n  } = props;\n  const {\n    open,\n    refs,\n    nodeId,\n    onOpenChange,\n    events,\n    dataRef,\n    floatingId,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;\n  // If the reference is a combobox and is typeable (e.g. input/textarea),\n  // there are different focus semantics. The guards should not be rendered, but\n  // aria-hidden should be applied to all nodes still. Further, the visually\n  // hidden dismiss button should only appear at the end of the list, not the\n  // start.\n  const isUntrappedTypeableCombobox = isTypeableCombobox(domReference) && ignoreInitialFocus;\n\n  // Force the guards to be rendered if the `inert` attribute is not supported.\n  const guards = supportsInert() ? _guards : true;\n  const orderRef = useLatestRef(order);\n  const initialFocusRef = useLatestRef(initialFocus);\n  const returnFocusRef = useLatestRef(returnFocus);\n  const tree = useFloatingTree();\n  const portalContext = usePortalContext();\n  const startDismissButtonRef = React.useRef(null);\n  const endDismissButtonRef = React.useRef(null);\n  const preventReturnFocusRef = React.useRef(false);\n  const isPointerDownRef = React.useRef(false);\n  const tabbableIndexRef = React.useRef(-1);\n  const isInsidePortal = portalContext != null;\n  const floatingFocusElement = getFloatingFocusElement(floating);\n  const getTabbableContent = useEffectEvent(function (container) {\n    if (container === void 0) {\n      container = floatingFocusElement;\n    }\n    return container ? tabbable(container, getTabbableOptions()) : [];\n  });\n  const getTabbableElements = useEffectEvent(container => {\n    const content = getTabbableContent(container);\n    return orderRef.current.map(type => {\n      if (domReference && type === 'reference') {\n        return domReference;\n      }\n      if (floatingFocusElement && type === 'floating') {\n        return floatingFocusElement;\n      }\n      return content;\n    }).filter(Boolean).flat();\n  });\n  React.useEffect(() => {\n    preventReturnFocusRef.current = false;\n  }, [disabled]);\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!modal) return;\n    function onKeyDown(event) {\n      if (event.key === 'Tab') {\n        // The focus guards have nothing to focus, so we need to stop the event.\n        if (contains(floatingFocusElement, activeElement(getDocument(floatingFocusElement))) && getTabbableContent().length === 0 && !isUntrappedTypeableCombobox) {\n          stopEvent(event);\n        }\n        const els = getTabbableElements();\n        const target = getTarget(event);\n        if (orderRef.current[0] === 'reference' && target === domReference) {\n          stopEvent(event);\n          if (event.shiftKey) {\n            enqueueFocus(els[els.length - 1]);\n          } else {\n            enqueueFocus(els[1]);\n          }\n        }\n        if (orderRef.current[1] === 'floating' && target === floatingFocusElement && event.shiftKey) {\n          stopEvent(event);\n          enqueueFocus(els[0]);\n        }\n      }\n    }\n    const doc = getDocument(floatingFocusElement);\n    doc.addEventListener('keydown', onKeyDown);\n    return () => {\n      doc.removeEventListener('keydown', onKeyDown);\n    };\n  }, [disabled, domReference, floatingFocusElement, modal, orderRef, isUntrappedTypeableCombobox, getTabbableContent, getTabbableElements]);\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!floating) return;\n    function handleFocusIn(event) {\n      const target = getTarget(event);\n      const tabbableContent = getTabbableContent();\n      const tabbableIndex = tabbableContent.indexOf(target);\n      if (tabbableIndex !== -1) {\n        tabbableIndexRef.current = tabbableIndex;\n      }\n    }\n    floating.addEventListener('focusin', handleFocusIn);\n    return () => {\n      floating.removeEventListener('focusin', handleFocusIn);\n    };\n  }, [disabled, floating, getTabbableContent]);\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!closeOnFocusOut) return;\n\n    // In Safari, buttons lose focus when pressing them.\n    function handlePointerDown() {\n      isPointerDownRef.current = true;\n      setTimeout(() => {\n        isPointerDownRef.current = false;\n      });\n    }\n    function handleFocusOutside(event) {\n      const relatedTarget = event.relatedTarget;\n      queueMicrotask(() => {\n        const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute(createAttribute('focus-guard')) || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context, _node$context2;\n          return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);\n        }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context3, _node$context4;\n          return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;\n        })));\n\n        // Restore focus to the previous tabbable element index to prevent\n        // focus from being lost outside the floating tree.\n        if (restoreFocus && movedToUnrelatedNode && activeElement(getDocument(floatingFocusElement)) === getDocument(floatingFocusElement).body) {\n          // Let `FloatingPortal` effect knows that focus is still inside the\n          // floating tree.\n          if (isHTMLElement(floatingFocusElement)) {\n            floatingFocusElement.focus();\n          }\n          const prevTabbableIndex = tabbableIndexRef.current;\n          const tabbableContent = getTabbableContent();\n          const nodeToFocus = tabbableContent[prevTabbableIndex] || tabbableContent[tabbableContent.length - 1] || floatingFocusElement;\n          if (isHTMLElement(nodeToFocus)) {\n            nodeToFocus.focus();\n          }\n        }\n\n        // Focus did not move inside the floating tree, and there are no tabbable\n        // portal guards to handle closing.\n        if ((isUntrappedTypeableCombobox ? true : !modal) && relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&\n        // Fix React 18 Strict Mode returnFocus due to double rendering.\n        relatedTarget !== getPreviouslyFocusedElement()) {\n          preventReturnFocusRef.current = true;\n          onOpenChange(false, event, 'focus-out');\n        }\n      });\n    }\n    if (floating && isHTMLElement(domReference)) {\n      domReference.addEventListener('focusout', handleFocusOutside);\n      domReference.addEventListener('pointerdown', handlePointerDown);\n      floating.addEventListener('focusout', handleFocusOutside);\n      return () => {\n        domReference.removeEventListener('focusout', handleFocusOutside);\n        domReference.removeEventListener('pointerdown', handlePointerDown);\n        floating.removeEventListener('focusout', handleFocusOutside);\n      };\n    }\n  }, [disabled, domReference, floating, floatingFocusElement, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut, restoreFocus, getTabbableContent, isUntrappedTypeableCombobox]);\n  React.useEffect(() => {\n    var _portalContext$portal;\n    if (disabled) return;\n\n    // Don't hide portals nested within the parent portal.\n    const portalNodes = Array.from((portalContext == null || (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll(\"[\" + createAttribute('portal') + \"]\")) || []);\n    if (floating) {\n      const insideElements = [floating, ...portalNodes, startDismissButtonRef.current, endDismissButtonRef.current, orderRef.current.includes('reference') || isUntrappedTypeableCombobox ? domReference : null].filter(x => x != null);\n      const cleanup = modal || isUntrappedTypeableCombobox ? markOthers(insideElements, guards, !guards) : markOthers(insideElements);\n      return () => {\n        cleanup();\n      };\n    }\n  }, [disabled, domReference, floating, modal, orderRef, portalContext, isUntrappedTypeableCombobox, guards]);\n  index(() => {\n    if (disabled || !isHTMLElement(floatingFocusElement)) return;\n    const doc = getDocument(floatingFocusElement);\n    const previouslyFocusedElement = activeElement(doc);\n\n    // Wait for any layout effect state setters to execute to set `tabIndex`.\n    queueMicrotask(() => {\n      const focusableElements = getTabbableElements(floatingFocusElement);\n      const initialFocusValue = initialFocusRef.current;\n      const elToFocus = (typeof initialFocusValue === 'number' ? focusableElements[initialFocusValue] : initialFocusValue.current) || floatingFocusElement;\n      const focusAlreadyInsideFloatingEl = contains(floatingFocusElement, previouslyFocusedElement);\n      if (!ignoreInitialFocus && !focusAlreadyInsideFloatingEl && open) {\n        enqueueFocus(elToFocus, {\n          preventScroll: elToFocus === floatingFocusElement\n        });\n      }\n    });\n  }, [disabled, open, floatingFocusElement, ignoreInitialFocus, getTabbableElements, initialFocusRef]);\n  index(() => {\n    if (disabled || !floatingFocusElement) return;\n    let preventReturnFocusScroll = false;\n    const doc = getDocument(floatingFocusElement);\n    const previouslyFocusedElement = activeElement(doc);\n    const contextData = dataRef.current;\n    let openEvent = contextData.openEvent;\n    addPreviouslyFocusedElement(previouslyFocusedElement);\n\n    // Dismissing via outside press should always ignore `returnFocus` to\n    // prevent unwanted scrolling.\n    function onOpenChange(_ref) {\n      let {\n        open,\n        reason,\n        event,\n        nested\n      } = _ref;\n      if (open) {\n        openEvent = event;\n      }\n      if (reason === 'escape-key' && refs.domReference.current) {\n        addPreviouslyFocusedElement(refs.domReference.current);\n      }\n      if (reason === 'hover' && event.type === 'mouseleave') {\n        preventReturnFocusRef.current = true;\n      }\n      if (reason !== 'outside-press') return;\n      if (nested) {\n        preventReturnFocusRef.current = false;\n        preventReturnFocusScroll = true;\n      } else {\n        preventReturnFocusRef.current = !(isVirtualClick(event) || isVirtualPointerEvent(event));\n      }\n    }\n    events.on('openchange', onOpenChange);\n    const fallbackEl = doc.createElement('span');\n    fallbackEl.setAttribute('tabindex', '-1');\n    fallbackEl.setAttribute('aria-hidden', 'true');\n    Object.assign(fallbackEl.style, HIDDEN_STYLES);\n    if (isInsidePortal && domReference) {\n      domReference.insertAdjacentElement('afterend', fallbackEl);\n    }\n    function getReturnElement() {\n      if (typeof returnFocusRef.current === 'boolean') {\n        return getPreviouslyFocusedElement() || fallbackEl;\n      }\n      return returnFocusRef.current.current || fallbackEl;\n    }\n    return () => {\n      events.off('openchange', onOpenChange);\n      const activeEl = activeElement(doc);\n      const isFocusInsideFloatingTree = contains(floating, activeEl) || tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n        var _node$context5;\n        return contains((_node$context5 = node.context) == null ? void 0 : _node$context5.elements.floating, activeEl);\n      });\n      const shouldFocusReference = isFocusInsideFloatingTree || openEvent && ['click', 'mousedown'].includes(openEvent.type);\n      if (shouldFocusReference && refs.domReference.current) {\n        addPreviouslyFocusedElement(refs.domReference.current);\n      }\n      const returnElement = getReturnElement();\n      queueMicrotask(() => {\n        if (\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        returnFocusRef.current && !preventReturnFocusRef.current && isHTMLElement(returnElement) && (\n        // If the focus moved somewhere else after mount, avoid returning focus\n        // since it likely entered a different element which should be\n        // respected: https://github.com/floating-ui/floating-ui/issues/2607\n        returnElement !== activeEl && activeEl !== doc.body ? isFocusInsideFloatingTree : true)) {\n          returnElement.focus({\n            preventScroll: preventReturnFocusScroll\n          });\n        }\n        fallbackEl.remove();\n      });\n    };\n  }, [disabled, floating, floatingFocusElement, returnFocusRef, dataRef, refs, events, tree, nodeId, isInsidePortal, domReference]);\n\n  // Synchronize the `context` & `modal` value to the FloatingPortal context.\n  // It will decide whether or not it needs to render its own guards.\n  index(() => {\n    if (disabled) return;\n    if (!portalContext) return;\n    portalContext.setFocusManagerState({\n      modal,\n      closeOnFocusOut,\n      open,\n      onOpenChange,\n      refs\n    });\n    return () => {\n      portalContext.setFocusManagerState(null);\n    };\n  }, [disabled, portalContext, modal, open, onOpenChange, refs, closeOnFocusOut]);\n  index(() => {\n    if (disabled) return;\n    if (!floatingFocusElement) return;\n    if (typeof MutationObserver !== 'function') return;\n    if (ignoreInitialFocus) return;\n    const handleMutation = () => {\n      const tabIndex = floatingFocusElement.getAttribute('tabindex');\n      const tabbableContent = getTabbableContent();\n      const activeEl = activeElement(getDocument(floating));\n      const tabbableIndex = tabbableContent.indexOf(activeEl);\n      if (tabbableIndex !== -1) {\n        tabbableIndexRef.current = tabbableIndex;\n      }\n      if (orderRef.current.includes('floating') || activeEl !== refs.domReference.current && tabbableContent.length === 0) {\n        if (tabIndex !== '0') {\n          floatingFocusElement.setAttribute('tabindex', '0');\n        }\n      } else if (tabIndex !== '-1') {\n        floatingFocusElement.setAttribute('tabindex', '-1');\n      }\n    };\n    handleMutation();\n    const observer = new MutationObserver(handleMutation);\n    observer.observe(floatingFocusElement, {\n      childList: true,\n      subtree: true,\n      attributes: true\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, [disabled, floating, floatingFocusElement, refs, orderRef, getTabbableContent, ignoreInitialFocus]);\n  function renderDismissButton(location) {\n    if (disabled || !visuallyHiddenDismiss || !modal) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(VisuallyHiddenDismiss, {\n      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,\n      onClick: event => onOpenChange(false, event.nativeEvent)\n    }, typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss');\n  }\n  const shouldRenderGuards = !disabled && guards && (modal ? !isUntrappedTypeableCombobox : true) && (isInsidePortal || modal);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,\n    onFocus: event => {\n      if (modal) {\n        const els = getTabbableElements();\n        enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        preventReturnFocusRef.current = false;\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const nextTabbable = getNextTabbable() || domReference;\n          nextTabbable == null || nextTabbable.focus();\n        } else {\n          var _portalContext$before;\n          (_portalContext$before = portalContext.beforeOutsideRef.current) == null || _portalContext$before.focus();\n        }\n      }\n    }\n  }), !isUntrappedTypeableCombobox && renderDismissButton('start'), children, renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.afterInsideRef,\n    onFocus: event => {\n      if (modal) {\n        enqueueFocus(getTabbableElements()[0]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        if (closeOnFocusOut) {\n          preventReturnFocusRef.current = true;\n        }\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const prevTabbable = getPreviousTabbable() || domReference;\n          prevTabbable == null || prevTabbable.focus();\n        } else {\n          var _portalContext$afterO;\n          (_portalContext$afterO = portalContext.afterOutsideRef.current) == null || _portalContext$afterO.focus();\n        }\n      }\n    }\n  }));\n}\n\nlet lockCount = 0;\nfunction enableScrollLock() {\n  const isIOS = /iP(hone|ad|od)|iOS/.test(getPlatform());\n  const bodyStyle = document.body.style;\n  // RTL <body> scrollbar\n  const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;\n  const paddingProp = scrollbarX ? 'paddingLeft' : 'paddingRight';\n  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n  const scrollX = bodyStyle.left ? parseFloat(bodyStyle.left) : window.scrollX;\n  const scrollY = bodyStyle.top ? parseFloat(bodyStyle.top) : window.scrollY;\n  bodyStyle.overflow = 'hidden';\n  if (scrollbarWidth) {\n    bodyStyle[paddingProp] = scrollbarWidth + \"px\";\n  }\n\n  // Only iOS doesn't respect `overflow: hidden` on document.body, and this\n  // technique has fewer side effects.\n  if (isIOS) {\n    var _window$visualViewpor, _window$visualViewpor2;\n    // iOS 12 does not support `visualViewport`.\n    const offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0;\n    const offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0;\n    Object.assign(bodyStyle, {\n      position: 'fixed',\n      top: -(scrollY - Math.floor(offsetTop)) + \"px\",\n      left: -(scrollX - Math.floor(offsetLeft)) + \"px\",\n      right: '0'\n    });\n  }\n  return () => {\n    Object.assign(bodyStyle, {\n      overflow: '',\n      [paddingProp]: ''\n    });\n    if (isIOS) {\n      Object.assign(bodyStyle, {\n        position: '',\n        top: '',\n        left: '',\n        right: ''\n      });\n      window.scrollTo(scrollX, scrollY);\n    }\n  };\n}\nlet cleanup = () => {};\n\n/**\n * Provides base styling for a fixed overlay element to dim content or block\n * pointer events behind a floating element.\n * It's a regular `<div>`, so it can be styled via any CSS solution you prefer.\n * @see https://floating-ui.com/docs/FloatingOverlay\n */\nconst FloatingOverlay = /*#__PURE__*/React.forwardRef(function FloatingOverlay(props, ref) {\n  const {\n    lockScroll = false,\n    ...rest\n  } = props;\n  index(() => {\n    if (!lockScroll) return;\n    lockCount++;\n    if (lockCount === 1) {\n      cleanup = enableScrollLock();\n    }\n    return () => {\n      lockCount--;\n      if (lockCount === 0) {\n        cleanup();\n      }\n    };\n  }, [lockScroll]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, rest, {\n    style: {\n      position: 'fixed',\n      overflow: 'auto',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      ...rest.style\n    }\n  }));\n});\n\nfunction isButtonTarget(event) {\n  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';\n}\nfunction isSpaceIgnored(element) {\n  return isTypeableElement(element);\n}\n/**\n * Opens or closes the floating element when clicking the reference element.\n * @see https://floating-ui.com/docs/useClick\n */\nfunction useClick(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    event: eventOption = 'click',\n    toggle = true,\n    ignoreMouse = false,\n    keyboardHandlers = true\n  } = props;\n  const pointerTypeRef = React.useRef();\n  const didKeyDownRef = React.useRef(false);\n  const reference = React.useMemo(() => ({\n    onPointerDown(event) {\n      pointerTypeRef.current = event.pointerType;\n    },\n    onMouseDown(event) {\n      const pointerType = pointerTypeRef.current;\n\n      // Ignore all buttons except for the \"main\" button.\n      // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n      if (event.button !== 0) return;\n      if (eventOption === 'click') return;\n      if (isMouseLikePointerType(pointerType, true) && ignoreMouse) return;\n      if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'mousedown' : true)) {\n        onOpenChange(false, event.nativeEvent, 'click');\n      } else {\n        // Prevent stealing focus from the floating element\n        event.preventDefault();\n        onOpenChange(true, event.nativeEvent, 'click');\n      }\n    },\n    onClick(event) {\n      const pointerType = pointerTypeRef.current;\n      if (eventOption === 'mousedown' && pointerTypeRef.current) {\n        pointerTypeRef.current = undefined;\n        return;\n      }\n      if (isMouseLikePointerType(pointerType, true) && ignoreMouse) return;\n      if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'click' : true)) {\n        onOpenChange(false, event.nativeEvent, 'click');\n      } else {\n        onOpenChange(true, event.nativeEvent, 'click');\n      }\n    },\n    onKeyDown(event) {\n      pointerTypeRef.current = undefined;\n      if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event)) {\n        return;\n      }\n      if (event.key === ' ' && !isSpaceIgnored(domReference)) {\n        // Prevent scrolling\n        event.preventDefault();\n        didKeyDownRef.current = true;\n      }\n      if (event.key === 'Enter') {\n        if (open && toggle) {\n          onOpenChange(false, event.nativeEvent, 'click');\n        } else {\n          onOpenChange(true, event.nativeEvent, 'click');\n        }\n      }\n    },\n    onKeyUp(event) {\n      if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event) || isSpaceIgnored(domReference)) {\n        return;\n      }\n      if (event.key === ' ' && didKeyDownRef.current) {\n        didKeyDownRef.current = false;\n        if (open && toggle) {\n          onOpenChange(false, event.nativeEvent, 'click');\n        } else {\n          onOpenChange(true, event.nativeEvent, 'click');\n        }\n      }\n    }\n  }), [dataRef, domReference, eventOption, ignoreMouse, keyboardHandlers, onOpenChange, open, toggle]);\n  return React.useMemo(() => enabled ? {\n    reference\n  } : {}, [enabled, reference]);\n}\n\nfunction createVirtualElement(domElement, data) {\n  let offsetX = null;\n  let offsetY = null;\n  let isAutoUpdateEvent = false;\n  return {\n    contextElement: domElement || undefined,\n    getBoundingClientRect() {\n      var _data$dataRef$current;\n      const domRect = (domElement == null ? void 0 : domElement.getBoundingClientRect()) || {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n      const isXAxis = data.axis === 'x' || data.axis === 'both';\n      const isYAxis = data.axis === 'y' || data.axis === 'both';\n      const canTrackCursorOnAutoUpdate = ['mouseenter', 'mousemove'].includes(((_data$dataRef$current = data.dataRef.current.openEvent) == null ? void 0 : _data$dataRef$current.type) || '') && data.pointerType !== 'touch';\n      let width = domRect.width;\n      let height = domRect.height;\n      let x = domRect.x;\n      let y = domRect.y;\n      if (offsetX == null && data.x && isXAxis) {\n        offsetX = domRect.x - data.x;\n      }\n      if (offsetY == null && data.y && isYAxis) {\n        offsetY = domRect.y - data.y;\n      }\n      x -= offsetX || 0;\n      y -= offsetY || 0;\n      width = 0;\n      height = 0;\n      if (!isAutoUpdateEvent || canTrackCursorOnAutoUpdate) {\n        width = data.axis === 'y' ? domRect.width : 0;\n        height = data.axis === 'x' ? domRect.height : 0;\n        x = isXAxis && data.x != null ? data.x : x;\n        y = isYAxis && data.y != null ? data.y : y;\n      } else if (isAutoUpdateEvent && !canTrackCursorOnAutoUpdate) {\n        height = data.axis === 'x' ? domRect.height : height;\n        width = data.axis === 'y' ? domRect.width : width;\n      }\n      isAutoUpdateEvent = true;\n      return {\n        width,\n        height,\n        x,\n        y,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x\n      };\n    }\n  };\n}\nfunction isMouseBasedEvent(event) {\n  return event != null && event.clientX != null;\n}\n/**\n * Positions the floating element relative to a client point (in the viewport),\n * such as the mouse position. By default, it follows the mouse cursor.\n * @see https://floating-ui.com/docs/useClientPoint\n */\nfunction useClientPoint(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    dataRef,\n    elements: {\n      floating,\n      domReference\n    },\n    refs\n  } = context;\n  const {\n    enabled = true,\n    axis = 'both',\n    x = null,\n    y = null\n  } = props;\n  const initialRef = React.useRef(false);\n  const cleanupListenerRef = React.useRef(null);\n  const [pointerType, setPointerType] = React.useState();\n  const [reactive, setReactive] = React.useState([]);\n  const setReference = useEffectEvent((x, y) => {\n    if (initialRef.current) return;\n\n    // Prevent setting if the open event was not a mouse-like one\n    // (e.g. focus to open, then hover over the reference element).\n    // Only apply if the event exists.\n    if (dataRef.current.openEvent && !isMouseBasedEvent(dataRef.current.openEvent)) {\n      return;\n    }\n    refs.setPositionReference(createVirtualElement(domReference, {\n      x,\n      y,\n      axis,\n      dataRef,\n      pointerType\n    }));\n  });\n  const handleReferenceEnterOrMove = useEffectEvent(event => {\n    if (x != null || y != null) return;\n    if (!open) {\n      setReference(event.clientX, event.clientY);\n    } else if (!cleanupListenerRef.current) {\n      // If there's no cleanup, there's no listener, but we want to ensure\n      // we add the listener if the cursor landed on the floating element and\n      // then back on the reference (i.e. it's interactive).\n      setReactive([]);\n    }\n  });\n\n  // If the pointer is a mouse-like pointer, we want to continue following the\n  // mouse even if the floating element is transitioning out. On touch\n  // devices, this is undesirable because the floating element will move to\n  // the dismissal touch point.\n  const openCheck = isMouseLikePointerType(pointerType) ? floating : open;\n  const addListener = React.useCallback(() => {\n    // Explicitly specified `x`/`y` coordinates shouldn't add a listener.\n    if (!openCheck || !enabled || x != null || y != null) return;\n    const win = getWindow(floating);\n    function handleMouseMove(event) {\n      const target = getTarget(event);\n      if (!contains(floating, target)) {\n        setReference(event.clientX, event.clientY);\n      } else {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      }\n    }\n    if (!dataRef.current.openEvent || isMouseBasedEvent(dataRef.current.openEvent)) {\n      win.addEventListener('mousemove', handleMouseMove);\n      const cleanup = () => {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      };\n      cleanupListenerRef.current = cleanup;\n      return cleanup;\n    }\n    refs.setPositionReference(domReference);\n  }, [openCheck, enabled, x, y, floating, dataRef, refs, domReference, setReference]);\n  React.useEffect(() => {\n    return addListener();\n  }, [addListener, reactive]);\n  React.useEffect(() => {\n    if (enabled && !floating) {\n      initialRef.current = false;\n    }\n  }, [enabled, floating]);\n  React.useEffect(() => {\n    if (!enabled && open) {\n      initialRef.current = true;\n    }\n  }, [enabled, open]);\n  index(() => {\n    if (enabled && (x != null || y != null)) {\n      initialRef.current = false;\n      setReference(x, y);\n    }\n  }, [enabled, x, y, setReference]);\n  const reference = React.useMemo(() => {\n    function setPointerTypeRef(_ref) {\n      let {\n        pointerType\n      } = _ref;\n      setPointerType(pointerType);\n    }\n    return {\n      onPointerDown: setPointerTypeRef,\n      onPointerEnter: setPointerTypeRef,\n      onMouseMove: handleReferenceEnterOrMove,\n      onMouseEnter: handleReferenceEnterOrMove\n    };\n  }, [handleReferenceEnterOrMove]);\n  return React.useMemo(() => enabled ? {\n    reference\n  } : {}, [enabled, reference]);\n}\n\nconst bubbleHandlerKeys = {\n  pointerdown: 'onPointerDown',\n  mousedown: 'onMouseDown',\n  click: 'onClick'\n};\nconst captureHandlerKeys = {\n  pointerdown: 'onPointerDownCapture',\n  mousedown: 'onMouseDownCapture',\n  click: 'onClickCapture'\n};\nconst normalizeProp = normalizable => {\n  var _normalizable$escapeK, _normalizable$outside;\n  return {\n    escapeKey: typeof normalizable === 'boolean' ? normalizable : (_normalizable$escapeK = normalizable == null ? void 0 : normalizable.escapeKey) != null ? _normalizable$escapeK : false,\n    outsidePress: typeof normalizable === 'boolean' ? normalizable : (_normalizable$outside = normalizable == null ? void 0 : normalizable.outsidePress) != null ? _normalizable$outside : true\n  };\n};\n/**\n * Closes the floating element when a dismissal is requested — by default, when\n * the user presses the `escape` key or outside of the floating element.\n * @see https://floating-ui.com/docs/useDismiss\n */\nfunction useDismiss(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    elements,\n    dataRef\n  } = context;\n  const {\n    enabled = true,\n    escapeKey = true,\n    outsidePress: unstable_outsidePress = true,\n    outsidePressEvent = 'pointerdown',\n    referencePress = false,\n    referencePressEvent = 'pointerdown',\n    ancestorScroll = false,\n    bubbles,\n    capture\n  } = props;\n  const tree = useFloatingTree();\n  const outsidePressFn = useEffectEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);\n  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;\n  const insideReactTreeRef = React.useRef(false);\n  const endedOrStartedInsideRef = React.useRef(false);\n  const {\n    escapeKey: escapeKeyBubbles,\n    outsidePress: outsidePressBubbles\n  } = normalizeProp(bubbles);\n  const {\n    escapeKey: escapeKeyCapture,\n    outsidePress: outsidePressCapture\n  } = normalizeProp(capture);\n  const isComposingRef = React.useRef(false);\n  const closeOnEscapeKeyDown = useEffectEvent(event => {\n    var _dataRef$current$floa;\n    if (!open || !enabled || !escapeKey || event.key !== 'Escape') {\n      return;\n    }\n\n    // Wait until IME is settled. Pressing `Escape` while composing should\n    // close the compose menu, but not the floating element.\n    if (isComposingRef.current) {\n      return;\n    }\n    const nodeId = (_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.nodeId;\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (!escapeKeyBubbles) {\n      event.stopPropagation();\n      if (children.length > 0) {\n        let shouldDismiss = true;\n        children.forEach(child => {\n          var _child$context;\n          if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {\n            shouldDismiss = false;\n            return;\n          }\n        });\n        if (!shouldDismiss) {\n          return;\n        }\n      }\n    }\n    onOpenChange(false, isReactEvent(event) ? event.nativeEvent : event, 'escape-key');\n  });\n  const closeOnEscapeKeyDownCapture = useEffectEvent(event => {\n    var _getTarget2;\n    const callback = () => {\n      var _getTarget;\n      closeOnEscapeKeyDown(event);\n      (_getTarget = getTarget(event)) == null || _getTarget.removeEventListener('keydown', callback);\n    };\n    (_getTarget2 = getTarget(event)) == null || _getTarget2.addEventListener('keydown', callback);\n  });\n  const closeOnPressOutside = useEffectEvent(event => {\n    var _dataRef$current$floa2;\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = insideReactTreeRef.current;\n    insideReactTreeRef.current = false;\n\n    // When click outside is lazy (`click` event), handle dragging.\n    // Don't close if:\n    // - The click started inside the floating element.\n    // - The click ended inside the floating element.\n    const endedOrStartedInside = endedOrStartedInsideRef.current;\n    endedOrStartedInsideRef.current = false;\n    if (outsidePressEvent === 'click' && endedOrStartedInside) {\n      return;\n    }\n    if (insideReactTree) {\n      return;\n    }\n    if (typeof outsidePress === 'function' && !outsidePress(event)) {\n      return;\n    }\n    const target = getTarget(event);\n    const inertSelector = \"[\" + createAttribute('inert') + \"]\";\n    const markers = getDocument(elements.floating).querySelectorAll(inertSelector);\n    let targetRootAncestor = isElement(target) ? target : null;\n    while (targetRootAncestor && !isLastTraversableNode(targetRootAncestor)) {\n      const nextParent = getParentNode(targetRootAncestor);\n      if (isLastTraversableNode(nextParent) || !isElement(nextParent)) {\n        break;\n      }\n      targetRootAncestor = nextParent;\n    }\n\n    // Check if the click occurred on a third-party element injected after the\n    // floating element rendered.\n    if (markers.length && isElement(target) && !isRootElement(target) &&\n    // Clicked on a direct ancestor (e.g. FloatingOverlay).\n    !contains(target, elements.floating) &&\n    // If the target root element contains none of the markers, then the\n    // element was injected after the floating element rendered.\n    Array.from(markers).every(marker => !contains(targetRootAncestor, marker))) {\n      return;\n    }\n\n    // Check if the click occurred on the scrollbar\n    if (isHTMLElement(target) && floating) {\n      // In Firefox, `target.scrollWidth > target.clientWidth` for inline\n      // elements.\n      const canScrollX = target.clientWidth > 0 && target.scrollWidth > target.clientWidth;\n      const canScrollY = target.clientHeight > 0 && target.scrollHeight > target.clientHeight;\n      let xCond = canScrollY && event.offsetX > target.clientWidth;\n\n      // In some browsers it is possible to change the <body> (or window)\n      // scrollbar to the left side, but is very rare and is difficult to\n      // check for. Plus, for modal dialogs with backdrops, it is more\n      // important that the backdrop is checked but not so much the window.\n      if (canScrollY) {\n        const isRTL = getComputedStyle(target).direction === 'rtl';\n        if (isRTL) {\n          xCond = event.offsetX <= target.offsetWidth - target.clientWidth;\n        }\n      }\n      if (xCond || canScrollX && event.offsetY > target.clientHeight) {\n        return;\n      }\n    }\n    const nodeId = (_dataRef$current$floa2 = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa2.nodeId;\n    const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n      var _node$context;\n      return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);\n    });\n    if (isEventTargetWithin(event, elements.floating) || isEventTargetWithin(event, elements.domReference) || targetIsInsideChildren) {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (children.length > 0) {\n      let shouldDismiss = true;\n      children.forEach(child => {\n        var _child$context2;\n        if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {\n          shouldDismiss = false;\n          return;\n        }\n      });\n      if (!shouldDismiss) {\n        return;\n      }\n    }\n    onOpenChange(false, event, 'outside-press');\n  });\n  const closeOnPressOutsideCapture = useEffectEvent(event => {\n    var _getTarget4;\n    const callback = () => {\n      var _getTarget3;\n      closeOnPressOutside(event);\n      (_getTarget3 = getTarget(event)) == null || _getTarget3.removeEventListener(outsidePressEvent, callback);\n    };\n    (_getTarget4 = getTarget(event)) == null || _getTarget4.addEventListener(outsidePressEvent, callback);\n  });\n  React.useEffect(() => {\n    if (!open || !enabled) {\n      return;\n    }\n    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;\n    dataRef.current.__outsidePressBubbles = outsidePressBubbles;\n    let compositionTimeout = -1;\n    function onScroll(event) {\n      onOpenChange(false, event, 'ancestor-scroll');\n    }\n    function handleCompositionStart() {\n      window.clearTimeout(compositionTimeout);\n      isComposingRef.current = true;\n    }\n    function handleCompositionEnd() {\n      // Safari fires `compositionend` before `keydown`, so we need to wait\n      // until the next tick to set `isComposing` to `false`.\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      compositionTimeout = window.setTimeout(() => {\n        isComposingRef.current = false;\n      },\n      // 0ms or 1ms don't work in Safari. 5ms appears to consistently work.\n      // Only apply to WebKit for the test to remain 0ms.\n      isWebKit() ? 5 : 0);\n    }\n    const doc = getDocument(elements.floating);\n    if (escapeKey) {\n      doc.addEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n      doc.addEventListener('compositionstart', handleCompositionStart);\n      doc.addEventListener('compositionend', handleCompositionEnd);\n    }\n    outsidePress && doc.addEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n    let ancestors = [];\n    if (ancestorScroll) {\n      if (isElement(elements.domReference)) {\n        ancestors = getOverflowAncestors(elements.domReference);\n      }\n      if (isElement(elements.floating)) {\n        ancestors = ancestors.concat(getOverflowAncestors(elements.floating));\n      }\n      if (!isElement(elements.reference) && elements.reference && elements.reference.contextElement) {\n        ancestors = ancestors.concat(getOverflowAncestors(elements.reference.contextElement));\n      }\n    }\n\n    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)\n    ancestors = ancestors.filter(ancestor => {\n      var _doc$defaultView;\n      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);\n    });\n    ancestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n    });\n    return () => {\n      if (escapeKey) {\n        doc.removeEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n        doc.removeEventListener('compositionstart', handleCompositionStart);\n        doc.removeEventListener('compositionend', handleCompositionEnd);\n      }\n      outsidePress && doc.removeEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n      ancestors.forEach(ancestor => {\n        ancestor.removeEventListener('scroll', onScroll);\n      });\n      window.clearTimeout(compositionTimeout);\n    };\n  }, [dataRef, elements, escapeKey, outsidePress, outsidePressEvent, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, closeOnEscapeKeyDown, escapeKeyCapture, closeOnEscapeKeyDownCapture, closeOnPressOutside, outsidePressCapture, closeOnPressOutsideCapture]);\n  React.useEffect(() => {\n    insideReactTreeRef.current = false;\n  }, [outsidePress, outsidePressEvent]);\n  const reference = React.useMemo(() => ({\n    onKeyDown: closeOnEscapeKeyDown,\n    [bubbleHandlerKeys[referencePressEvent]]: event => {\n      if (referencePress) {\n        onOpenChange(false, event.nativeEvent, 'reference-press');\n      }\n    }\n  }), [closeOnEscapeKeyDown, onOpenChange, referencePress, referencePressEvent]);\n  const floating = React.useMemo(() => ({\n    onKeyDown: closeOnEscapeKeyDown,\n    onMouseDown() {\n      endedOrStartedInsideRef.current = true;\n    },\n    onMouseUp() {\n      endedOrStartedInsideRef.current = true;\n    },\n    [captureHandlerKeys[outsidePressEvent]]: () => {\n      insideReactTreeRef.current = true;\n    }\n  }), [closeOnEscapeKeyDown, outsidePressEvent]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating\n  } : {}, [enabled, reference, floating]);\n}\n\nfunction useFloatingRootContext(options) {\n  const {\n    open = false,\n    onOpenChange: onOpenChangeProp,\n    elements: elementsProp\n  } = options;\n  const floatingId = useId();\n  const dataRef = React.useRef({});\n  const [events] = React.useState(() => createPubSub());\n  const nested = useFloatingParentNodeId() != null;\n  if (process.env.NODE_ENV !== \"production\") {\n    const optionDomReference = elementsProp.reference;\n    if (optionDomReference && !isElement(optionDomReference)) {\n      error('Cannot pass a virtual element to the `elements.reference` option,', 'as it must be a real DOM element. Use `refs.setPositionReference()`', 'instead.');\n    }\n  }\n  const [positionReference, setPositionReference] = React.useState(elementsProp.reference);\n  const onOpenChange = useEffectEvent((open, event, reason) => {\n    dataRef.current.openEvent = open ? event : undefined;\n    events.emit('openchange', {\n      open,\n      event,\n      reason,\n      nested\n    });\n    onOpenChangeProp == null || onOpenChangeProp(open, event, reason);\n  });\n  const refs = React.useMemo(() => ({\n    setPositionReference\n  }), []);\n  const elements = React.useMemo(() => ({\n    reference: positionReference || elementsProp.reference || null,\n    floating: elementsProp.floating || null,\n    domReference: elementsProp.reference\n  }), [positionReference, elementsProp.reference, elementsProp.floating]);\n  return React.useMemo(() => ({\n    dataRef,\n    open,\n    onOpenChange,\n    elements,\n    events,\n    floatingId,\n    refs\n  }), [open, onOpenChange, elements, events, floatingId, refs]);\n}\n\n/**\n * Provides data to position a floating element and context to add interactions.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    nodeId\n  } = options;\n  const internalRootContext = useFloatingRootContext({\n    ...options,\n    elements: {\n      reference: null,\n      floating: null,\n      ...options.elements\n    }\n  });\n  const rootContext = options.rootContext || internalRootContext;\n  const computedElements = rootContext.elements;\n  const [_domReference, setDomReference] = React.useState(null);\n  const [positionReference, _setPositionReference] = React.useState(null);\n  const optionDomReference = computedElements == null ? void 0 : computedElements.domReference;\n  const domReference = optionDomReference || _domReference;\n  const domReferenceRef = React.useRef(null);\n  const tree = useFloatingTree();\n  index(() => {\n    if (domReference) {\n      domReferenceRef.current = domReference;\n    }\n  }, [domReference]);\n  const position = useFloating$1({\n    ...options,\n    elements: {\n      ...computedElements,\n      ...(positionReference && {\n        reference: positionReference\n      })\n    }\n  });\n  const setPositionReference = React.useCallback(node => {\n    const computedPositionReference = isElement(node) ? {\n      getBoundingClientRect: () => node.getBoundingClientRect(),\n      contextElement: node\n    } : node;\n    // Store the positionReference in state if the DOM reference is specified externally via the\n    // `elements.reference` option. This ensures that it won't be overridden on future renders.\n    _setPositionReference(computedPositionReference);\n    position.refs.setReference(computedPositionReference);\n  }, [position.refs]);\n  const setReference = React.useCallback(node => {\n    if (isElement(node) || node === null) {\n      domReferenceRef.current = node;\n      setDomReference(node);\n    }\n\n    // Backwards-compatibility for passing a virtual element to `reference`\n    // after it has set the DOM reference.\n    if (isElement(position.refs.reference.current) || position.refs.reference.current === null ||\n    // Don't allow setting virtual elements using the old technique back to\n    // `null` to support `positionReference` + an unstable `reference`\n    // callback ref.\n    node !== null && !isElement(node)) {\n      position.refs.setReference(node);\n    }\n  }, [position.refs]);\n  const refs = React.useMemo(() => ({\n    ...position.refs,\n    setReference,\n    setPositionReference,\n    domReference: domReferenceRef\n  }), [position.refs, setReference, setPositionReference]);\n  const elements = React.useMemo(() => ({\n    ...position.elements,\n    domReference: domReference\n  }), [position.elements, domReference]);\n  const context = React.useMemo(() => ({\n    ...position,\n    ...rootContext,\n    refs,\n    elements,\n    nodeId\n  }), [position, refs, elements, nodeId, rootContext]);\n  index(() => {\n    rootContext.dataRef.current.floatingContext = context;\n    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);\n    if (node) {\n      node.context = context;\n    }\n  });\n  return React.useMemo(() => ({\n    ...position,\n    context,\n    refs,\n    elements\n  }), [position, refs, elements, context]);\n}\n\n/**\n * Opens the floating element while the reference element has focus, like CSS\n * `:focus`.\n * @see https://floating-ui.com/docs/useFocus\n */\nfunction useFocus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    events,\n    dataRef,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    visibleOnly = true\n  } = props;\n  const blockFocusRef = React.useRef(false);\n  const timeoutRef = React.useRef();\n  const keyboardModalityRef = React.useRef(true);\n  React.useEffect(() => {\n    if (!enabled) return;\n    const win = getWindow(elements.domReference);\n\n    // If the reference was focused and the user left the tab/window, and the\n    // floating element was not open, the focus should be blocked when they\n    // return to the tab/window.\n    function onBlur() {\n      if (!open && isHTMLElement(elements.domReference) && elements.domReference === activeElement(getDocument(elements.domReference))) {\n        blockFocusRef.current = true;\n      }\n    }\n    function onKeyDown() {\n      keyboardModalityRef.current = true;\n    }\n    win.addEventListener('blur', onBlur);\n    win.addEventListener('keydown', onKeyDown, true);\n    return () => {\n      win.removeEventListener('blur', onBlur);\n      win.removeEventListener('keydown', onKeyDown, true);\n    };\n  }, [elements.domReference, open, enabled]);\n  React.useEffect(() => {\n    if (!enabled) return;\n    function onOpenChange(_ref) {\n      let {\n        reason\n      } = _ref;\n      if (reason === 'reference-press' || reason === 'escape-key') {\n        blockFocusRef.current = true;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [events, enabled]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  const reference = React.useMemo(() => ({\n    onPointerDown(event) {\n      if (isVirtualPointerEvent(event.nativeEvent)) return;\n      keyboardModalityRef.current = false;\n    },\n    onMouseLeave() {\n      blockFocusRef.current = false;\n    },\n    onFocus(event) {\n      if (blockFocusRef.current) return;\n      const target = getTarget(event.nativeEvent);\n      if (visibleOnly && isElement(target)) {\n        try {\n          // Mac Safari unreliably matches `:focus-visible` on the reference\n          // if focus was outside the page initially - use the fallback\n          // instead.\n          if (isSafari() && isMac()) throw Error();\n          if (!target.matches(':focus-visible')) return;\n        } catch (e) {\n          // Old browsers will throw an error when using `:focus-visible`.\n          if (!keyboardModalityRef.current && !isTypeableElement(target)) {\n            return;\n          }\n        }\n      }\n      onOpenChange(true, event.nativeEvent, 'focus');\n    },\n    onBlur(event) {\n      blockFocusRef.current = false;\n      const relatedTarget = event.relatedTarget;\n      const nativeEvent = event.nativeEvent;\n\n      // Hit the non-modal focus management portal guard. Focus will be\n      // moved into the floating element immediately after.\n      const movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute(createAttribute('focus-guard')) && relatedTarget.getAttribute('data-type') === 'outside';\n\n      // Wait for the window blur listener to fire.\n      timeoutRef.current = window.setTimeout(() => {\n        var _dataRef$current$floa;\n        const activeEl = activeElement(elements.domReference ? elements.domReference.ownerDocument : document);\n\n        // Focus left the page, keep it open.\n        if (!relatedTarget && activeEl === elements.domReference) return;\n\n        // When focusing the reference element (e.g. regular click), then\n        // clicking into the floating element, prevent it from hiding.\n        // Note: it must be focusable, e.g. `tabindex=\"-1\"`.\n        // We can not rely on relatedTarget to point to the correct element\n        // as it will only point to the shadow host of the newly focused element\n        // and not the element that actually has received focus if it is located\n        // inside a shadow root.\n        if (contains((_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.refs.floating.current, activeEl) || contains(elements.domReference, activeEl) || movedToFocusGuard) {\n          return;\n        }\n        onOpenChange(false, nativeEvent, 'focus');\n      });\n    }\n  }), [dataRef, elements.domReference, onOpenChange, visibleOnly]);\n  return React.useMemo(() => enabled ? {\n    reference\n  } : {}, [enabled, reference]);\n}\n\nconst ACTIVE_KEY = 'active';\nconst SELECTED_KEY = 'selected';\nfunction mergeProps(userProps, propsList, elementKey) {\n  const map = new Map();\n  const isItem = elementKey === 'item';\n  let domUserProps = userProps;\n  if (isItem && userProps) {\n    const {\n      [ACTIVE_KEY]: _,\n      [SELECTED_KEY]: __,\n      ...validProps\n    } = userProps;\n    domUserProps = validProps;\n  }\n  return {\n    ...(elementKey === 'floating' && {\n      tabIndex: -1,\n      [FOCUSABLE_ATTRIBUTE]: ''\n    }),\n    ...domUserProps,\n    ...propsList.map(value => {\n      const propsOrGetProps = value ? value[elementKey] : null;\n      if (typeof propsOrGetProps === 'function') {\n        return userProps ? propsOrGetProps(userProps) : null;\n      }\n      return propsOrGetProps;\n    }).concat(userProps).reduce((acc, props) => {\n      if (!props) {\n        return acc;\n      }\n      Object.entries(props).forEach(_ref => {\n        let [key, value] = _ref;\n        if (isItem && [ACTIVE_KEY, SELECTED_KEY].includes(key)) {\n          return;\n        }\n        if (key.indexOf('on') === 0) {\n          if (!map.has(key)) {\n            map.set(key, []);\n          }\n          if (typeof value === 'function') {\n            var _map$get;\n            (_map$get = map.get(key)) == null || _map$get.push(value);\n            acc[key] = function () {\n              var _map$get2;\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.map(fn => fn(...args)).find(val => val !== undefined);\n            };\n          }\n        } else {\n          acc[key] = value;\n        }\n      });\n      return acc;\n    }, {})\n  };\n}\n/**\n * Merges an array of interaction hooks' props into prop getters, allowing\n * event handler functions to be composed together without overwriting one\n * another.\n * @see https://floating-ui.com/docs/useInteractions\n */\nfunction useInteractions(propsList) {\n  if (propsList === void 0) {\n    propsList = [];\n  }\n  const referenceDeps = propsList.map(key => key == null ? void 0 : key.reference);\n  const floatingDeps = propsList.map(key => key == null ? void 0 : key.floating);\n  const itemDeps = propsList.map(key => key == null ? void 0 : key.item);\n  const getReferenceProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  referenceDeps);\n  const getFloatingProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  floatingDeps);\n  const getItemProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'item'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  itemDeps);\n  return React.useMemo(() => ({\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  }), [getReferenceProps, getFloatingProps, getItemProps]);\n}\n\nlet isPreventScrollSupported = false;\nfunction doSwitch(orientation, vertical, horizontal) {\n  switch (orientation) {\n    case 'vertical':\n      return vertical;\n    case 'horizontal':\n      return horizontal;\n    default:\n      return vertical || horizontal;\n  }\n}\nfunction isMainOrientationKey(key, orientation) {\n  const vertical = key === ARROW_UP || key === ARROW_DOWN;\n  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isMainOrientationToEndKey(key, orientation, rtl) {\n  const vertical = key === ARROW_DOWN;\n  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key === ' ' || key === '';\n}\nfunction isCrossOrientationOpenKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  const horizontal = key === ARROW_DOWN;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isCrossOrientationCloseKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;\n  const horizontal = key === ARROW_UP;\n  return doSwitch(orientation, vertical, horizontal);\n}\n/**\n * Adds arrow key-based navigation of a list of items, either using real DOM\n * focus or virtual focus.\n * @see https://floating-ui.com/docs/useListNavigation\n */\nfunction useListNavigation(context, props) {\n  const {\n    open,\n    onOpenChange,\n    elements\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onNavigate: unstable_onNavigate = () => {},\n    enabled = true,\n    selectedIndex = null,\n    allowEscape = false,\n    loop = false,\n    nested = false,\n    rtl = false,\n    virtual = false,\n    focusItemOnOpen = 'auto',\n    focusItemOnHover = true,\n    openOnArrowKeyDown = true,\n    disabledIndices = undefined,\n    orientation = 'vertical',\n    cols = 1,\n    scrollItemIntoView = true,\n    virtualItemRef,\n    itemSizes,\n    dense = false\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (allowEscape) {\n      if (!loop) {\n        warn('`useListNavigation` looping must be enabled to allow escaping.');\n      }\n      if (!virtual) {\n        warn('`useListNavigation` must be virtual to allow escaping.');\n      }\n    }\n    if (orientation === 'vertical' && cols > 1) {\n      warn('In grid list navigation mode (`cols` > 1), the `orientation` should', 'be either \"horizontal\" or \"both\".');\n    }\n  }\n  const floatingFocusElement = getFloatingFocusElement(elements.floating);\n  const floatingFocusElementRef = useLatestRef(floatingFocusElement);\n  const parentId = useFloatingParentNodeId();\n  const tree = useFloatingTree();\n  const onNavigate = useEffectEvent(unstable_onNavigate);\n  const typeableComboboxReference = isTypeableCombobox(elements.domReference);\n  const focusItemOnOpenRef = React.useRef(focusItemOnOpen);\n  const indexRef = React.useRef(selectedIndex != null ? selectedIndex : -1);\n  const keyRef = React.useRef(null);\n  const isPointerModalityRef = React.useRef(true);\n  const previousOnNavigateRef = React.useRef(onNavigate);\n  const previousMountedRef = React.useRef(!!elements.floating);\n  const previousOpenRef = React.useRef(open);\n  const forceSyncFocus = React.useRef(false);\n  const forceScrollIntoViewRef = React.useRef(false);\n  const disabledIndicesRef = useLatestRef(disabledIndices);\n  const latestOpenRef = useLatestRef(open);\n  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);\n  const selectedIndexRef = useLatestRef(selectedIndex);\n  const [activeId, setActiveId] = React.useState();\n  const [virtualId, setVirtualId] = React.useState();\n  const focusItem = useEffectEvent(function (listRef, indexRef, forceScrollIntoView) {\n    if (forceScrollIntoView === void 0) {\n      forceScrollIntoView = false;\n    }\n    function runFocus(item) {\n      if (virtual) {\n        setActiveId(item.id);\n        tree == null || tree.events.emit('virtualfocus', item);\n        if (virtualItemRef) {\n          virtualItemRef.current = item;\n        }\n      } else {\n        enqueueFocus(item, {\n          preventScroll: true,\n          // Mac Safari does not move the virtual cursor unless the focus call\n          // is sync. However, for the very first focus call, we need to wait\n          // for the position to be ready in order to prevent unwanted\n          // scrolling. This means the virtual cursor will not move to the first\n          // item when first opening the floating element, but will on\n          // subsequent calls. `preventScroll` is supported in modern Safari,\n          // so we can use that instead.\n          // iOS Safari must be async or the first item will not be focused.\n          sync: isMac() && isSafari() ? isPreventScrollSupported || forceSyncFocus.current : false\n        });\n      }\n    }\n    const initialItem = listRef.current[indexRef.current];\n    if (initialItem) {\n      runFocus(initialItem);\n    }\n    requestAnimationFrame(() => {\n      const waitedItem = listRef.current[indexRef.current] || initialItem;\n      if (!waitedItem) return;\n      if (!initialItem) {\n        runFocus(waitedItem);\n      }\n      const scrollIntoViewOptions = scrollItemIntoViewRef.current;\n      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoView || !isPointerModalityRef.current);\n      if (shouldScrollIntoView) {\n        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported\n        // by all browsers.\n        waitedItem.scrollIntoView == null || waitedItem.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {\n          block: 'nearest',\n          inline: 'nearest'\n        } : scrollIntoViewOptions);\n      }\n    });\n  });\n  index(() => {\n    document.createElement('div').focus({\n      get preventScroll() {\n        isPreventScrollSupported = true;\n        return false;\n      }\n    });\n  }, []);\n\n  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating\n  // element. Also, reset `activeIndex` upon closing the floating element.\n  index(() => {\n    if (!enabled) return;\n    if (open && elements.floating) {\n      if (focusItemOnOpenRef.current && selectedIndex != null) {\n        // Regardless of the pointer modality, we want to ensure the selected\n        // item comes into view when the floating element is opened.\n        forceScrollIntoViewRef.current = true;\n        indexRef.current = selectedIndex;\n        onNavigate(selectedIndex);\n      }\n    } else if (previousMountedRef.current) {\n      // Since the user can specify `onNavigate` conditionally\n      // (onNavigate: open ? setActiveIndex : setSelectedIndex),\n      // we store and call the previous function.\n      indexRef.current = -1;\n      previousOnNavigateRef.current(null);\n    }\n  }, [enabled, open, elements.floating, selectedIndex, onNavigate]);\n\n  // Sync `activeIndex` to be the focused item while the floating element is\n  // open.\n  index(() => {\n    if (!enabled) return;\n    if (open && elements.floating) {\n      if (activeIndex == null) {\n        forceSyncFocus.current = false;\n        if (selectedIndexRef.current != null) {\n          return;\n        }\n\n        // Reset while the floating element was open (e.g. the list changed).\n        if (previousMountedRef.current) {\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n        }\n\n        // Initial sync.\n        if ((!previousOpenRef.current || !previousMountedRef.current) && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {\n          let runs = 0;\n          const waitForListPopulated = () => {\n            if (listRef.current[0] == null) {\n              // Avoid letting the browser paint if possible on the first try,\n              // otherwise use rAF. Don't try more than twice, since something\n              // is wrong otherwise.\n              if (runs < 2) {\n                const scheduler = runs ? requestAnimationFrame : queueMicrotask;\n                scheduler(waitForListPopulated);\n              }\n              runs++;\n            } else {\n              indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);\n              keyRef.current = null;\n              onNavigate(indexRef.current);\n            }\n          };\n          waitForListPopulated();\n        }\n      } else if (!isIndexOutOfBounds(listRef, activeIndex)) {\n        indexRef.current = activeIndex;\n        focusItem(listRef, indexRef, forceScrollIntoViewRef.current);\n        forceScrollIntoViewRef.current = false;\n      }\n    }\n  }, [enabled, open, elements.floating, activeIndex, selectedIndexRef, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);\n\n  // Ensure the parent floating element has focus when a nested child closes\n  // to allow arrow key navigation to work after the pointer leaves the child.\n  index(() => {\n    var _nodes$find;\n    if (!enabled || elements.floating || !tree || virtual || !previousMountedRef.current) {\n      return;\n    }\n    const nodes = tree.nodesRef.current;\n    const parent = (_nodes$find = nodes.find(node => node.id === parentId)) == null || (_nodes$find = _nodes$find.context) == null ? void 0 : _nodes$find.elements.floating;\n    const activeEl = activeElement(getDocument(elements.floating));\n    const treeContainsActiveEl = nodes.some(node => node.context && contains(node.context.elements.floating, activeEl));\n    if (parent && !treeContainsActiveEl && isPointerModalityRef.current) {\n      parent.focus({\n        preventScroll: true\n      });\n    }\n  }, [enabled, elements.floating, tree, parentId, virtual]);\n  index(() => {\n    if (!enabled) return;\n    if (!tree) return;\n    if (!virtual) return;\n    if (parentId) return;\n    function handleVirtualFocus(item) {\n      setVirtualId(item.id);\n      if (virtualItemRef) {\n        virtualItemRef.current = item;\n      }\n    }\n    tree.events.on('virtualfocus', handleVirtualFocus);\n    return () => {\n      tree.events.off('virtualfocus', handleVirtualFocus);\n    };\n  }, [enabled, tree, virtual, parentId, virtualItemRef]);\n  index(() => {\n    previousOnNavigateRef.current = onNavigate;\n    previousMountedRef.current = !!elements.floating;\n  });\n  index(() => {\n    if (!open) {\n      keyRef.current = null;\n    }\n  }, [open]);\n  index(() => {\n    previousOpenRef.current = open;\n  }, [open]);\n  const hasActiveIndex = activeIndex != null;\n  const item = React.useMemo(() => {\n    function syncCurrentTarget(currentTarget) {\n      if (!open) return;\n      const index = listRef.current.indexOf(currentTarget);\n      if (index !== -1) {\n        onNavigate(index);\n      }\n    }\n    const props = {\n      onFocus(_ref) {\n        let {\n          currentTarget\n        } = _ref;\n        syncCurrentTarget(currentTarget);\n      },\n      onClick: _ref2 => {\n        let {\n          currentTarget\n        } = _ref2;\n        return currentTarget.focus({\n          preventScroll: true\n        });\n      },\n      // Safari\n      ...(focusItemOnHover && {\n        onMouseMove(_ref3) {\n          let {\n            currentTarget\n          } = _ref3;\n          syncCurrentTarget(currentTarget);\n        },\n        onPointerLeave(_ref4) {\n          let {\n            pointerType\n          } = _ref4;\n          if (!isPointerModalityRef.current || pointerType === 'touch') {\n            return;\n          }\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n          onNavigate(null);\n          if (!virtual) {\n            enqueueFocus(floatingFocusElementRef.current, {\n              preventScroll: true\n            });\n          }\n        }\n      })\n    };\n    return props;\n  }, [open, floatingFocusElementRef, focusItem, focusItemOnHover, listRef, onNavigate, virtual]);\n  const commonOnKeyDown = useEffectEvent(event => {\n    isPointerModalityRef.current = false;\n    forceSyncFocus.current = true;\n\n    // When composing a character, Chrome fires ArrowDown twice. Firefox/Safari\n    // don't appear to suffer from this. `event.isComposing` is avoided due to\n    // Safari not supporting it properly (although it's not needed in the first\n    // place for Safari, just avoiding any possible issues).\n    if (event.which === 229) {\n      return;\n    }\n\n    // If the floating element is animating out, ignore navigation. Otherwise,\n    // the `activeIndex` gets set to 0 despite not being open so the next time\n    // the user ArrowDowns, the first item won't be focused.\n    if (!latestOpenRef.current && event.currentTarget === floatingFocusElementRef.current) {\n      return;\n    }\n    if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {\n      stopEvent(event);\n      onOpenChange(false, event.nativeEvent, 'list-navigation');\n      if (isHTMLElement(elements.domReference)) {\n        if (virtual) {\n          tree == null || tree.events.emit('virtualfocus', elements.domReference);\n        } else {\n          elements.domReference.focus();\n        }\n      }\n      return;\n    }\n    const currentIndex = indexRef.current;\n    const minIndex = getMinIndex(listRef, disabledIndices);\n    const maxIndex = getMaxIndex(listRef, disabledIndices);\n    if (!typeableComboboxReference) {\n      if (event.key === 'Home') {\n        stopEvent(event);\n        indexRef.current = minIndex;\n        onNavigate(indexRef.current);\n      }\n      if (event.key === 'End') {\n        stopEvent(event);\n        indexRef.current = maxIndex;\n        onNavigate(indexRef.current);\n      }\n    }\n\n    // Grid navigation.\n    if (cols > 1) {\n      const sizes = itemSizes || Array.from({\n        length: listRef.current.length\n      }, () => ({\n        width: 1,\n        height: 1\n      }));\n      // To calculate movements on the grid, we use hypothetical cell indices\n      // as if every item was 1x1, then convert back to real indices.\n      const cellMap = buildCellMap(sizes, cols, dense);\n      const minGridIndex = cellMap.findIndex(index => index != null && !isDisabled(listRef.current, index, disabledIndices));\n      // last enabled index\n      const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !isDisabled(listRef.current, index, disabledIndices) ? cellIndex : foundIndex, -1);\n      const index = cellMap[getGridNavigatedIndex({\n        current: cellMap.map(itemIndex => itemIndex != null ? listRef.current[itemIndex] : null)\n      }, {\n        event,\n        orientation,\n        loop,\n        cols,\n        // treat undefined (empty grid spaces) as disabled indices so we\n        // don't end up in them\n        disabledIndices: getCellIndices([...(disabledIndices || listRef.current.map((_, index) => isDisabled(listRef.current, index) ? index : undefined)), undefined], cellMap),\n        minIndex: minGridIndex,\n        maxIndex: maxGridIndex,\n        prevIndex: getCellIndexOfCorner(indexRef.current > maxIndex ? minIndex : indexRef.current, sizes, cellMap, cols,\n        // use a corner matching the edge closest to the direction\n        // we're moving in so we don't end up in the same item. Prefer\n        // top/left over bottom/right.\n        event.key === ARROW_DOWN ? 'bl' : event.key === ARROW_RIGHT ? 'tr' : 'tl'),\n        stopEvent: true\n      })];\n      if (index != null) {\n        indexRef.current = index;\n        onNavigate(indexRef.current);\n      }\n      if (orientation === 'both') {\n        return;\n      }\n    }\n    if (isMainOrientationKey(event.key, orientation)) {\n      stopEvent(event);\n\n      // Reset the index if no item is focused.\n      if (open && !virtual && activeElement(event.currentTarget.ownerDocument) === event.currentTarget) {\n        indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;\n        onNavigate(indexRef.current);\n        return;\n      }\n      if (isMainOrientationToEndKey(event.key, orientation, rtl)) {\n        if (loop) {\n          indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            disabledIndices\n          });\n        } else {\n          indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            disabledIndices\n          }));\n        }\n      } else {\n        if (loop) {\n          indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            decrement: true,\n            disabledIndices\n          });\n        } else {\n          indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            decrement: true,\n            disabledIndices\n          }));\n        }\n      }\n      if (isIndexOutOfBounds(listRef, indexRef.current)) {\n        onNavigate(null);\n      } else {\n        onNavigate(indexRef.current);\n      }\n    }\n  });\n  const ariaActiveDescendantProp = React.useMemo(() => {\n    return virtual && open && hasActiveIndex && {\n      'aria-activedescendant': virtualId || activeId\n    };\n  }, [virtual, open, hasActiveIndex, virtualId, activeId]);\n  const floating = React.useMemo(() => {\n    return {\n      'aria-orientation': orientation === 'both' ? undefined : orientation,\n      ...(!isTypeableCombobox(elements.domReference) && ariaActiveDescendantProp),\n      onKeyDown: commonOnKeyDown,\n      onPointerMove() {\n        isPointerModalityRef.current = true;\n      }\n    };\n  }, [ariaActiveDescendantProp, commonOnKeyDown, elements.domReference, orientation]);\n  const reference = React.useMemo(() => {\n    function checkVirtualMouse(event) {\n      if (focusItemOnOpen === 'auto' && isVirtualClick(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    function checkVirtualPointer(event) {\n      // `pointerdown` fires first, reset the state then perform the checks.\n      focusItemOnOpenRef.current = focusItemOnOpen;\n      if (focusItemOnOpen === 'auto' && isVirtualPointerEvent(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    return {\n      ...ariaActiveDescendantProp,\n      onKeyDown(event) {\n        isPointerModalityRef.current = false;\n        const isArrowKey = event.key.startsWith('Arrow');\n        const isHomeOrEndKey = ['Home', 'End'].includes(event.key);\n        const isMoveKey = isArrowKey || isHomeOrEndKey;\n        const isCrossOpenKey = isCrossOrientationOpenKey(event.key, orientation, rtl);\n        const isCrossCloseKey = isCrossOrientationCloseKey(event.key, orientation, rtl);\n        const isMainKey = isMainOrientationKey(event.key, orientation);\n        const isNavigationKey = (nested ? isCrossOpenKey : isMainKey) || event.key === 'Enter' || event.key.trim() === '';\n        if (virtual && open) {\n          const rootNode = tree == null ? void 0 : tree.nodesRef.current.find(node => node.parentId == null);\n          const deepestNode = tree && rootNode ? getDeepestNode(tree.nodesRef.current, rootNode.id) : null;\n          if (isMoveKey && deepestNode && virtualItemRef) {\n            const eventObject = new KeyboardEvent('keydown', {\n              key: event.key,\n              bubbles: true\n            });\n            if (isCrossOpenKey || isCrossCloseKey) {\n              var _deepestNode$context, _deepestNode$context2;\n              const isCurrentTarget = ((_deepestNode$context = deepestNode.context) == null ? void 0 : _deepestNode$context.elements.domReference) === event.currentTarget;\n              const dispatchItem = isCrossCloseKey && !isCurrentTarget ? (_deepestNode$context2 = deepestNode.context) == null ? void 0 : _deepestNode$context2.elements.domReference : isCrossOpenKey ? listRef.current.find(item => (item == null ? void 0 : item.id) === activeId) : null;\n              if (dispatchItem) {\n                stopEvent(event);\n                dispatchItem.dispatchEvent(eventObject);\n                setVirtualId(undefined);\n              }\n            }\n            if ((isMainKey || isHomeOrEndKey) && deepestNode.context) {\n              if (deepestNode.context.open && deepestNode.parentId && event.currentTarget !== deepestNode.context.elements.domReference) {\n                var _deepestNode$context$;\n                stopEvent(event);\n                (_deepestNode$context$ = deepestNode.context.elements.domReference) == null || _deepestNode$context$.dispatchEvent(eventObject);\n                return;\n              }\n            }\n          }\n          return commonOnKeyDown(event);\n        }\n\n        // If a floating element should not open on arrow key down, avoid\n        // setting `activeIndex` while it's closed.\n        if (!open && !openOnArrowKeyDown && isArrowKey) {\n          return;\n        }\n        if (isNavigationKey) {\n          keyRef.current = nested && isMainKey ? null : event.key;\n        }\n        if (nested) {\n          if (isCrossOpenKey) {\n            stopEvent(event);\n            if (open) {\n              indexRef.current = getMinIndex(listRef, disabledIndicesRef.current);\n              onNavigate(indexRef.current);\n            } else {\n              onOpenChange(true, event.nativeEvent, 'list-navigation');\n            }\n          }\n          return;\n        }\n        if (isMainKey) {\n          if (selectedIndex != null) {\n            indexRef.current = selectedIndex;\n          }\n          stopEvent(event);\n          if (!open && openOnArrowKeyDown) {\n            onOpenChange(true, event.nativeEvent, 'list-navigation');\n          } else {\n            commonOnKeyDown(event);\n          }\n          if (open) {\n            onNavigate(indexRef.current);\n          }\n        }\n      },\n      onFocus() {\n        if (open && !virtual) {\n          onNavigate(null);\n        }\n      },\n      onPointerDown: checkVirtualPointer,\n      onMouseDown: checkVirtualMouse,\n      onClick: checkVirtualMouse\n    };\n  }, [activeId, ariaActiveDescendantProp, commonOnKeyDown, disabledIndicesRef, focusItemOnOpen, listRef, nested, onNavigate, onOpenChange, open, openOnArrowKeyDown, orientation, rtl, selectedIndex, tree, virtual, virtualItemRef]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating,\n    item\n  } : {}, [enabled, reference, floating, item]);\n}\n\nconst componentRoleToAriaRoleMap = /*#__PURE__*/new Map([['select', 'listbox'], ['combobox', 'listbox'], ['label', false]]);\n\n/**\n * Adds base screen reader props to the reference and floating elements for a\n * given floating element `role`.\n * @see https://floating-ui.com/docs/useRole\n */\nfunction useRole(context, props) {\n  var _componentRoleToAriaR;\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    floatingId\n  } = context;\n  const {\n    enabled = true,\n    role = 'dialog'\n  } = props;\n  const ariaRole = (_componentRoleToAriaR = componentRoleToAriaRoleMap.get(role)) != null ? _componentRoleToAriaR : role;\n  const referenceId = useId();\n  const parentId = useFloatingParentNodeId();\n  const isNested = parentId != null;\n  const reference = React.useMemo(() => {\n    if (ariaRole === 'tooltip' || role === 'label') {\n      return {\n        [\"aria-\" + (role === 'label' ? 'labelledby' : 'describedby')]: open ? floatingId : undefined\n      };\n    }\n    return {\n      'aria-expanded': open ? 'true' : 'false',\n      'aria-haspopup': ariaRole === 'alertdialog' ? 'dialog' : ariaRole,\n      'aria-controls': open ? floatingId : undefined,\n      ...(ariaRole === 'listbox' && {\n        role: 'combobox'\n      }),\n      ...(ariaRole === 'menu' && {\n        id: referenceId\n      }),\n      ...(ariaRole === 'menu' && isNested && {\n        role: 'menuitem'\n      }),\n      ...(role === 'select' && {\n        'aria-autocomplete': 'none'\n      }),\n      ...(role === 'combobox' && {\n        'aria-autocomplete': 'list'\n      })\n    };\n  }, [ariaRole, floatingId, isNested, open, referenceId, role]);\n  const floating = React.useMemo(() => {\n    const floatingProps = {\n      id: floatingId,\n      ...(ariaRole && {\n        role: ariaRole\n      })\n    };\n    if (ariaRole === 'tooltip' || role === 'label') {\n      return floatingProps;\n    }\n    return {\n      ...floatingProps,\n      ...(ariaRole === 'menu' && {\n        'aria-labelledby': referenceId\n      })\n    };\n  }, [ariaRole, floatingId, referenceId, role]);\n  const item = React.useCallback(_ref => {\n    let {\n      active,\n      selected\n    } = _ref;\n    const commonProps = {\n      role: 'option',\n      ...(active && {\n        id: floatingId + \"-option\"\n      })\n    };\n\n    // For `menu`, we are unable to tell if the item is a `menuitemradio`\n    // or `menuitemcheckbox`. For backwards-compatibility reasons, also\n    // avoid defaulting to `menuitem` as it may overwrite custom role props.\n    switch (role) {\n      case 'select':\n        return {\n          ...commonProps,\n          'aria-selected': active && selected\n        };\n      case 'combobox':\n        {\n          return {\n            ...commonProps,\n            ...(active && {\n              'aria-selected': true\n            })\n          };\n        }\n    }\n    return {};\n  }, [floatingId, role]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating,\n    item\n  } : {}, [enabled, reference, floating, item]);\n}\n\n// Converts a JS style key like `backgroundColor` to a CSS transition-property\n// like `background-color`.\nconst camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());\nfunction execWithArgsOrReturn(valueOrFn, args) {\n  return typeof valueOrFn === 'function' ? valueOrFn(args) : valueOrFn;\n}\nfunction useDelayUnmount(open, durationMs) {\n  const [isMounted, setIsMounted] = React.useState(open);\n  if (open && !isMounted) {\n    setIsMounted(true);\n  }\n  React.useEffect(() => {\n    if (!open && isMounted) {\n      const timeout = setTimeout(() => setIsMounted(false), durationMs);\n      return () => clearTimeout(timeout);\n    }\n  }, [open, isMounted, durationMs]);\n  return isMounted;\n}\n/**\n * Provides a status string to apply CSS transitions to a floating element,\n * correctly handling placement-aware transitions.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstatus\n */\nfunction useTransitionStatus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    elements: {\n      floating\n    }\n  } = context;\n  const {\n    duration = 250\n  } = props;\n  const isNumberDuration = typeof duration === 'number';\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [status, setStatus] = React.useState('unmounted');\n  const isMounted = useDelayUnmount(open, closeDuration);\n  if (!isMounted && status === 'close') {\n    setStatus('unmounted');\n  }\n  index(() => {\n    if (!floating) return;\n    if (open) {\n      setStatus('initial');\n      const frame = requestAnimationFrame(() => {\n        setStatus('open');\n      });\n      return () => {\n        cancelAnimationFrame(frame);\n      };\n    }\n    setStatus('close');\n  }, [open, floating]);\n  return {\n    isMounted,\n    status\n  };\n}\n/**\n * Provides styles to apply CSS transitions to a floating element, correctly\n * handling placement-aware transitions. Wrapper around `useTransitionStatus`.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstyles\n */\nfunction useTransitionStyles(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    initial: unstable_initial = {\n      opacity: 0\n    },\n    open: unstable_open,\n    close: unstable_close,\n    common: unstable_common,\n    duration = 250\n  } = props;\n  const placement = context.placement;\n  const side = placement.split('-')[0];\n  const fnArgs = React.useMemo(() => ({\n    side,\n    placement\n  }), [side, placement]);\n  const isNumberDuration = typeof duration === 'number';\n  const openDuration = (isNumberDuration ? duration : duration.open) || 0;\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [styles, setStyles] = React.useState(() => ({\n    ...execWithArgsOrReturn(unstable_common, fnArgs),\n    ...execWithArgsOrReturn(unstable_initial, fnArgs)\n  }));\n  const {\n    isMounted,\n    status\n  } = useTransitionStatus(context, {\n    duration\n  });\n  const initialRef = useLatestRef(unstable_initial);\n  const openRef = useLatestRef(unstable_open);\n  const closeRef = useLatestRef(unstable_close);\n  const commonRef = useLatestRef(unstable_common);\n  index(() => {\n    const initialStyles = execWithArgsOrReturn(initialRef.current, fnArgs);\n    const closeStyles = execWithArgsOrReturn(closeRef.current, fnArgs);\n    const commonStyles = execWithArgsOrReturn(commonRef.current, fnArgs);\n    const openStyles = execWithArgsOrReturn(openRef.current, fnArgs) || Object.keys(initialStyles).reduce((acc, key) => {\n      acc[key] = '';\n      return acc;\n    }, {});\n    if (status === 'initial') {\n      setStyles(styles => ({\n        transitionProperty: styles.transitionProperty,\n        ...commonStyles,\n        ...initialStyles\n      }));\n    }\n    if (status === 'open') {\n      setStyles({\n        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: openDuration + \"ms\",\n        ...commonStyles,\n        ...openStyles\n      });\n    }\n    if (status === 'close') {\n      const styles = closeStyles || initialStyles;\n      setStyles({\n        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: closeDuration + \"ms\",\n        ...commonStyles,\n        ...styles\n      });\n    }\n  }, [closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status, fnArgs]);\n  return {\n    isMounted,\n    styles\n  };\n}\n\n/**\n * Provides a matching callback that can be used to focus an item as the user\n * types, often used in tandem with `useListNavigation()`.\n * @see https://floating-ui.com/docs/useTypeahead\n */\nfunction useTypeahead(context, props) {\n  var _ref;\n  const {\n    open,\n    dataRef\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onMatch: unstable_onMatch,\n    onTypingChange: unstable_onTypingChange,\n    enabled = true,\n    findMatch = null,\n    resetMs = 750,\n    ignoreKeys = [],\n    selectedIndex = null\n  } = props;\n  const timeoutIdRef = React.useRef();\n  const stringRef = React.useRef('');\n  const prevIndexRef = React.useRef((_ref = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref : -1);\n  const matchIndexRef = React.useRef(null);\n  const onMatch = useEffectEvent(unstable_onMatch);\n  const onTypingChange = useEffectEvent(unstable_onTypingChange);\n  const findMatchRef = useLatestRef(findMatch);\n  const ignoreKeysRef = useLatestRef(ignoreKeys);\n  index(() => {\n    if (open) {\n      clearTimeout(timeoutIdRef.current);\n      matchIndexRef.current = null;\n      stringRef.current = '';\n    }\n  }, [open]);\n  index(() => {\n    // Sync arrow key navigation but not typeahead navigation.\n    if (open && stringRef.current === '') {\n      var _ref2;\n      prevIndexRef.current = (_ref2 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref2 : -1;\n    }\n  }, [open, selectedIndex, activeIndex]);\n  const setTypingChange = useEffectEvent(value => {\n    if (value) {\n      if (!dataRef.current.typing) {\n        dataRef.current.typing = value;\n        onTypingChange(value);\n      }\n    } else {\n      if (dataRef.current.typing) {\n        dataRef.current.typing = value;\n        onTypingChange(value);\n      }\n    }\n  });\n  const onKeyDown = useEffectEvent(event => {\n    function getMatchingIndex(list, orderedList, string) {\n      const str = findMatchRef.current ? findMatchRef.current(orderedList, string) : orderedList.find(text => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(string.toLocaleLowerCase())) === 0);\n      return str ? list.indexOf(str) : -1;\n    }\n    const listContent = listRef.current;\n    if (stringRef.current.length > 0 && stringRef.current[0] !== ' ') {\n      if (getMatchingIndex(listContent, listContent, stringRef.current) === -1) {\n        setTypingChange(false);\n      } else if (event.key === ' ') {\n        stopEvent(event);\n      }\n    }\n    if (listContent == null || ignoreKeysRef.current.includes(event.key) ||\n    // Character key.\n    event.key.length !== 1 ||\n    // Modifier key.\n    event.ctrlKey || event.metaKey || event.altKey) {\n      return;\n    }\n    if (open && event.key !== ' ') {\n      stopEvent(event);\n      setTypingChange(true);\n    }\n\n    // Bail out if the list contains a word like \"llama\" or \"aaron\". TODO:\n    // allow it in this case, too.\n    const allowRapidSuccessionOfFirstLetter = listContent.every(text => {\n      var _text$, _text$2;\n      return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : true;\n    });\n\n    // Allows the user to cycle through items that start with the same letter\n    // in rapid succession.\n    if (allowRapidSuccessionOfFirstLetter && stringRef.current === event.key) {\n      stringRef.current = '';\n      prevIndexRef.current = matchIndexRef.current;\n    }\n    stringRef.current += event.key;\n    clearTimeout(timeoutIdRef.current);\n    timeoutIdRef.current = setTimeout(() => {\n      stringRef.current = '';\n      prevIndexRef.current = matchIndexRef.current;\n      setTypingChange(false);\n    }, resetMs);\n    const prevIndex = prevIndexRef.current;\n    const index = getMatchingIndex(listContent, [...listContent.slice((prevIndex || 0) + 1), ...listContent.slice(0, (prevIndex || 0) + 1)], stringRef.current);\n    if (index !== -1) {\n      onMatch(index);\n      matchIndexRef.current = index;\n    } else if (event.key !== ' ') {\n      stringRef.current = '';\n      setTypingChange(false);\n    }\n  });\n  const reference = React.useMemo(() => ({\n    onKeyDown\n  }), [onKeyDown]);\n  const floating = React.useMemo(() => {\n    return {\n      onKeyDown,\n      onKeyUp(event) {\n        if (event.key === ' ') {\n          setTypingChange(false);\n        }\n      }\n    };\n  }, [onKeyDown, setTypingChange]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating\n  } : {}, [enabled, reference, floating]);\n}\n\nfunction getArgsWithCustomFloatingHeight(state, height) {\n  return {\n    ...state,\n    rects: {\n      ...state.rects,\n      floating: {\n        ...state.rects.floating,\n        height\n      }\n    }\n  };\n}\n/**\n * Positions the floating element such that an inner element inside of it is\n * anchored to the reference element.\n * @see https://floating-ui.com/docs/inner\n */\nconst inner = props => ({\n  name: 'inner',\n  options: props,\n  async fn(state) {\n    const {\n      listRef,\n      overflowRef,\n      onFallbackChange,\n      offset: innerOffset = 0,\n      index = 0,\n      minItemsVisible = 4,\n      referenceOverflowThreshold = 0,\n      scrollRef,\n      ...detectOverflowOptions\n    } = evaluate(props, state);\n    const {\n      rects,\n      elements: {\n        floating\n      }\n    } = state;\n    const item = listRef.current[index];\n    const scrollEl = (scrollRef == null ? void 0 : scrollRef.current) || floating;\n\n    // Valid combinations:\n    // 1. Floating element is the scrollRef and has a border (default)\n    // 2. Floating element is not the scrollRef, floating element has a border\n    // 3. Floating element is not the scrollRef, scrollRef has a border\n    // Floating > {...getFloatingProps()} wrapper > scrollRef > items is not\n    // allowed as VoiceOver doesn't work.\n    const clientTop = floating.clientTop || scrollEl.clientTop;\n    const floatingIsBordered = floating.clientTop !== 0;\n    const scrollElIsBordered = scrollEl.clientTop !== 0;\n    const floatingIsScrollEl = floating === scrollEl;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!state.placement.startsWith('bottom')) {\n        warn('`placement` side must be \"bottom\" when using the `inner`', 'middleware.');\n      }\n    }\n    if (!item) {\n      return {};\n    }\n    const nextArgs = {\n      ...state,\n      ...(await offset(-item.offsetTop - floating.clientTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(state))\n    };\n    const overflow = await detectOverflow(getArgsWithCustomFloatingHeight(nextArgs, scrollEl.scrollHeight + clientTop + floating.clientTop), detectOverflowOptions);\n    const refOverflow = await detectOverflow(nextArgs, {\n      ...detectOverflowOptions,\n      elementContext: 'reference'\n    });\n    const diffY = max(0, overflow.top);\n    const nextY = nextArgs.y + diffY;\n    const isScrollable = scrollEl.scrollHeight > scrollEl.clientHeight;\n    const rounder = isScrollable ? v => v : round;\n    const maxHeight = rounder(max(0, scrollEl.scrollHeight + (floatingIsBordered && floatingIsScrollEl || scrollElIsBordered ? clientTop * 2 : 0) - diffY - max(0, overflow.bottom)));\n    scrollEl.style.maxHeight = maxHeight + \"px\";\n    scrollEl.scrollTop = diffY;\n\n    // There is not enough space, fallback to standard anchored positioning\n    if (onFallbackChange) {\n      const shouldFallback = scrollEl.offsetHeight < item.offsetHeight * min(minItemsVisible, listRef.current.length) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold;\n      ReactDOM.flushSync(() => onFallbackChange(shouldFallback));\n    }\n    if (overflowRef) {\n      overflowRef.current = await detectOverflow(getArgsWithCustomFloatingHeight({\n        ...nextArgs,\n        y: nextY\n      }, scrollEl.offsetHeight + clientTop + floating.clientTop), detectOverflowOptions);\n    }\n    return {\n      y: nextY\n    };\n  }\n});\n/**\n * Changes the `inner` middleware's `offset` upon a `wheel` event to\n * expand the floating element's height, revealing more list items.\n * @see https://floating-ui.com/docs/inner\n */\nfunction useInnerOffset(context, props) {\n  const {\n    open,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    overflowRef,\n    scrollRef,\n    onChange: unstable_onChange\n  } = props;\n  const onChange = useEffectEvent(unstable_onChange);\n  const controlledScrollingRef = React.useRef(false);\n  const prevScrollTopRef = React.useRef(null);\n  const initialOverflowRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!enabled) return;\n    function onWheel(e) {\n      if (e.ctrlKey || !el || overflowRef.current == null) {\n        return;\n      }\n      const dY = e.deltaY;\n      const isAtTop = overflowRef.current.top >= -0.5;\n      const isAtBottom = overflowRef.current.bottom >= -0.5;\n      const remainingScroll = el.scrollHeight - el.clientHeight;\n      const sign = dY < 0 ? -1 : 1;\n      const method = dY < 0 ? 'max' : 'min';\n      if (el.scrollHeight <= el.clientHeight) {\n        return;\n      }\n      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {\n        e.preventDefault();\n        ReactDOM.flushSync(() => {\n          onChange(d => d + Math[method](dY, remainingScroll * sign));\n        });\n      } else if (/firefox/i.test(getUserAgent())) {\n        // Needed to propagate scrolling during momentum scrolling phase once\n        // it gets limited by the boundary. UX improvement, not critical.\n        el.scrollTop += dY;\n      }\n    }\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n    if (open && el) {\n      el.addEventListener('wheel', onWheel);\n\n      // Wait for the position to be ready.\n      requestAnimationFrame(() => {\n        prevScrollTopRef.current = el.scrollTop;\n        if (overflowRef.current != null) {\n          initialOverflowRef.current = {\n            ...overflowRef.current\n          };\n        }\n      });\n      return () => {\n        prevScrollTopRef.current = null;\n        initialOverflowRef.current = null;\n        el.removeEventListener('wheel', onWheel);\n      };\n    }\n  }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]);\n  const floating = React.useMemo(() => ({\n    onKeyDown() {\n      controlledScrollingRef.current = true;\n    },\n    onWheel() {\n      controlledScrollingRef.current = false;\n    },\n    onPointerMove() {\n      controlledScrollingRef.current = false;\n    },\n    onScroll() {\n      const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n      if (!overflowRef.current || !el || !controlledScrollingRef.current) {\n        return;\n      }\n      if (prevScrollTopRef.current !== null) {\n        const scrollDiff = el.scrollTop - prevScrollTopRef.current;\n        if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {\n          ReactDOM.flushSync(() => onChange(d => d + scrollDiff));\n        }\n      }\n\n      // [Firefox] Wait for the height change to have been applied.\n      requestAnimationFrame(() => {\n        prevScrollTopRef.current = el.scrollTop;\n      });\n    }\n  }), [elements.floating, onChange, overflowRef, scrollRef]);\n  return React.useMemo(() => enabled ? {\n    floating\n  } : {}, [enabled, floating]);\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [x, y] = point;\n  let isInside = false;\n  const length = polygon.length;\n  for (let i = 0, j = length - 1; i < length; j = i++) {\n    const [xi, yi] = polygon[i] || [0, 0];\n    const [xj, yj] = polygon[j] || [0, 0];\n    const intersect = yi >= y !== yj >= y && x <= (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) {\n      isInside = !isInside;\n    }\n  }\n  return isInside;\n}\nfunction isInside(point, rect) {\n  return point[0] >= rect.x && point[0] <= rect.x + rect.width && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n}\n/**\n * Generates a safe polygon area that the user can traverse without closing the\n * floating element once leaving the reference element.\n * @see https://floating-ui.com/docs/useHover#safepolygon\n */\nfunction safePolygon(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    buffer = 0.5,\n    blockPointerEvents = false,\n    requireIntent = true\n  } = options;\n  let timeoutId;\n  let hasLanded = false;\n  let lastX = null;\n  let lastY = null;\n  let lastCursorTime = performance.now();\n  function getCursorSpeed(x, y) {\n    const currentTime = performance.now();\n    const elapsedTime = currentTime - lastCursorTime;\n    if (lastX === null || lastY === null || elapsedTime === 0) {\n      lastX = x;\n      lastY = y;\n      lastCursorTime = currentTime;\n      return null;\n    }\n    const deltaX = x - lastX;\n    const deltaY = y - lastY;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const speed = distance / elapsedTime; // px / ms\n\n    lastX = x;\n    lastY = y;\n    lastCursorTime = currentTime;\n    return speed;\n  }\n  const fn = _ref => {\n    let {\n      x,\n      y,\n      placement,\n      elements,\n      onClose,\n      nodeId,\n      tree\n    } = _ref;\n    return function onMouseMove(event) {\n      function close() {\n        clearTimeout(timeoutId);\n        onClose();\n      }\n      clearTimeout(timeoutId);\n      if (!elements.domReference || !elements.floating || placement == null || x == null || y == null) {\n        return;\n      }\n      const {\n        clientX,\n        clientY\n      } = event;\n      const clientPoint = [clientX, clientY];\n      const target = getTarget(event);\n      const isLeave = event.type === 'mouseleave';\n      const isOverFloatingEl = contains(elements.floating, target);\n      const isOverReferenceEl = contains(elements.domReference, target);\n      const refRect = elements.domReference.getBoundingClientRect();\n      const rect = elements.floating.getBoundingClientRect();\n      const side = placement.split('-')[0];\n      const cursorLeaveFromRight = x > rect.right - rect.width / 2;\n      const cursorLeaveFromBottom = y > rect.bottom - rect.height / 2;\n      const isOverReferenceRect = isInside(clientPoint, refRect);\n      const isFloatingWider = rect.width > refRect.width;\n      const isFloatingTaller = rect.height > refRect.height;\n      const left = (isFloatingWider ? refRect : rect).left;\n      const right = (isFloatingWider ? refRect : rect).right;\n      const top = (isFloatingTaller ? refRect : rect).top;\n      const bottom = (isFloatingTaller ? refRect : rect).bottom;\n      if (isOverFloatingEl) {\n        hasLanded = true;\n        if (!isLeave) {\n          return;\n        }\n      }\n      if (isOverReferenceEl) {\n        hasLanded = false;\n      }\n      if (isOverReferenceEl && !isLeave) {\n        hasLanded = true;\n        return;\n      }\n\n      // Prevent overlapping floating element from being stuck in an open-close\n      // loop: https://github.com/floating-ui/floating-ui/issues/1910\n      if (isLeave && isElement(event.relatedTarget) && contains(elements.floating, event.relatedTarget)) {\n        return;\n      }\n\n      // If any nested child is open, abort.\n      if (tree && getChildren(tree.nodesRef.current, nodeId).some(_ref2 => {\n        let {\n          context\n        } = _ref2;\n        return context == null ? void 0 : context.open;\n      })) {\n        return;\n      }\n\n      // If the pointer is leaving from the opposite side, the \"buffer\" logic\n      // creates a point where the floating element remains open, but should be\n      // ignored.\n      // A constant of 1 handles floating point rounding errors.\n      if (side === 'top' && y >= refRect.bottom - 1 || side === 'bottom' && y <= refRect.top + 1 || side === 'left' && x >= refRect.right - 1 || side === 'right' && x <= refRect.left + 1) {\n        return close();\n      }\n\n      // Ignore when the cursor is within the rectangular trough between the\n      // two elements. Since the triangle is created from the cursor point,\n      // which can start beyond the ref element's edge, traversing back and\n      // forth from the ref to the floating element can cause it to close. This\n      // ensures it always remains open in that case.\n      let rectPoly = [];\n      switch (side) {\n        case 'top':\n          rectPoly = [[left, refRect.top + 1], [left, rect.bottom - 1], [right, rect.bottom - 1], [right, refRect.top + 1]];\n          break;\n        case 'bottom':\n          rectPoly = [[left, rect.top + 1], [left, refRect.bottom - 1], [right, refRect.bottom - 1], [right, rect.top + 1]];\n          break;\n        case 'left':\n          rectPoly = [[rect.right - 1, bottom], [rect.right - 1, top], [refRect.left + 1, top], [refRect.left + 1, bottom]];\n          break;\n        case 'right':\n          rectPoly = [[refRect.right - 1, bottom], [refRect.right - 1, top], [rect.left + 1, top], [rect.left + 1, bottom]];\n          break;\n      }\n      function getPolygon(_ref3) {\n        let [x, y] = _ref3;\n        switch (side) {\n          case 'top':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.bottom - buffer : isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'bottom':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.top + buffer : isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'left':\n            {\n              const cursorPointOne = [x + buffer + 1, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x + buffer + 1, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.right - buffer : isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]];\n              return [...commonPoints, cursorPointOne, cursorPointTwo];\n            }\n          case 'right':\n            {\n              const cursorPointOne = [x - buffer, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x - buffer, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.left + buffer : isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n        }\n      }\n      if (isPointInPolygon([clientX, clientY], rectPoly)) {\n        return;\n      }\n      if (hasLanded && !isOverReferenceRect) {\n        return close();\n      }\n      if (!isLeave && requireIntent) {\n        const cursorSpeed = getCursorSpeed(event.clientX, event.clientY);\n        const cursorSpeedThreshold = 0.1;\n        if (cursorSpeed !== null && cursorSpeed < cursorSpeedThreshold) {\n          return close();\n        }\n      }\n      if (!isPointInPolygon([clientX, clientY], getPolygon([x, y]))) {\n        close();\n      } else if (!hasLanded && requireIntent) {\n        timeoutId = window.setTimeout(close, 40);\n      }\n    };\n  };\n  fn.__options = {\n    blockPointerEvents\n  };\n  return fn;\n}\n\nexport { Composite, CompositeItem, FloatingArrow, FloatingDelayGroup, FloatingFocusManager, FloatingList, FloatingNode, FloatingOverlay, FloatingPortal, FloatingTree, inner, safePolygon, useClick, useClientPoint, useDelayGroup, useDelayGroupContext, useDismiss, useFloating, useFloatingNodeId, useFloatingParentNodeId, useFloatingPortalNode, useFloatingRootContext, useFloatingTree, useFocus, useHover, useId, useInnerOffset, useInteractions, useListItem, useListNavigation, useMergeRefs, useRole, useTransitionStatus, useTransitionStyles, useTypeahead };\n","import{autoUpdate as Z,flip as ee,inner as te,offset as ne,shift as le,size as re,useFloating as oe,useInnerOffset as ie,useInteractions as se}from\"@floating-ui/react\";import*as j from\"react\";import{createContext as _,useCallback as ae,useContext as R,useMemo as M,useRef as ue,useState as A}from\"react\";import{useDisposables as fe}from'../hooks/use-disposables.js';import{useEvent as z}from'../hooks/use-event.js';import{useIsoMorphicEffect as C}from'../hooks/use-iso-morphic-effect.js';let y=_({styles:void 0,setReference:()=>{},setFloating:()=>{},getReferenceProps:()=>({}),getFloatingProps:()=>({}),slot:{}});y.displayName=\"FloatingContext\";let H=_(null);H.displayName=\"PlacementContext\";function xe(e){return M(()=>e?typeof e==\"string\"?{to:e}:e:null,[e])}function ye(){return R(y).setReference}function Fe(){return R(y).getReferenceProps}function be(){let{getFloatingProps:e,slot:t}=R(y);return ae((...n)=>Object.assign({},e(...n),{\"data-anchor\":t.anchor}),[e,t])}function Re(e=null){e===!1&&(e=null),typeof e==\"string\"&&(e={to:e});let t=R(H),n=M(()=>e,[JSON.stringify(e,(r,o)=>{var u;return(u=o==null?void 0:o.outerHTML)!=null?u:o})]);C(()=>{t==null||t(n!=null?n:null)},[t,n]);let l=R(y);return M(()=>[l.setFloating,e?l.styles:{}],[l.setFloating,e,l.styles])}let q=4;function Me({children:e,enabled:t=!0}){let[n,l]=A(null),[r,o]=A(0),u=ue(null),[f,s]=A(null);pe(f);let i=t&&n!==null&&f!==null,{to:F=\"bottom\",gap:E=0,offset:v=0,padding:c=0,inner:P}=ce(n,f),[a,p=\"center\"]=F.split(\" \");C(()=>{i&&o(0)},[i]);let{refs:b,floatingStyles:w,context:g}=oe({open:i,placement:a===\"selection\"?p===\"center\"?\"bottom\":`bottom-${p}`:p===\"center\"?`${a}`:`${a}-${p}`,strategy:\"absolute\",transform:!1,middleware:[ne({mainAxis:a===\"selection\"?0:E,crossAxis:v}),le({padding:c}),a!==\"selection\"&&ee({padding:c}),a===\"selection\"&&P?te({...P,padding:c,overflowRef:u,offset:r,minItemsVisible:q,referenceOverflowThreshold:c,onFallbackChange(h){var O,W;if(!h)return;let d=g.elements.floating;if(!d)return;let T=parseFloat(getComputedStyle(d).scrollPaddingBottom)||0,$=Math.min(q,d.childElementCount),L=0,N=0;for(let m of(W=(O=g.elements.floating)==null?void 0:O.childNodes)!=null?W:[])if(m instanceof HTMLElement){let x=m.offsetTop,k=x+m.clientHeight+T,S=d.scrollTop,U=S+d.clientHeight;if(x>=S&&k<=U)$--;else{N=Math.max(0,Math.min(k,U)-Math.max(x,S)),L=m.clientHeight;break}}$>=1&&o(m=>{let x=L*$-N+T;return m>=x?m:x})}}):null,re({padding:c,apply({availableWidth:h,availableHeight:d,elements:T}){Object.assign(T.floating.style,{overflow:\"auto\",maxWidth:`${h}px`,maxHeight:`min(var(--anchor-max-height, 100vh), ${d}px)`})}})].filter(Boolean),whileElementsMounted:Z}),[I=a,B=p]=g.placement.split(\"-\");a===\"selection\"&&(I=\"selection\");let G=M(()=>({anchor:[I,B].filter(Boolean).join(\" \")}),[I,B]),K=ie(g,{overflowRef:u,onChange:o}),{getReferenceProps:Q,getFloatingProps:X}=se([K]),Y=z(h=>{s(h),b.setFloating(h)});return j.createElement(H.Provider,{value:l},j.createElement(y.Provider,{value:{setFloating:Y,setReference:b.setReference,styles:w,getReferenceProps:Q,getFloatingProps:X,slot:G}},e))}function pe(e){C(()=>{if(!e)return;let t=new MutationObserver(()=>{let n=window.getComputedStyle(e).maxHeight,l=parseFloat(n);if(isNaN(l))return;let r=parseInt(n);isNaN(r)||l!==r&&(e.style.maxHeight=`${Math.ceil(l)}px`)});return t.observe(e,{attributes:!0,attributeFilter:[\"style\"]}),()=>{t.disconnect()}},[e])}function ce(e,t){var o,u,f;let n=V((o=e==null?void 0:e.gap)!=null?o:\"var(--anchor-gap, 0)\",t),l=V((u=e==null?void 0:e.offset)!=null?u:\"var(--anchor-offset, 0)\",t),r=V((f=e==null?void 0:e.padding)!=null?f:\"var(--anchor-padding, 0)\",t);return{...e,gap:n,offset:l,padding:r}}function V(e,t,n=void 0){let l=fe(),r=z((s,i)=>{if(s==null)return[n,null];if(typeof s==\"number\")return[s,null];if(typeof s==\"string\"){if(!i)return[n,null];let F=J(s,i);return[F,E=>{let v=D(s);{let c=v.map(P=>window.getComputedStyle(i).getPropertyValue(P));l.requestAnimationFrame(function P(){l.nextFrame(P);let a=!1;for(let[b,w]of v.entries()){let g=window.getComputedStyle(i).getPropertyValue(w);if(c[b]!==g){c[b]=g,a=!0;break}}if(!a)return;let p=J(s,i);F!==p&&(E(p),F=p)})}return l.dispose}]}return[n,null]}),o=M(()=>r(e,t)[0],[e,t]),[u=o,f]=A();return C(()=>{let[s,i]=r(e,t);if(f(s),!!i)return i(f)},[e,t]),u}function D(e){let t=/var\\((.*)\\)/.exec(e);if(t){let n=t[1].indexOf(\",\");if(n===-1)return[t[1]];let l=t[1].slice(0,n).trim(),r=t[1].slice(n+1).trim();return r?[l,...D(r)]:[l]}return[]}function J(e,t){let n=document.createElement(\"div\");t.appendChild(n),n.style.setProperty(\"margin-top\",\"0px\",\"important\"),n.style.setProperty(\"margin-top\",e,\"important\");let l=parseFloat(window.getComputedStyle(n).marginTop)||0;return t.removeChild(n),l}export{Me as FloatingProvider,Re as useFloatingPanel,be as useFloatingPanelProps,ye as useFloatingReference,Fe as useFloatingReferenceProps,xe as useResolvedAnchor};\n","function u(l){throw new Error(\"Unexpected object: \"+l)}var c=(i=>(i[i.First=0]=\"First\",i[i.Previous=1]=\"Previous\",i[i.Next=2]=\"Next\",i[i.Last=3]=\"Last\",i[i.Specific=4]=\"Specific\",i[i.Nothing=5]=\"Nothing\",i))(c||{});function f(l,n){let t=n.resolveItems();if(t.length<=0)return null;let r=n.resolveActiveIndex(),s=r!=null?r:-1;switch(l.focus){case 0:{for(let e=0;e<t.length;++e)if(!n.resolveDisabled(t[e],e,t))return e;return r}case 1:{s===-1&&(s=t.length);for(let e=s-1;e>=0;--e)if(!n.resolveDisabled(t[e],e,t))return e;return r}case 2:{for(let e=s+1;e<t.length;++e)if(!n.resolveDisabled(t[e],e,t))return e;return r}case 3:{for(let e=t.length-1;e>=0;--e)if(!n.resolveDisabled(t[e],e,t))return e;return r}case 4:{for(let e=0;e<t.length;++e)if(n.resolveId(t[e],e,t)===l.id)return e;return r}case 5:return null;default:u(l)}}export{c as Focus,f as calculateActiveIndex};\n","import n,{createContext as d,useContext as i}from\"react\";let e=d(void 0);function u(){return i(e)}function f({id:t,children:r}){return n.createElement(e.Provider,{value:t},r)}export{f as IdProvider,u as useProvidedId};\n","\"use client\";import R,{createContext as k,useContext as h,useMemo as T,useState as D}from\"react\";import{useEvent as v}from'../../hooks/use-event.js';import{useId as _}from'../../hooks/use-id.js';import{useIsoMorphicEffect as A}from'../../hooks/use-iso-morphic-effect.js';import{useSyncRefs as B}from'../../hooks/use-sync-refs.js';import{useDisabled as F}from'../../internal/disabled.js';import{useProvidedId as S}from'../../internal/id.js';import{forwardRefWithAs as M,useRender as H}from'../../utils/render.js';let c=k(null);c.displayName=\"LabelContext\";function P(){let r=h(c);if(r===null){let l=new Error(\"You used a <Label /> component, but it is not inside a relevant parent.\");throw Error.captureStackTrace&&Error.captureStackTrace(l,P),l}return r}function I(r){var a,e,o;let l=(e=(a=h(c))==null?void 0:a.value)!=null?e:void 0;return((o=r==null?void 0:r.length)!=null?o:0)>0?[l,...r].filter(Boolean).join(\" \"):l}function K({inherit:r=!1}={}){let l=I(),[a,e]=D([]),o=r?[l,...a].filter(Boolean):a;return[o.length>0?o.join(\" \"):void 0,T(()=>function(t){let s=v(i=>(e(p=>[...p,i]),()=>e(p=>{let u=p.slice(),d=u.indexOf(i);return d!==-1&&u.splice(d,1),u}))),m=T(()=>({register:s,slot:t.slot,name:t.name,props:t.props,value:t.value}),[s,t.slot,t.name,t.props,t.value]);return R.createElement(c.Provider,{value:m},t.children)},[e])]}let N=\"label\";function G(r,l){var y;let a=_(),e=P(),o=S(),g=F(),{id:t=`headlessui-label-${a}`,htmlFor:s=o!=null?o:(y=e.props)==null?void 0:y.htmlFor,passive:m=!1,...i}=r,p=B(l);A(()=>e.register(t),[t,e.register]);let u=v(L=>{let b=L.currentTarget;if(b instanceof HTMLLabelElement&&L.preventDefault(),e.props&&\"onClick\"in e.props&&typeof e.props.onClick==\"function\"&&e.props.onClick(L),b instanceof HTMLLabelElement){let n=document.getElementById(b.htmlFor);if(n){let E=n.getAttribute(\"disabled\");if(E===\"true\"||E===\"\")return;let x=n.getAttribute(\"aria-disabled\");if(x===\"true\"||x===\"\")return;(n instanceof HTMLInputElement&&(n.type===\"radio\"||n.type===\"checkbox\")||n.role===\"radio\"||n.role===\"checkbox\"||n.role===\"switch\")&&n.click(),n.focus({preventScroll:!0})}}}),d=g||!1,C=T(()=>({...e.slot,disabled:d}),[e.slot,d]),f={ref:p,...e.props,id:t,htmlFor:s,onClick:u};return m&&(\"onClick\"in f&&(delete f.htmlFor,delete f.onClick),\"onClick\"in i&&delete i.onClick),H()({ourProps:f,theirProps:i,slot:C,defaultTag:s?N:\"div\",name:e.name||\"Label\"})}let U=M(G),Q=Object.assign(U,{});export{Q as Label,P as useLabelContext,I as useLabelledBy,K as useLabels};\n","\"use client\";import{useFocusRing as pe}from\"@react-aria/focus\";import{useHover as me}from\"@react-aria/interactions\";import x,{Fragment as z,createContext as de,useCallback as ce,useContext as fe,useEffect as Te,useMemo as H,useReducer as ye,useRef as Y,useState as Ie}from\"react\";import{flushSync as L}from\"react-dom\";import{useActivePress as ge}from'../../hooks/use-active-press.js';import{useDidElementMove as Ee}from'../../hooks/use-did-element-move.js';import{useDisposables as Me}from'../../hooks/use-disposables.js';import{useElementSize as Se}from'../../hooks/use-element-size.js';import{useEvent as E}from'../../hooks/use-event.js';import{useId as U}from'../../hooks/use-id.js';import{useInertOthers as Ae}from'../../hooks/use-inert-others.js';import{useIsoMorphicEffect as B}from'../../hooks/use-iso-morphic-effect.js';import{useOnDisappear as be}from'../../hooks/use-on-disappear.js';import{useOutsideClick as Pe}from'../../hooks/use-outside-click.js';import{useOwnerDocument as ve}from'../../hooks/use-owner.js';import{useResolveButtonType as xe}from'../../hooks/use-resolve-button-type.js';import{useScrollLock as Re}from'../../hooks/use-scroll-lock.js';import{useSyncRefs as N}from'../../hooks/use-sync-refs.js';import{useTextValue as _e}from'../../hooks/use-text-value.js';import{useTrackedPointer as De}from'../../hooks/use-tracked-pointer.js';import{transitionDataAttributes as he,useTransition as Ce}from'../../hooks/use-transition.js';import{useTreeWalker as Fe}from'../../hooks/use-tree-walker.js';import{FloatingProvider as Le,useFloatingPanel as Oe,useFloatingPanelProps as Ge,useFloatingReference as He,useFloatingReferenceProps as Ue,useResolvedAnchor as Be}from'../../internal/floating.js';import{OpenClosedProvider as Ne,State as k,useOpenClosed as ke}from'../../internal/open-closed.js';import{isDisabledReactIssue7711 as we}from'../../utils/bugs.js';import{Focus as g,calculateActiveIndex as W}from'../../utils/calculate-active-index.js';import{disposables as Ke}from'../../utils/disposables.js';import{Focus as Z,FocusableMode as We,focusFrom as je,isFocusableElement as Qe,restoreFocusIfNecessary as ee,sortByDomNode as Je}from'../../utils/focus-management.js';import{match as te}from'../../utils/match.js';import{RenderFeatures as ne,forwardRefWithAs as R,mergeProps as re,useRender as _}from'../../utils/render.js';import{useDescriptions as Ve}from'../description/description.js';import{Keys as y}from'../keyboard.js';import{useLabelContext as Xe,useLabels as oe}from'../label/label.js';import{Portal as $e}from'../portal/portal.js';var qe=(r=>(r[r.Open=0]=\"Open\",r[r.Closed=1]=\"Closed\",r))(qe||{}),ze=(r=>(r[r.Pointer=0]=\"Pointer\",r[r.Other=1]=\"Other\",r))(ze||{}),Ye=(a=>(a[a.OpenMenu=0]=\"OpenMenu\",a[a.CloseMenu=1]=\"CloseMenu\",a[a.GoToItem=2]=\"GoToItem\",a[a.Search=3]=\"Search\",a[a.ClearSearch=4]=\"ClearSearch\",a[a.RegisterItem=5]=\"RegisterItem\",a[a.UnregisterItem=6]=\"UnregisterItem\",a[a.SetButtonElement=7]=\"SetButtonElement\",a[a.SetItemsElement=8]=\"SetItemsElement\",a))(Ye||{});function j(e,n=r=>r){let r=e.activeItemIndex!==null?e.items[e.activeItemIndex]:null,l=Je(n(e.items.slice()),u=>u.dataRef.current.domRef.current),o=r?l.indexOf(r):null;return o===-1&&(o=null),{items:l,activeItemIndex:o}}let Ze={[1](e){return e.menuState===1?e:{...e,activeItemIndex:null,menuState:1}},[0](e){return e.menuState===0?e:{...e,__demoMode:!1,menuState:0}},[2]:(e,n)=>{var u,p,s,m,a;if(e.menuState===1)return e;let r={...e,searchQuery:\"\",activationTrigger:(u=n.trigger)!=null?u:1,__demoMode:!1};if(n.focus===g.Nothing)return{...r,activeItemIndex:null};if(n.focus===g.Specific)return{...r,activeItemIndex:e.items.findIndex(t=>t.id===n.id)};if(n.focus===g.Previous){let t=e.activeItemIndex;if(t!==null){let d=e.items[t].dataRef.current.domRef,f=W(n,{resolveItems:()=>e.items,resolveActiveIndex:()=>e.activeItemIndex,resolveId:c=>c.id,resolveDisabled:c=>c.dataRef.current.disabled});if(f!==null){let c=e.items[f].dataRef.current.domRef;if(((p=d.current)==null?void 0:p.previousElementSibling)===c.current||((s=c.current)==null?void 0:s.previousElementSibling)===null)return{...r,activeItemIndex:f}}}}else if(n.focus===g.Next){let t=e.activeItemIndex;if(t!==null){let d=e.items[t].dataRef.current.domRef,f=W(n,{resolveItems:()=>e.items,resolveActiveIndex:()=>e.activeItemIndex,resolveId:c=>c.id,resolveDisabled:c=>c.dataRef.current.disabled});if(f!==null){let c=e.items[f].dataRef.current.domRef;if(((m=d.current)==null?void 0:m.nextElementSibling)===c.current||((a=c.current)==null?void 0:a.nextElementSibling)===null)return{...r,activeItemIndex:f}}}}let l=j(e),o=W(n,{resolveItems:()=>l.items,resolveActiveIndex:()=>l.activeItemIndex,resolveId:t=>t.id,resolveDisabled:t=>t.dataRef.current.disabled});return{...r,...l,activeItemIndex:o}},[3]:(e,n)=>{let l=e.searchQuery!==\"\"?0:1,o=e.searchQuery+n.value.toLowerCase(),p=(e.activeItemIndex!==null?e.items.slice(e.activeItemIndex+l).concat(e.items.slice(0,e.activeItemIndex+l)):e.items).find(m=>{var a;return((a=m.dataRef.current.textValue)==null?void 0:a.startsWith(o))&&!m.dataRef.current.disabled}),s=p?e.items.indexOf(p):-1;return s===-1||s===e.activeItemIndex?{...e,searchQuery:o}:{...e,searchQuery:o,activeItemIndex:s,activationTrigger:1}},[4](e){return e.searchQuery===\"\"?e:{...e,searchQuery:\"\",searchActiveItemIndex:null}},[5]:(e,n)=>{let r=j(e,l=>[...l,{id:n.id,dataRef:n.dataRef}]);return{...e,...r}},[6]:(e,n)=>{let r=j(e,l=>{let o=l.findIndex(u=>u.id===n.id);return o!==-1&&l.splice(o,1),l});return{...e,...r,activationTrigger:1}},[7]:(e,n)=>e.buttonElement===n.element?e:{...e,buttonElement:n.element},[8]:(e,n)=>e.itemsElement===n.element?e:{...e,itemsElement:n.element}},Q=de(null);Q.displayName=\"MenuContext\";function w(e){let n=fe(Q);if(n===null){let r=new Error(`<${e} /> is missing a parent <Menu /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(r,w),r}return n}function et(e,n){return te(n.type,Ze,e,n)}let tt=z;function nt(e,n){let{__demoMode:r=!1,...l}=e,o=ye(et,{__demoMode:r,menuState:r?0:1,buttonElement:null,itemsElement:null,items:[],searchQuery:\"\",activeItemIndex:null,activationTrigger:1}),[{menuState:u,itemsElement:p,buttonElement:s},m]=o,a=N(n);Pe(u===0,[s,p],(b,S)=>{m({type:1}),Qe(S,We.Loose)||(b.preventDefault(),s==null||s.focus())});let d=E(()=>{m({type:1})}),f=H(()=>({open:u===0,close:d}),[u,d]),c={ref:a},A=_();return x.createElement(Le,null,x.createElement(Q.Provider,{value:o},x.createElement(Ne,{value:te(u,{[0]:k.Open,[1]:k.Closed})},A({ourProps:c,theirProps:l,slot:f,defaultTag:tt,name:\"Menu\"}))))}let rt=\"button\";function ot(e,n){var h;let r=U(),{id:l=`headlessui-menu-button-${r}`,disabled:o=!1,autoFocus:u=!1,...p}=e,[s,m]=w(\"Menu.Button\"),a=Ue(),t=N(n,He(),E(T=>m({type:7,element:T}))),d=E(T=>{switch(T.key){case y.Space:case y.Enter:case y.ArrowDown:T.preventDefault(),T.stopPropagation(),L(()=>m({type:0})),m({type:2,focus:g.First});break;case y.ArrowUp:T.preventDefault(),T.stopPropagation(),L(()=>m({type:0})),m({type:2,focus:g.Last});break}}),f=E(T=>{switch(T.key){case y.Space:T.preventDefault();break}}),c=E(T=>{var F;if(we(T.currentTarget))return T.preventDefault();o||(s.menuState===0?(L(()=>m({type:1})),(F=s.buttonElement)==null||F.focus({preventScroll:!0})):(T.preventDefault(),m({type:0})))}),{isFocusVisible:A,focusProps:b}=pe({autoFocus:u}),{isHovered:S,hoverProps:D}=me({isDisabled:o}),{pressed:M,pressProps:P}=ge({disabled:o}),v=H(()=>({open:s.menuState===0,active:M||s.menuState===0,disabled:o,hover:S,focus:A,autofocus:u}),[s,S,A,M,o,u]),C=re(a(),{ref:t,id:l,type:xe(e,s.buttonElement),\"aria-haspopup\":\"menu\",\"aria-controls\":(h=s.itemsElement)==null?void 0:h.id,\"aria-expanded\":s.menuState===0,disabled:o||void 0,autoFocus:u,onKeyDown:d,onKeyUp:f,onClick:c},b,D,P);return _()({ourProps:C,theirProps:p,slot:v,defaultTag:rt,name:\"Menu.Button\"})}let at=\"div\",lt=ne.RenderStrategy|ne.Static;function it(e,n){var J,V;let r=U(),{id:l=`headlessui-menu-items-${r}`,anchor:o,portal:u=!1,modal:p=!0,transition:s=!1,...m}=e,a=Be(o),[t,d]=w(\"Menu.Items\"),[f,c]=Oe(a),A=Ge(),[b,S]=Ie(null),D=N(n,a?f:null,E(i=>d({type:8,element:i})),S),M=ve(t.itemsElement);a&&(u=!0);let P=ke(),[v,C]=Ce(s,b,P!==null?(P&k.Open)===k.Open:t.menuState===0);be(v,t.buttonElement,()=>{d({type:1})});let O=t.__demoMode?!1:p&&t.menuState===0;Re(O,M);let h=t.__demoMode?!1:p&&t.menuState===0;Ae(h,{allowed:ce(()=>[t.buttonElement,t.itemsElement],[t.buttonElement,t.itemsElement])});let T=t.menuState!==0,K=Ee(T,t.buttonElement)?!1:v;Te(()=>{let i=t.itemsElement;i&&t.menuState===0&&i!==(M==null?void 0:M.activeElement)&&i.focus({preventScroll:!0})},[t.menuState,t.itemsElement,M]),Fe(t.menuState===0,{container:t.itemsElement,accept(i){return i.getAttribute(\"role\")===\"menuitem\"?NodeFilter.FILTER_REJECT:i.hasAttribute(\"role\")?NodeFilter.FILTER_SKIP:NodeFilter.FILTER_ACCEPT},walk(i){i.setAttribute(\"role\",\"none\")}});let I=Me(),G=E(i=>{var X,$,q;switch(I.dispose(),i.key){case y.Space:if(t.searchQuery!==\"\")return i.preventDefault(),i.stopPropagation(),d({type:3,value:i.key});case y.Enter:if(i.preventDefault(),i.stopPropagation(),d({type:1}),t.activeItemIndex!==null){let{dataRef:ue}=t.items[t.activeItemIndex];($=(X=ue.current)==null?void 0:X.domRef.current)==null||$.click()}ee(t.buttonElement);break;case y.ArrowDown:return i.preventDefault(),i.stopPropagation(),d({type:2,focus:g.Next});case y.ArrowUp:return i.preventDefault(),i.stopPropagation(),d({type:2,focus:g.Previous});case y.Home:case y.PageUp:return i.preventDefault(),i.stopPropagation(),d({type:2,focus:g.First});case y.End:case y.PageDown:return i.preventDefault(),i.stopPropagation(),d({type:2,focus:g.Last});case y.Escape:i.preventDefault(),i.stopPropagation(),L(()=>d({type:1})),(q=t.buttonElement)==null||q.focus({preventScroll:!0});break;case y.Tab:i.preventDefault(),i.stopPropagation(),L(()=>d({type:1})),je(t.buttonElement,i.shiftKey?Z.Previous:Z.Next);break;default:i.key.length===1&&(d({type:3,value:i.key}),I.setTimeout(()=>d({type:4}),350));break}}),ae=E(i=>{switch(i.key){case y.Space:i.preventDefault();break}}),le=H(()=>({open:t.menuState===0}),[t.menuState]),ie=re(a?A():{},{\"aria-activedescendant\":t.activeItemIndex===null||(J=t.items[t.activeItemIndex])==null?void 0:J.id,\"aria-labelledby\":(V=t.buttonElement)==null?void 0:V.id,id:l,onKeyDown:G,onKeyUp:ae,role:\"menu\",tabIndex:t.menuState===0?0:void 0,ref:D,style:{...m.style,...c,\"--button-width\":Se(t.buttonElement,!0).width},...he(C)}),se=_();return x.createElement($e,{enabled:u?e.static||v:!1},se({ourProps:ie,theirProps:m,slot:le,defaultTag:at,features:lt,visible:K,name:\"Menu.Items\"}))}let st=z;function ut(e,n){let r=U(),{id:l=`headlessui-menu-item-${r}`,disabled:o=!1,...u}=e,[p,s]=w(\"Menu.Item\"),m=p.activeItemIndex!==null?p.items[p.activeItemIndex].id===l:!1,a=Y(null),t=N(n,a);B(()=>{if(!p.__demoMode&&p.menuState===0&&m&&p.activationTrigger!==0)return Ke().requestAnimationFrame(()=>{var I,G;(G=(I=a.current)==null?void 0:I.scrollIntoView)==null||G.call(I,{block:\"nearest\"})})},[p.__demoMode,a,m,p.menuState,p.activationTrigger,p.activeItemIndex]);let d=_e(a),f=Y({disabled:o,domRef:a,get textValue(){return d()}});B(()=>{f.current.disabled=o},[f,o]),B(()=>(s({type:5,id:l,dataRef:f}),()=>s({type:6,id:l})),[f,l]);let c=E(()=>{s({type:1})}),A=E(I=>{if(o)return I.preventDefault();s({type:1}),ee(p.buttonElement)}),b=E(()=>{if(o)return s({type:2,focus:g.Nothing});s({type:2,focus:g.Specific,id:l})}),S=De(),D=E(I=>{S.update(I),!o&&(m||s({type:2,focus:g.Specific,id:l,trigger:0}))}),M=E(I=>{S.wasMoved(I)&&(o||m||s({type:2,focus:g.Specific,id:l,trigger:0}))}),P=E(I=>{S.wasMoved(I)&&(o||m&&s({type:2,focus:g.Nothing}))}),[v,C]=oe(),[O,h]=Ve(),T=H(()=>({active:m,focus:m,disabled:o,close:c}),[m,o,c]),F={id:l,ref:t,role:\"menuitem\",tabIndex:o===!0?void 0:-1,\"aria-disabled\":o===!0?!0:void 0,\"aria-labelledby\":v,\"aria-describedby\":O,disabled:void 0,onClick:A,onFocus:b,onPointerEnter:D,onMouseEnter:D,onPointerMove:M,onMouseMove:M,onPointerLeave:P,onMouseLeave:P},K=_();return x.createElement(C,null,x.createElement(h,null,K({ourProps:F,theirProps:u,slot:T,defaultTag:st,name:\"Menu.Item\"})))}let pt=\"div\";function mt(e,n){let[r,l]=oe(),o=e,u={ref:n,\"aria-labelledby\":r,role:\"group\"},p=_();return x.createElement(l,null,p({ourProps:u,theirProps:o,slot:{},defaultTag:pt,name:\"Menu.Section\"}))}let dt=\"header\";function ct(e,n){let r=U(),{id:l=`headlessui-menu-heading-${r}`,...o}=e,u=Xe();B(()=>u.register(l),[l,u.register]);let p={id:l,ref:n,role:\"presentation\",...u.props};return _()({ourProps:p,theirProps:o,slot:{},defaultTag:dt,name:\"Menu.Heading\"})}let ft=\"div\";function Tt(e,n){let r=e,l={ref:n,role:\"separator\"};return _()({ourProps:l,theirProps:r,slot:{},defaultTag:ft,name:\"Menu.Separator\"})}let yt=R(nt),It=R(ot),gt=R(it),Et=R(ut),Mt=R(mt),St=R(ct),At=R(Tt),rn=Object.assign(yt,{Button:It,Items:gt,Item:Et,Section:Mt,Heading:St,Separator:At});export{rn as Menu,It as MenuButton,St as MenuHeading,Et as MenuItem,gt as MenuItems,Mt as MenuSection,At as MenuSeparator};\n","import{useRef as i}from\"react\";import{useIsoMorphicEffect as u}from'./use-iso-morphic-effect.js';function s(n,t){let e=i({left:0,top:0});if(u(()=>{if(!t)return;let r=t.getBoundingClientRect();r&&(e.current=r)},[n,t]),t==null||!n||t===document.activeElement)return!1;let o=t.getBoundingClientRect();return o.top!==e.current.top||o.left!==e.current.left}export{s as useDidElementMove};\n","import{useEffect as T,useRef as E}from\"react\";import{getOwnerDocument as d}from'../utils/owner.js';import{useIsoMorphicEffect as N}from'./use-iso-morphic-effect.js';function F(c,{container:e,accept:t,walk:r}){let o=E(t),l=E(r);T(()=>{o.current=t,l.current=r},[t,r]),N(()=>{if(!e||!c)return;let n=d(e);if(!n)return;let f=o.current,p=l.current,i=Object.assign(m=>f(m),{acceptNode:f}),u=n.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,i,!1);for(;u.nextNode();)p(u.currentNode)},[e,c,o,l])}export{F as useTreeWalker};\n"],"names":["computeCoordsFromPlacement","_ref","placement","rtl","reference","floating","sideAxis","getSideAxis","alignmentAxis","getAlignmentAxis","alignLength","getAxisLength","side","getSide","isVertical","commonX","x","width","commonY","y","height","commonAlign","coords","getAlignment","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","padding","evaluate","paddingObject","getPaddingObject","element","clippingClientRect","rectToClientRect","getClippingRect","isElement","contextElement","getDocumentElement","rect","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","top","bottom","left","right","getCssDimensions","css","getComputedStyle","parseFloat","hasOffset","isHTMLElement","offsetWidth","offsetHeight","shouldFallback","round","$","unwrapElement","domElement","createCoords","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","win","getWindow","isWebKit","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","getFrameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getNodeScroll","scrollLeft","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","body","ownerDocument","max","scrollWidth","scrollHeight","scrollTop","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","getParentNode","isLastTraversableNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","documentElement","offsets","getNodeName","isOverflowElement","offsetRect","htmlX","htmlY","htmlRect","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","isTopLayer","svgOffsetParent","isTableElement","isContainingBlock","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","result","getOverflowAncestors","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","includes","ancestor","set","getClippingElementAncestors","this","_c","concat","firstClippingAncestor","clippingRect","reduce","accRect","min","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","floor","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","e","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","detectOverflow$1","offset","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","alignment","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","shift","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","overflow","getOppositeAxis","mainAxisCoord","crossAxisCoord","maxSide","clamp","limitedCoords","enabled","flip","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","getOppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","push","getOppositeAxisPlacements","placements","overflows","overflowsData","sides","getAlignmentSides","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","index","nextPlacement","reset","resetPlacement","d","sort","a","b","_overflowsData$filter2","currentSideAxis","map","acc","size","_state$middlewareData","_state$middlewareData2","apply","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","computePosition","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","i","length","nextX","nextY","computePosition$1","hasWindow","window","node","isNode","nodeName","toLowerCase","_node$ownerDocument","defaultView","document","value","Node","Element","HTMLElement","isShadowRoot","ShadowRoot","overflowX","overflowY","display","test","some","selector","matches","elementOrCss","webkit","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","scrollX","scrollY","assignedSlot","host","getNearestOverflowAncestor","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","frameElement","parent","Object","getPrototypeOf","Math","v","oppositeSideMap","oppositeAlignmentMap","start","end","param","split","axis","mainAlignmentSide","oppositePlacement","getOppositeAlignmentPlacement","replace","isStart","lr","rl","tb","bt","getSideList","expandPaddingObject","t","arguments","undefined","r","u","h","o","f","s","n","innerText","cloneNode","querySelectorAll","remove","l","c","current","getAttribute","trim","getElementById","join","screenX","screenY","wasMoved","getUserAgent","uaData","navigator","userAgentData","isArray","brands","brand","version","userAgent","useLayoutEffect","useEffect","deepEqual","toString","keys","hasOwnProperty","call","key","$$typeof","getDPR","devicePixelRatio","roundByDPR","dpr","useLatestRef","ref","React","deps","offset$1","flip$1","size$1","SafeReact","useSafeInsertionEffect","useInsertionEffect","useEffectEvent","callback","process","_len","args","_key","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","horizontalKeys","verticalKeys","serverHandoffComplete","count","genId","random","slice","useId","id","setId","createPubSub","emit","event","_map$get","handler","on","listener","off","_map$get2","FloatingNodeContext","FloatingTreeContext","useFloatingParentNodeId","_React$useContext","useFloatingTree","FOCUSABLE_ATTRIBUTE","useFloating","nodeId","internalRootContext","open","onOpenChange","onOpenChangeProp","elementsProp","floatingId","dataRef","events","nested","positionReference","setPositionReference","reason","openEvent","refs","domReference","useFloatingRootContext","rootContext","computedElements","_domReference","setDomReference","_setPositionReference","domReferenceRef","tree","externalReference","externalFloating","whileElementsMounted","setData","isPositioned","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","referenceRef","setFloating","floatingRef","floatingEl","hasWhileElementsMounted","whileElementsMountedRef","platformRef","openRef","then","fullData","isMountedRef","ReactDOM","floatingStyles","initialStyles","useFloating$1","computedPositionReference","context","floatingContext","nodesRef","find","ACTIVE_KEY","SELECTED_KEY","mergeProps","userProps","propsList","elementKey","isItem","domUserProps","_","__","validProps","tabIndex","propsOrGetProps","props","indexOf","has","val","getArgsWithCustomFloatingHeight","styles","getReferenceProps","getFloatingProps","slot","displayName","H","Me","children","A","ue","C","MutationObserver","maxHeight","isNaN","parseInt","style","ceil","attributes","attributeFilter","pe","to","F","gap","E","inner","P","V","ce","p","w","g","oe","ne","shift$1","ee","overflowRef","minItemsVisible","referenceOverflowThreshold","onFallbackChange","O","W","T","scrollPaddingBottom","childElementCount","L","N","m","childNodes","k","S","U","listRef","innerOffset","scrollRef","item","scrollEl","floatingIsBordered","scrollElIsBordered","floatingIsScrollEl","nextArgs","refOverflow","diffY","re","_ref2","assign","maxWidth","Z","I","B","G","M","anchor","K","onChange","unstable_onChange","controlledScrollingRef","prevScrollTopRef","initialOverflowRef","onWheel","ctrlKey","dY","deltaY","isAtTop","isAtBottom","remainingScroll","sign","method","preventDefault","onKeyDown","onPointerMove","onScroll","scrollDiff","ie","Q","X","referenceDeps","floatingDeps","itemDeps","getItemProps","se","Y","z","j","Provider","fe","J","D","getPropertyValue","nextFrame","dispose","exec","createElement","appendChild","setProperty","marginTop","removeChild","First","Previous","Next","Last","Specific","Nothing","resolveItems","resolveActiveIndex","focus","resolveDisabled","resolveId","Error","captureStackTrace","inherit","splice","register","R","htmlFor","currentTarget","HTMLLabelElement","onClick","HTMLInputElement","type","role","click","preventScroll","disabled","ourProps","theirProps","defaultTag","qe","Open","Closed","ze","Pointer","Other","Ye","OpenMenu","CloseMenu","GoToItem","Search","ClearSearch","RegisterItem","UnregisterItem","SetButtonElement","SetItemsElement","activeItemIndex","items","Je","domRef","Ze","menuState","__demoMode","searchQuery","activationTrigger","trigger","findIndex","previousElementSibling","nextElementSibling","textValue","startsWith","searchActiveItemIndex","buttonElement","itemsElement","de","et","te","tt","lt","RenderStrategy","Static","st","yt","ye","Pe","Qe","We","Loose","close","Le","Ne","It","autoFocus","Space","Enter","ArrowDown","stopPropagation","ArrowUp","we","isFocusVisible","focusProps","isHovered","hoverProps","me","isDisabled","pressed","pressProps","ge","active","hover","autofocus","xe","onKeyUp","gt","portal","modal","transition","Be","JSON","stringify","outerHTML","Oe","ae","Ge","Ie","ve","ke","Ce","be","Re","Ae","allowed","activeElement","Ee","Te","container","accept","walk","acceptNode","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","Fe","FILTER_REJECT","hasAttribute","FILTER_SKIP","FILTER_ACCEPT","setAttribute","q","Home","PageUp","End","PageDown","Escape","Tab","je","shiftKey","le","Se","he","$e","static","features","visible","Et","Ke","scrollIntoView","block","_e","De","Ve","onFocus","onPointerEnter","onMouseEnter","onMouseMove","onPointerLeave","onMouseLeave","Mt","St","Xe","At","rn","Button","Items","Item","Section","Heading","Separator"],"sourceRoot":""}