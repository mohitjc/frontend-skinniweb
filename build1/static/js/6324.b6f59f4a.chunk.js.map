{"version":3,"file":"static/js/6324.b6f59f4a.chunk.js","mappings":"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","sources":["Pages/Timely/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ApiClient from \"../../methods/api/apiClient\";\r\nimport \"./style.scss\";\r\nimport loader from \"../../methods/loader\";\r\nimport Html from \"./html\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Timely = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const refreshToken=user.connectionsDetails?.find(itm=>itm.type=='timely'&&itm.connected)?.refreshToken\r\n  const [filters, setFilter] = useState({ page: 1, count: 10, search: \"\" });\r\n  const [data, setData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [loaging, setLoader] = useState(false);\r\n  const [me, setMe] = useState();\r\n  const [eventTypes, setEventTypes] = useState([]);\r\n  const [projectData, setProjectData] = useState([])\r\n\r\n  const sortClass = (key) => {\r\n    let cls = \"fa-sort\";\r\n    if (filters.key == key && filters.sorder == \"asc\") cls = \"fa-sort-up\";\r\n    else if (filters.key == key && filters.sorder == \"desc\")\r\n      cls = \"fa-sort-down\";\r\n    return \"fa \" + cls;\r\n  };\r\n \r\n\r\n  const sorting = (key) => {\r\n    let sorder = \"asc\";\r\n    if (filters.key == key) {\r\n      if (filters.sorder == \"asc\") {\r\n        sorder = \"desc\";\r\n      } else {\r\n        sorder = \"asc\";\r\n      }\r\n    }\r\n\r\n    let sortBy = `${key} ${sorder}`;\r\n    setFilter({ ...filters, sortBy, key, sorder });\r\n    getData({ sortBy, key, sorder });\r\n  };\r\n  const getProjectData = (p = {}) => {\r\n    loader(true);\r\n    \r\n    let filter = { \r\n      account_id:me?.id, \r\n    };\r\n    if(filter.eventType) filter.event_type=filter.eventType\r\n    if(filter.sortBy) filter.sort=filter.sortBy.replace(' ',':')\r\n      if(filter.startDate){\r\n        filter.min_start_time=new Date(filter.startDate).toUTCString()\r\n        filter.max_start_time=new Date(filter.endDate).toUTCString()\r\n      }\r\n      let url='timely/getprojects'\r\n       ApiClient.get(url, filter).then((res) => {\r\n      if (res) {\r\n        const projectTotal = res?.data?.map((itm) => itm?.length)\r\n        setProjectData(res.data)\r\n      setTotal(projectTotal)\r\n        \r\n    }\r\n    loader(false);\r\n  })\r\n   \r\n  };\r\n\r\n  const getData = (p = {}) => {\r\n    let filter = { \r\n      account_id:me?.id,\r\n    };\r\n    if(filter.eventType) filter.event_type=filter.eventType\r\n    if(filter.sortBy) filter.sort=filter.sortBy.replace(' ',':')\r\n      if(filter.startDate){\r\n        filter.min_start_time=new Date(filter.startDate).toUTCString()\r\n        filter.max_start_time=new Date(filter.endDate).toUTCString()\r\n      }\r\n      loader(true);\r\n      let url='timely/getevents'\r\n    ApiClient.get(url, filter).then((res) => {\r\n      if (res?.success) {\r\n        setData(res.data)\r\n        getProjectData()\r\n\r\n    }\r\n    loader(false);\r\n  })\r\n   \r\n  };\r\n \r\n\r\n  const clear = () => {\r\n    let f = {\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      platform: \"\",\r\n      search: \"\",\r\n      status: \"\",\r\n      eventType:'',\r\n      page: 1,\r\n      role: \"\",\r\n    };\r\n    setFilter({ ...filters, ...f });\r\n    getData({ ...f });\r\n  };\r\n\r\n  const filter = (p = {}) => {\r\n    let f = {\r\n      page: 1,\r\n      ...p,\r\n    };\r\n    setFilter({ ...filters, ...f });\r\n    getData({ ...f });\r\n  };\r\n\r\n\r\n  const pageChange = (e) => {\r\n    setFilter({ ...filters, page: e });\r\n    getData({ page: e });\r\n  };\r\n  const count = (e) => {\r\n    setFilter({ ...filters, count: e });\r\n    getData({ ...filters, count: e });\r\n  };\r\n\r\n  const isAllow = (key = \"\") => {\r\n    let permissions = user?.permissions;\r\n    let value = permissions?.[key];\r\n    // if(user.role=='admin') value=true\r\n    return value;\r\n  };\r\n\r\n  const getAuth=()=>{\r\n    loader(true)\r\n    ApiClient.get('timely/account/list').then(res=>{\r\n      loader(false)\r\n      if(res.success){\r\n        let data=res?.data?.[0]\r\n        setMe(data)\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (refreshToken) {\r\n      getAuth()\r\n    }\r\n  }, [refreshToken]);\r\n\r\n\r\n  const getEventTypes=()=>{\r\n    setLoader(true)\r\n    ApiClient.get('timely/activities',{\r\n      account_id:me?.id,\r\n    }).then(res=>{\r\n      if(res.success){\r\n        let data=res.data.map(itm=>{\r\n          return {\r\n            ...itm,\r\n            name:itm.entity.name\r\n          }\r\n        })\r\n        setEventTypes(data)\r\n         getData()\r\n\r\n      }\r\n      setLoader(false)\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(me){\r\n      getEventTypes()\r\n    }\r\n  },[me])\r\n\r\n  return (\r\n    <>\r\n      <Html\r\n      eventTypes={eventTypes}\r\n      me={me}\r\n        clear={clear}\r\n        sortClass={sortClass}\r\n        sorting={sorting}\r\n        isAllow={isAllow}\r\n        count={count}\r\n        pageChange={pageChange}\r\n        filters={filters}\r\n        setFilter={setFilter}\r\n        filter={filter}\r\n        loaging={loaging}\r\n        data={data}\r\n        total={total}\r\n        projectData={projectData}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timely;\r\n"],"names":["Timely","_user$connectionsDeta","_user$connectionsDeta2","user","useSelector","state","refreshToken","connectionsDetails","find","itm","type","connected","filters","setFilter","useState","page","count","search","data","setData","total","setTotal","loaging","setLoader","me","setMe","eventTypes","setEventTypes","projectData","setProjectData","getData","filter","account_id","id","eventType","event_type","sortBy","sort","replace","startDate","min_start_time","Date","toUTCString","max_start_time","endDate","loader","ApiClient","get","then","res","success","_res$data","projectTotal","map","length","getProjectData","useEffect","_res$data2","name","entity","_jsx","_Fragment","children","Html","clear","f","platform","status","role","sortClass","key","cls","sorder","sorting","isAllow","arguments","undefined","permissions","e","pageChange"],"sourceRoot":""}