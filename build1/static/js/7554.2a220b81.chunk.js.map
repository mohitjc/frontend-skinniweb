{"version":3,"file":"static/js/7554.2a220b81.chunk.js","mappings":"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","sources":["Pages/Billing/index.js","models/crptoUtils.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ApiClient from \"../../methods/api/apiClient\";\nimport \"./style.scss\";\nimport Html from \"./html\";\nimport { useNavigate } from \"react-router-dom\";\nimport shared from \"./shared\";\nimport { useSelector } from \"react-redux\";\nimport { encryptUrlData } from \"../../models/crptoUtils\";\nconst Billing = () => {\n  const user = useSelector((state) => state.user);\n  const searchState = { data: \"\" };\n  const [filters, setFilter] = useState({ page: 1, count: 10, search: \"\" });\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loaging, setLoader] = useState(true);\n  const history = useNavigate();\n\n  const sortClass = (key) => {\n    let cls = \"fa-sort\";\n    if (filters.key == key && filters.sorder == \"asc\") cls = \"fa-sort-up\";\n    else if (filters.key == key && filters.sorder == \"desc\")\n      cls = \"fa-sort-down\";\n    return \"fa \" + cls;\n  };\n\n  const sorting = (key) => {\n    let sorder = \"asc\";\n    if (filters.key == key) {\n      if (filters.sorder == \"asc\") {\n        sorder = \"desc\";\n      } else {\n        sorder = \"asc\";\n      }\n    }\n\n    let sortBy = `${key} ${sorder}`;\n    setFilter({ ...filters, sortBy, key, sorder });\n    getData({ sortBy, key, sorder });\n  };\n\n  const getData = (p = {}) => {\n    setLoader(true);\n    let filter = { userId: user.id, ...filters, ...p };\n    ApiClient.get(shared.listApi, filter).then((res) => {\n      if (res.success) {\n        setData(\n          res.data.map((itm) => {\n            return itm;\n          })\n        );\n        setTotal(res.total);\n      }\n      setLoader(false);\n    });\n  };\n\n  const clear = () => {\n    let f = {\n      type: \"\",\n      search: \"\",\n      status: \"\",\n      page: 1,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const filter = (p = {}) => {\n    let f = {\n      page: 1,\n      ...p,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const pageChange = (e) => {\n    setFilter({ ...filters, page: e });\n    getData({ page: e });\n  };\n  const count = (e) => {\n    setFilter({ ...filters, count: e });\n    getData({ ...filters, count: e });\n  };\n  const changestatus = (e) => {\n    setFilter({ ...filters, status: e, page: 1 });\n    getData({ status: e, page: 1 });\n  };\n\n  const getRolesData = (id) => {\n    setFilter({ ...filters, role: id, page: 1 });\n    getData({ role: id, page: 1 });\n  };\n\n  const view = (id) => {\n    const selectedItem = encryptUrlData(id)\n    let url = `/${shared.url}/${selectedItem}`;\n    history(url);\n  };\n\n  const isAllow = (key = \"\") => {\n    let permissions = user?.permissions;\n    let value = permissions?.[key];\n    if (user.subRoleDetails?.id) value = true;\n    return value;\n  };\n\n  useEffect(() => {\n    if (user && user.loggedIn) {\n      setFilter({ ...filters, search: searchState.data });\n      getData({ search: searchState.data, page: 1 });\n    }\n  }, []);\n\n  return (\n    <>\n      <Html\n        view={view}\n        clear={clear}\n        sortClass={sortClass}\n        sorting={sorting}\n        isAllow={isAllow}\n        count={count}\n        pageChange={pageChange}\n        filters={filters}\n        setFilter={setFilter}\n        filter={filter}\n        loaging={loaging}\n        data={data}\n        total={total}\n        changestatus={changestatus}\n        getRolesData={getRolesData}\n      />\n    </>\n  );\n};\n\nexport default Billing;\n","import CryptoJS from 'crypto-js';\n\nconst secretKey = process.env.REACT_APP_CRYPTO_SECRET_KEY || 'defaultSecretKey';\n\nexport const encryptData = (data) => {\n  let stringifiedData;\n\n  if (typeof data === 'object') {\n    stringifiedData = JSON.stringify(data);\n  } else {\n    stringifiedData = data.toString();\n\n  return CryptoJS.AES.encrypt(stringifiedData, secretKey).toString();\n};\n\n}\n\nexport const encryptUrlData2 = (data) => {\n  let value=data\n  if(value) value=value.replaceAll('slAshD','/')\n    if(value) value=value.replaceAll(' ','+')\n  return value\n}\n\nexport const decryptData = (p) => {\n  let encryptedData=p\n  if(p) encryptedData=p.replaceAll(' ','+')\n  try {\n    const decryptedBytes = CryptoJS.AES.decrypt(encryptedData, secretKey);\n    const decryptedString = decryptedBytes.toString(CryptoJS.enc.Utf8);\n    if (!decryptedString) {\n      console.error(\"Decryption failed. The data may be invalid.\");\n      return null;\n    }\n    try {\n      const parsedData = JSON.parse(decryptedString);\n      return parsedData;\n    } catch (error) {\n      if (!isNaN(Number(decryptedString))) {\n        return Number(decryptedString);\n      }\n      return decryptedString;\n    }\n  } catch (error) {\n    console.error(\"Error during decryption:\", error);\n    return null;\n  }\n};\n\nexport const getEncryptedUrl = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const encryptedUrlParam = urlParams.get('encryptedUrl');\n  return encryptedUrlParam;\n};\n\nexport const getEncryptedUrlAndDecrypt = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const encryptedUrlParam = urlParams.get('encryptedUrl');\n\n  if (encryptedUrlParam) {\n    const decryptedURL = decryptData(encryptedUrlParam);\n    return decryptedURL;\n  } else {\n    return null;\n  }\n};\n\nexport const encryptUrlData = (data) => {\n  let stringifiedData;\n\n  if (typeof data === 'object') {\n    stringifiedData = JSON.stringify(data);\n  } else {\n    stringifiedData = data.toString();\n\n    let value=CryptoJS.AES.encrypt(stringifiedData, secretKey).toString();\n    if(value) value=value.replaceAll('/','slAshD')\n  return value\n};\n}"],"names":["Billing","user","useSelector","state","searchState","filters","setFilter","useState","page","count","search","data","setData","total","setTotal","loaging","setLoader","history","useNavigate","getData","p","arguments","length","undefined","filter","userId","id","ApiClient","get","shared","listApi","then","res","success","map","itm","useEffect","loggedIn","_jsx","_Fragment","children","Html","view","selectedItem","encryptUrlData","url","clear","f","type","status","sortClass","key","cls","sorder","sorting","sortBy","isAllow","_user$subRoleDetails","permissions","value","subRoleDetails","e","pageChange","changestatus","getRolesData","role","secretKey","process","encryptUrlData2","replaceAll","decryptData","encryptedData","decryptedString","CryptoJS","decrypt","toString","Utf8","console","error","JSON","parse","isNaN","Number","stringifiedData","encrypt","stringify"],"sourceRoot":""}