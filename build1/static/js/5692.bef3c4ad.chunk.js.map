{"version":3,"file":"static/js/5692.bef3c4ad.chunk.js","mappings":"gOAGA,MA6KA,EA7KmBA,IAA2C,IAA1C,aAAEC,EAAY,MAAEC,EAAK,MAAEC,EAAK,KAAEC,GAAMJ,EACtD,MAAMK,GAAaC,EAAAA,EAAAA,QAAO,OACnBC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,MAuGjD,SAASC,EAAgBC,EAAQC,GAC/B,MAAMC,EAAgBD,EAAIE,MArGD,GAsGnBC,EAAcH,EAAII,MAAM,CAACJ,EAAIE,MArGZ,GAqGqCD,IAEtDI,EADgBL,EAAII,MAAM,CAACJ,EAAIE,MArGZ,GAqGuCD,IAChC,GAAKE,EAAY,GAC3CG,EA1Ga,GA0GDN,EAAIO,KAAK,CAAC,EAAG,IAAI,GAEnC,MAAO,CACLf,KAAM,QACNgB,SAAU,CACR,CACEhB,KAAM,OACNiB,MAAO,CACLC,EAAGP,EAAY,GACfQ,EAAGR,EAAY,GAAKG,EACpBM,MAAOP,EACPQ,OAAQP,GAEVQ,MAAOd,EAAIc,UAInB,CAEA,SAASC,EAAoBhB,EAAQC,GAEnC,MAAO,CACLR,KAAM,QACNwB,SAAU,CAAC,GAHHhB,EAAII,MAAM,CAAC,EAAGJ,EAAIE,MAAM,KAAK,IAIrCM,SAAU,CACR,CACEhB,KAAM,OACNiB,MAAO,CACLQ,EAAG,yDACHP,EAAG,EACHC,GAAI,IAENG,MAAO,CAAEI,KAAM,YAEjB,CACE1B,KAAM,OACNsB,MAAO,CACLJ,EAAG,GACHC,GAAI,EACJQ,KAAMnB,EAAIE,MAAM,GAChBkB,kBAAmB,SACnBC,UAAW,SACXC,SAAU,UAKpB,CAEA,SAASC,EAAkBC,EAAOxB,EAAKR,GACvC,CAEA,OAzJAiC,EAAAA,EAAAA,YAAU,KACR,MAiBMC,EAIR,SAAoBC,GAClB,MAAO,CACLC,QAAS,CAAC,EACVC,WAAW,EACXC,QAAS,CACPC,KAAM,GACNC,IAAK,EACLC,SAAU,GACVC,QAAS,CACPC,OAAQ,CACNC,MAAM,EACNC,MAAO,sBACPC,KAAM,+CACNC,QAAShB,KAIfc,MAAO,CACLlB,KAAM,cACNY,KAAM,UAERS,SAAU,CACR,CACEhD,KAAM,SACNiD,WAAY,EACZ5B,OAAQ,GACR6B,MAAO,EACPC,IAAK,KAGTC,KAAM,CACJR,MAAM,EACNJ,IAAK,GACLa,OAAQ,GACRd,KAAM,IACNe,MAAO,IAETC,MAAO,CACLvD,KAAM,OACNwB,SAAU,MACVgC,SAAU,CAAEZ,MAAM,GAClBa,UAAW,CAAEC,MAAO,YAEtBC,MAAO,CACLC,SAAU,CAAEhB,MAAM,GAClBY,SAAU,CAAEZ,MAAM,GAClBa,UAAW,CAAEb,MAAM,GACnBiB,IAAK,EACLC,IAAK3B,EAAQ4B,aAAaC,KAAKC,QAEjCC,OAAQ,CACN,CACEC,GAAI,aACJnE,KAAM,SACNoE,WAAY9D,EACZ+D,WAAYlC,EAAQmC,OAAOD,WAC3BE,OAAQ,CACNrD,EAAG,CAlFY,EACE,GAkFjBC,EApFiB,EAqFjBiB,QAAS,CArFQ,EACF,EACE,IAqFnB4B,KAAM7B,EAAQmC,OAAON,MAEvB,CACEhE,KAAM,SACNoE,WAAY7C,EACZ8C,WAAYlC,EAAQ4B,aAAaM,WACjCE,OAAQ,CAAErD,GAAI,EAAGC,EAAG,GACpB6C,KAAM7B,EAAQ4B,aAAaC,KAAKQ,KAAI,CAACC,EAAMC,IAAU,CAACA,GAAOC,OAAOF,OAI5E,CA5EiBG,CAjBC,CACdN,OAAQ,CACND,WAAY,CAAC,SAAU,UAAW,YAAa,gBAC/CL,KAAM,CACJ,CAAC,EAAG,sBAAuB,sBAAuB,cAClD,CAAC,EAAG,sBAAuB,sBAAuB,gBAGtDD,aAAc,CACZM,WAAY,CAAC,QAAS,OAAQ,YAC9BL,KAAM,CACJ,CAAC,EAAG,SAAU,cACd,CAAC,EAAG,SAAU,kBAMpB5D,EAAgB8B,EAAO,GACtB,KAsID2C,EAAAA,EAAAA,KAAA,OAAA7D,SACGb,GACC0E,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACC,IAAK9E,EAAYiC,OAAQ/B,EAAcmB,MAAO,CAAED,OAAQ,YAEtEwD,EAAAA,EAAAA,KAAA,OAAA7D,SAAK,sBAEH,ECxBV,EA7I0BgE,KACxB,MAAOC,EAASC,IAAa7E,EAAAA,EAAAA,UAAS,CAAC,IAChC8E,EAAOC,IAAW/E,EAAAA,EAAAA,UAAS,IAC3B2D,EAAMqB,IAAWhF,EAAAA,EAAAA,UAAS,KAC1BiF,EAASC,IAAclF,EAAAA,EAAAA,YAgBxBmF,EAAS,WAAa,IACtBC,EAAI,CACNC,KAAM,KAFOC,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,GAKnBT,EAAU,IAAKD,KAAYQ,GAE7B,EAaA,OAHAxD,EAAAA,EAAAA,YAAU,KACC,GACR,KAED4C,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UACE8E,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAAA/E,SAAA,EACL8E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sDAAqDhF,SAAA,EAGlE6D,EAAAA,EAAAA,KAAA,KAAGV,GAAG,kBAENU,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,aAGjBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kBAAiBhF,SAAA,EAC9B6D,EAAAA,EAAAA,KAACoB,EAAAA,EAAc,CACbC,aAAa,OACbF,UAAU,UACVG,YAAY,eACZC,YAAanB,EAAQoB,SACrBC,OAASC,IACPf,EAAO,CAAEa,SAAUE,EAAE7F,OAAQ,EAE/B8F,MAAM,SACNC,QAhCO,CACf,CAAEC,KAAM,OAAQvC,GAAI,QACpB,CAAEuC,KAAM,aAAcvC,GAAI,cAC1B,CAAEuC,KAAM,OAAQvC,GAAI,QACpB,CAAEuC,KAAM,SAAUvC,GAAI,UACtB,CAAEuC,KAAM,SAAUvC,GAAI,cA6BhBU,EAAAA,EAAAA,KAACoB,EAAAA,EAAc,CACb9B,GAAG,iBACH+B,aAAa,OACbC,YAAY,aACZC,YAAanB,EAAQ0B,OACrBL,OAASC,IACPf,EAAO,CAAEmB,OAAQJ,EAAE7F,OAAQ,EAE7B8F,MAAM,YAGR3B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAe,CACdlG,MAAO,CACLmG,UAAW5B,EAAQ4B,UACnBC,QAAS7B,EAAQ6B,SAEnBC,SAAWR,IACTf,EAAO,CACLqB,UAAWN,EAAEM,UACbC,QAASP,EAAEO,SACX,IAIL7B,EAAQ0B,QAAU1B,EAAQ4B,WAAa5B,EAAQoB,UAC9CxB,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UACE6D,EAAAA,EAAAA,KAAA,UACEmB,UAAU,yGACVgB,QAASA,IApFTC,MACZ,IAAIxB,EAAI,CACNoB,UAAW,GACXC,QAAS,GACTT,SAAU,GACVa,OAAQ,GACRP,OAAQ,GACRjB,KAAM,GAERR,EAAU,IAAKD,KAAYQ,GACV,EA0EUwB,GAAQjG,SACxB,aAKH6D,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,QAGJC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8CAA6ChF,SAAA,EAC1D6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,GAAEhF,UACf6D,EAAAA,EAAAA,KAAA,MAAImB,UAAU,uGAAsGhF,SAAC,oBAIvH6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,kCAAiChF,UAC9C6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,mDAAkDhF,UACjE6D,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CACNC,QAAS,CAAC,CAAEC,MAAO,YAAaC,IAAK,aACrCtD,KAAM,CACJ,CAAEuD,MAAO,GAAIC,KAAM,cACnB,CAAED,MAAO,GAAIC,KAAM,cACnB,CAAED,MAAO,GAAIC,KAAM,cACnB,CAAED,MAAO,GAAIC,KAAM,cACnB,CAAED,MAAO,GAAIC,KAAM,cACnB,CAAED,MAAO,GAAIC,KAAM,yBAO7B1B,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8CAA6ChF,SAAA,EAC1D6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,GAAEhF,UACf6D,EAAAA,EAAAA,KAAA,MAAImB,UAAU,uGAAsGhF,SAAC,mBAIvH6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,kCAAiChF,UAC9C6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,mDAAkDhF,UACjE6D,EAAAA,EAAAA,KAAC4C,EAAU,eAMhB,C,mJCrIP,MAqSA,EArSwB7H,IAIjB,IAJkB,MAAEc,EAAK,SAAEqG,EAAQ,aAAEW,GAAe,EAAK,UAC5D1B,EAAY,KAAI,SAAE2B,GAAW,EAAK,MAAE9E,EAAQ,GAAE,YAAEsD,EAAc,GAAE,UAAEyB,GAAY,EAAK,WACnFC,GAAa,EAAI,UACjBC,GAAY,GACflI,EACG,MAAMmI,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,QACnCG,EAAQC,IAAa9H,EAAAA,EAAAA,WAAS,IAC9B+H,EAAOC,IAAYhI,EAAAA,EAAAA,UAAS,IA4F7BiI,EAAeA,KACjB,IAAIpF,EAAQ,GACRC,EAAM,GACV,GAAIzC,EAAMmG,WAAanG,EAAMoG,QAAS,CAClC,IAAIyB,EAAS7H,EAAMmG,UAAU2B,MAAM,KAC/BC,EAAS/H,EAAMoG,QAAQ0B,MAAM,KAC7BE,EAAOC,OAAOJ,EAAO,IACrBK,EAAQD,OAAOF,EAAO,IAEtBhH,EAAI,IAAIoH,KAAK,GAAGH,EAAO,KAAKH,EAAO,MAAMA,EAAO,MACpDrF,EAAQ4F,EAAAA,EAAcC,aAAatH,GAEnC,IAAIuH,EAAK,IAAIH,KAAK,GAAGD,EAAQ,KAAKH,EAAO,MAAMA,EAAO,MACtDtF,EAAM2F,EAAAA,EAAcC,aAAaC,EACrC,CACA,MAAO,CAAE9F,QAAOC,MAAK,EAGnB8F,EAAgBA,KAClB,IAAI/F,EAAQ,GACRC,EAAM,GACV,GAAIzC,EAAMmG,WAAanG,EAAMoG,QAAS,CASlC,IACIoC,EADU,IAAIL,KAAKnI,EAAMmG,WACLsC,QAAQ,GAChCD,EAAYJ,EAAAA,EAAcC,aAAaG,GACvChG,EAAQ,GAAGgG,EAAUV,MAAM,KAAK,MAAMU,EAAUV,MAAM,KAAK,QAC3DrF,EAAM+F,CACV,CACA,MAAO,CAAEhG,QAAOC,MAAK,EAGnBiG,EAAiBA,KACnB,IAAIlG,EAAQ,GACRC,EAAM,GACV,GAAIzC,EAAMmG,WAAanG,EAAMoG,QAAS,CAClC,IAAIuC,EAtDIC,EAACC,EAAGhD,KAEhB,MAAMM,EAAY,IAAIgC,KAAKU,GAGrBC,EAFU,IAAIX,KAAKtC,GAEQM,EAGjC,OADuB4C,KAAKC,MAAMF,EAAc,MAC3B,EA8CNF,CAAQ5I,EAAMmG,UAAWnG,EAAMoG,SAAW,EAEjDrF,EAAI,IAAIoH,KAAKnI,EAAMmG,WACvBpF,EAAE0H,QAAQ1H,EAAEkI,UAAYN,GACxBnG,EAAQ4F,EAAAA,EAAcC,aAAatH,GAEnC,IAAIuH,EAAK,IAAIH,KAAKnI,EAAMmG,WACxBmC,EAAGG,QAAQH,EAAGW,UAAY,GAC1BxG,EAAM2F,EAAAA,EAAcC,aAAaC,EACrC,CACA,MAAO,CAAE9F,QAAOC,MAAK,EAGnByG,EAAiBrD,IACnB,IAAIrD,EAAQ,GACRC,EAAM,GACD,mBAALoD,GACArD,EAAQkG,IAAiBlG,MACzBC,EAAMiG,IAAiBjG,KACX,iBAALoD,GACPrD,EAAQoF,IAAepF,MACvBC,EAAMmF,IAAenF,KACT,kBAALoD,IACPrD,EAAQ+F,IAAgB/F,MACxBC,EAAM8F,IAAgB9F,KAG1B,IAAI0G,EAAI,IACDnJ,EACHoJ,aAAc5G,EACd6G,WAAY5G,EACZ6G,QAASzD,GAEb4B,GAAU,GACVpB,EAAS,IAAK8C,GAAI,EAGtB,OAAOhF,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UAGH8E,EAAAA,EAAAA,MAACmE,EAAAA,GAAI,CAACC,GAAG,MAAMlE,UAAU,kCAAkCnD,MAAOA,EAAM7B,SAAA,EACpE6D,EAAAA,EAAAA,KAAA,OAAA7D,UAEI8E,EAAAA,EAAAA,MAACmE,EAAAA,GAAKE,OAAM,CAACtH,MAAOA,EAAO8E,SAAUA,EAAUX,QA1JtCoD,KACjBjC,GAAWD,EAAO,EAyJ4DlC,UAAU,mLAAkLhF,SAAA,CACvP,OAALN,QAAK,IAALA,GAAAA,EAAOmG,WAAmB,OAALnG,QAAK,IAALA,GAAAA,EAAOoG,SAA0DhB,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAA7E,SAAA,CAAG8H,EAAAA,EAActB,KAAU,OAAL9G,QAAK,IAALA,OAAK,EAALA,EAAOmG,UAAe,OAAJkB,QAAI,IAAJA,OAAI,EAAJA,EAAMsC,mBAAmB,OAAKvB,EAAAA,EAActB,KAAU,OAAL9G,QAAK,IAALA,OAAK,EAALA,EAAOoG,QAAa,OAAJiB,QAAI,IAAJA,OAAI,EAAJA,EAAMsC,uBAA/JxF,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,SAAGmF,GAAe,2BAC1DtB,EAAAA,EAAAA,KAACyF,EAAAA,EAAe,CAACtE,UAAU,+BAA+B,cAAY,eAM9EnB,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CACPL,GAAIM,EAAAA,SACJC,MAAM,mCACNC,UAAU,+BACVC,QAAQ,kCACRC,MAAM,iCACNC,UAAU,kCACVC,QAAQ,+BAA8B9J,UAEtC6D,EAAAA,EAAAA,KAACoF,EAAAA,GAAKc,MAAK,CAAC/E,UAAW,oEAA6FA,GAAwB,+FACzDhF,UAC/E6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,QAAOhF,UAClB8E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,GAAEhF,SAAA,CAGb8G,GAAUjD,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UACV6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,2DAA0DhF,SAxM/E,CACd,CAAEmD,GAAI,aAAcuC,KAAM,cAC1B,CAAEvC,GAAI,YAAauC,KAAM,aACzB,CAAEvC,GAAI,aAAcuC,KAAM,cAC1B,CAAEvC,GAAI,YAAauC,KAAM,aACzB,CAAEvC,GAAI,GAAIuC,KAAM,WAoMmBlC,KAAIwG,GACU,GAAdnD,GAAmC,UAAZmD,EAAItE,KAAmB,MAAO7B,EAAAA,EAAAA,KAAA,UAAQmB,UAAW,QAAOoC,GAAS4C,EAAI7G,GAAK,0BAA4B,iEAAmEnE,KAAK,SAASgH,QAAST,GAlK1OA,KAChB,IAAIM,EAAY,GACZC,EAAU,GAEd,GAAS,cAALP,EAAmB,CACnB,IACI2C,GADU,IAAIL,MACMM,QAAQ,GAChCD,EAAYJ,EAAAA,EAAcC,aAAaG,GACvCrC,EAAY,GAAGqC,EAAUV,MAAM,KAAK,MAAMU,EAAUV,MAAM,KAAK,QAC/D1B,EAAUoC,CAEd,MAAO,GAAS,cAAL3C,EAAmB,CAC1B,IAAI0E,EAAUnC,EAAAA,EAAcC,aAAa,IAAIF,MAC7ChC,EAAY,GAAGoE,EAAQzC,MAAM,KAAK,MAAMyC,EAAQzC,MAAM,KAAK,QAE3D,IAAI0C,EAAS,IAAIrC,MAAK,IAAIA,MAAOsC,eAAe,IAAItC,MAAOuC,WAAa,EAAG,GAC3EtE,EAAUgC,EAAAA,EAAcC,aAAamC,EACzC,MAEK,GAAS,aAAL3E,EAAkB,CAEvBM,EAAY,GADEiC,EAAAA,EAAcC,aAAa,IAAIF,MACtBL,MAAM,KAAK,WAElC,IAAI0C,EAAS,IAAIrC,MAAK,IAAIA,MAAOsC,cAAgB,EAAG,EAAG,GACvDrE,EAAUgC,EAAAA,EAAcC,aAAamC,EACzC,MACK,GAAS,aAAL3E,EAAkB,CACvB,IAAI0E,EAAU,IAAIpC,KAClBhC,EAAeoE,EAAQE,cAAgB,EAA3B,SACZ,IAAID,EAAS,IAAIrC,KAAKoC,EAAQE,cAAe,EAAG,GAChDrE,EAAUgC,EAAAA,EAAcC,aAAamC,EACzC,CACA7C,EAAS9B,GACTQ,EAAS,IAAKrG,EAAOmG,YAAWC,UAASkD,QAAS,KACzC,IAALzD,GACA4B,GAAU,EACd,EA8H+PkD,CAAWL,EAAI7G,IAAInD,SAAEgK,EAAItE,cAGjQ7B,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,IAGFuC,GAAuB,GAAdP,GAAsBhD,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,KAAQhB,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UACpC6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,wBAAuBhF,UAClC6D,EAAAA,EAAAA,KAACyG,EAAAA,GAAS,CACNC,sBAAsB,EACtBC,oBAAoB,EACpBzE,SAAUR,GA7MrBA,KACrB,IAAIsD,EAAE,IACCnJ,KAAU6F,EAAGyD,QAAS,IAG7BH,EAAEhD,UAAUiC,EAAAA,EAAcC,aAAac,EAAEhD,WACzCgD,EAAE/C,QAAQgC,EAAAA,EAAcC,aAAac,EAAE/C,SAEvCC,EAAS,IAAK8C,IACVA,EAAEhD,WAAagD,EAAE/C,SACjBqB,GAAU,EACd,EAkM+CsD,CAAgBlF,EAAEmF,WACjCC,2BAA2B,EAC3BC,OAvLzB,CALC,CACJ/E,UAAWnG,EAAiB,UAAI,IAAImI,KAAKnI,EAAiB,WAAK,IAAImI,KACnE/B,QAASpG,EAAe,QAAI,IAAImI,KAAKnI,EAAe,SAAK,IAAImI,KAC7DvB,IAAK,oBA+LYM,GAAY/C,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UAET8E,EAAAA,EAAAA,MAACmE,EAAAA,GAAI,CAACC,GAAG,MAAMlE,UAAU,YAAWhF,SAAA,EAChC6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,cAAahF,UACxB8E,EAAAA,EAAAA,MAACmE,EAAAA,GAAKE,OAAM,CAACnE,UAAU,oLAAmLhF,SAAA,CAAC,WAEvM6D,EAAAA,EAAAA,KAACyF,EAAAA,EAAe,CACZtE,UAAU,2DACV,cAAY,eAIxBnB,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CACPL,GAAIM,EAAAA,SACJC,MAAM,mCACNC,UAAU,+BACVC,QAAQ,kCACRC,MAAM,iCACNC,UAAU,kCACVC,QAAQ,+BAA8B9J,UAEtC6D,EAAAA,EAAAA,KAACoF,EAAAA,GAAKc,MAAK,CAAC/E,UAAU,8IAA6IhF,UAC/J8E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYhF,SAAA,EACvB6D,EAAAA,EAAAA,KAACoF,EAAAA,GAAK4B,KAAI,CAAA7K,SACL8K,IAAA,IAAC,OAAEC,GAAQD,EAAA,OACRhG,EAAAA,EAAAA,MAAA,KAAGE,UAAW,kBAAkC,kBAAjBtF,EAAMsJ,QAA8B,SAAW,IAAMhD,QAAST,GAAKqD,EAAc,kBAAkB5I,SAAA,CAAC,mBAAiB8H,EAAAA,EAActB,KAAKyB,IAAgB/F,MAAO6E,EAAKsC,mBAAmB,MAAIvB,EAAAA,EAActB,KAAKyB,IAAgB9F,IAAK4E,EAAKsC,mBAAmB,MAAK,KAKvSxF,EAAAA,EAAAA,KAACoF,EAAAA,GAAK4B,KAAI,CAAA7K,SACLgL,IAAA,IAAC,OAAED,GAAQC,EAAA,OACRlG,EAAAA,EAAAA,MAAA,KAAGE,UAAW,kBAAkC,iBAAjBtF,EAAMsJ,QAA6B,SAAW,IAAMhD,QAAST,GAAKqD,EAAc,iBAAiB5I,SAAA,CAAC,6BAA2B8H,EAAAA,EAActB,KAAKc,IAAepF,MAAO6E,EAAKsC,mBAAmB,MAAIvB,EAAAA,EAActB,KAAKc,IAAenF,IAAK4E,EAAKsC,mBAAmB,MAAK,KAK7SxF,EAAAA,EAAAA,KAACoF,EAAAA,GAAK4B,KAAI,CAAA7K,SACLiL,IAAA,IAAC,OAAEF,GAAQE,EAAA,OACRnG,EAAAA,EAAAA,MAAA,KAAGE,UAAW,kBAAkC,mBAAjBtF,EAAMsJ,QAA+B,SAAW,IAAMhD,QAAST,GAAKqD,EAAc,mBAAmB5I,SAAA,CAAC,kCAAgC8H,EAAAA,EAActB,KAAK4B,IAAiBlG,MAAO6E,EAAKsC,mBAAmB,MAAIvB,EAAAA,EAActB,KAAK4B,IAAiBjG,IAAK4E,EAAKsC,mBAAmB,MAAK,iBAaxUxF,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,iBAS3B,C,kFC1SP,MA0EA,EA1EkBjG,IAA6C,IAA5C,KAACoE,EAAK,GAAE,QAACoD,EAAQ,GAAE,YAAC8E,GAAY,GAAMtM,EACrD,MAAMuM,EAAOC,EAAAA,EAAYC,MAClBC,EAAgBC,IAAqBlM,EAAAA,EAAAA,WAAS,IAErD4B,EAAAA,EAAAA,YAAU,KACC,OAAJ+B,QAAI,IAAJA,GAAAA,EAAMC,SACLsI,GAAkB,GAClBC,YAAW,KACPD,GAAkB,EAAM,GAC1B,KACN,GACF,CAACvI,EAAKoD,IAER,MAAMqF,EAAqB,IAAIrF,EAAQ5C,KAAIwG,GAAKA,EAAI3D,SAC9CqF,EAAoB,CACtBtK,QAAS,CACLuK,QAAS,QAEbC,OAAOV,EAAY,KAAK,CACtBlI,KAAM,IAAIyI,IAGZnK,QAAS,CACLI,QAAS,CACLmK,YAAa,CAAC,IAGtBzJ,KAAM,CACFb,KAAM,KACNe,MAAO,KACPD,OAAQ,KACRyJ,cAAc,GAElBvJ,MAAO,CACH,CACIvD,KAAM,WACN+M,aAAa,EACb/I,KAAM,IACCA,EAAKQ,KAAIwG,GAAOA,EAAIxD,UAInC7D,MAAO,CACH,CACI3D,KAAM,UAGdkE,OAAQ,IACDkD,EAAQ5C,KAAI,CAACwG,EAAIgC,KACT,CACHtG,KAAMsE,EAAI3D,MACVrH,KAAM,OACNiN,UAAW,CAACC,OAAQ,CAACC,UAAW,CAACnN,KAAM,WAAW0D,MAAa,OAANyI,QAAM,IAANA,OAAM,EAANA,EAASa,KAClEhJ,KAAM,IACCA,EAAKQ,KAAI4I,GAAQzE,OAAOyE,EAAKpC,EAAI1D,MAAM,YAQ9D,OAAOzC,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,SACFsL,GAAiBzH,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UACd6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,uBACbnB,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UACF6D,EAAAA,EAAAA,KAACwI,EAAAA,EAAY,CACTnL,OAAQwK,EACRpL,MAAO,CAAED,OAAQ,UAG1B,C,oHCpEP,MA4KA,EA5KazB,IAkBD,IAAD0N,EAAA,IAlBG,QACZ7G,EAAO,aACPiB,GAAe,EAAK,UACpB1B,EAAY,GAAE,UACduH,EAAS,WACTC,EAAa,GAAE,eACfC,EAAc,cACdC,EAAiBnH,MAAa,aAC9BoH,EAAeA,OAAQ,aACvBzH,EAAY,GACZ/B,EAAK,GAAE,YACPgC,EAAW,SACXyH,GAAW,EAAK,SAChBjG,EAAQ,KACRjB,EAAO,GAAE,UACTmH,EAAS,oBACTC,GAAsB,EAAK,MAC3BtH,EAAQ,UACJ5G,EAMJ,OACEiF,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,SACY,UAATwF,GACC3B,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UACE6D,EAAAA,EAAAA,KAAA,OAAKmB,UAAW,GAAGA,GAAa,eAAehF,UAC7C6D,EAAAA,EAAAA,KAACkJ,EAAAA,GAAM,CACLtH,SACS,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASjC,KAAKwG,IACL,CAAEtK,MAAOsK,EAAI7G,GAAIkD,MAAO2D,EAAI9E,SAC/B,GAGRC,YAAaA,EACbzF,MAlBQsN,MAClB,IAAIC,EAAMxH,GAAWA,EAAQyH,MAAMzJ,GAAcA,EAAKN,IAAMsJ,IAC5D,OAAOQ,EAAM,CAAEvN,MAAOuN,EAAI9J,GAAIkD,MAAO4G,EAAI/H,IAAkB,EAAE,EAgB5C8H,GACPG,YAAaZ,EACb7G,KAAMA,EAGNgH,cAAeA,EACf3G,SAAWR,GAAWoH,GAAc,OAADpH,QAAC,IAADA,OAAC,EAADA,EAAG7F,QAAS,IAC/CsF,UAAU,6CACVoI,aAAYzG,EACZiG,SAAUA,SAKhB/I,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UACE8E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBhF,SAAA,EAC7B6D,EAAAA,EAAAA,KAAA,SACE7E,KAAK,SACL0G,KAAMA,EACNkH,SAAUA,EACVlN,MAAO+M,KAET5I,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,uBAAsBhF,UACnC8E,EAAAA,EAAAA,MAACmE,EAAAA,GAAI,CAACC,GAAG,MAAMlE,UAAU,yCAAwChF,SAAA,EAC/D6D,EAAAA,EAAAA,KAAA,OAAA7D,UACE8E,EAAAA,EAAAA,MAACmE,EAAAA,GAAKE,OAAM,CACVxC,SAAUA,EACVxD,GAAI,qBAAuBA,EAC3B6B,UAAW,8LAA8LA,IAAYhF,SAAA,CAEpNyM,IACkD,QAA/CH,EAAAe,EAAAA,EAAYH,KAAKzH,EAASgH,EAAgB,aAAK,IAAAH,OAAA,EAA/CA,EACEpH,KAEFC,GACJtB,EAAAA,EAAAA,KAACyF,EAAAA,EAAe,CACdtE,UAAU,8BACV,cAAY,eAKlBnB,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CACTL,GAAIM,EAAAA,SACJC,MAAM,mCACNC,UAAU,+BACVC,QAAQ,kCACRC,MAAM,iCACNC,UAAU,kCACVC,QAAQ,+BAA8B9J,UAEtC6D,EAAAA,EAAAA,KAACoF,EAAAA,GAAKc,MAAK,CACT/E,UAAW,GACT0B,EAAe,GAAK,kGAEpB1B,GAAwB,4GACkEhF,UAE5F8E,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMhF,SAAA,CAClB8M,EAAoB,MACrBjJ,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,SACC6M,GACChJ,EAAAA,EAAAA,KAACoF,EAAAA,GAAK4B,KAAI,CAAClE,SAAUA,EAAS3G,SAC3B8K,IAAA,IAAC,OAAEC,GAAQD,EAAA,OACVjH,EAAAA,EAAAA,KAAA,KACEmB,UACoB,IAAlByH,EACI,+CACA,wCAENzG,QAASA,IAAM2G,EAAa,IAAI3M,SAE/BmF,GACC,KAIRtB,EAAAA,EAAAA,KAACoF,EAAAA,GAAK4B,KAAI,CAAA7K,SACPgL,IAAA,IAAC,OAAED,GAAQC,EAAA,OACVnH,EAAAA,EAAAA,KAAA,KACEmB,UACoB,IAAlByH,EACI,+CACA,wCAENzG,QAASA,IAAM2G,EAAa,IAAI3M,SAE/BmF,GACC,MAKTM,GACCA,EAAQjC,KAAKwG,IAETnG,EAAAA,EAAAA,KAACoF,EAAAA,GAAK4B,KAAI,CAAA7K,SACPiL,IAAA,IAAC,OAAEF,GAAQE,EAAA,OACVpH,EAAAA,EAAAA,KAAA,KACEmB,UACEyH,GAAkBzC,EAAI7G,GAClB,+CACA,wCAEN6C,QAASA,IAAM2G,EAAa3C,EAAI7G,IAAInD,SAGnCgK,EAAI9E,IAFA8E,EAAI7G,GAGP,wBAuB7B,ECzHP,EAnDuBvE,IAkBX,IAlBY,YACtBwG,EAAW,QACXK,EAAO,SACP6H,EAAQ,UACRC,EAAY,SAAQ,UACpBvI,EAAY,aAAY,WACxBwH,EAAa,GAAE,cACfE,EAAiBnH,MAAa,OAC9BD,EAAM,UACNiH,GAAU,EAAI,aACdrH,EAAe,OAAM,GACrB/B,EAAE,YACFgC,EAAc,gBAAe,SAC7BwB,GAAW,EAAK,KAChBjB,EAAI,SACJkH,GAAW,EAAK,MAChBpH,EAAQ,SAAQ,oBAChBsH,GACIlO,EASJ,OACEiF,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAA7E,UACE6D,EAAAA,EAAAA,KAAC2J,EAAK,CACJrK,GAAIA,EACJ6B,UAAWA,EACXU,KAAMA,EACNkH,SAAUA,EACVJ,WAAYA,EACZE,cAAeA,EACfH,UAAWA,EACX/G,MAAOA,EACPmB,SAAUA,EACVxB,YAAaA,EACbmI,SAAUA,EACVpI,aAAcA,EACdO,QAASA,EACTgH,eAAgBrH,EAChBuH,aAzBgBpH,IACpB,IAAIsD,EAAItD,EACS,UAAbgI,IACF1E,EAAIpD,EAAQyH,MAAMlD,GAAaA,EAAI7G,IAAMoC,KAE3CD,EAAO,CAAEmI,MAAO,QAAS/N,MAAOmJ,GAAI,EAqBhCiE,oBAAqBA,KAEtB,C","sources":["components/Charts/Gantt.jsx","Pages/Projects/Project.jsx","components/common/DateRangePicker/index.js","components/common/LineChart/index.js","components/common/SelectDropdown/html.tsx","components/common/SelectDropdown/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nconst GanttChart = ({ totalAmounts, dates, names, type }) => {\n  const myChartRef = useRef(null); \n  const [chartOptions, setChartOptions] = useState(null); \n\n  const HEIGHT_RATIO = 0.6;\n  const DIM_CATEGORY_INDEX = 0;\n  const DIM_TIME_ARRIVAL = 1;\n  const DIM_TIME_DEPARTURE = 2;\n\n  useEffect(() => {\n    const rawData = {\n      flight: {\n        dimensions: [\"flight\", \"arrival\", \"departure\", \"flightNumber\"],\n        data: [\n          [0, \"2024-11-01T10:00:00\", \"2024-11-01T12:00:00\", \"Flight 101\"],\n          [1, \"2024-11-01T13:00:00\", \"2024-11-01T15:00:00\", \"Flight 102\"],\n        ],\n      },\n      parkingApron: {\n        dimensions: [\"index\", \"name\", \"position\"],\n        data: [\n          [0, \"Gate A\", \"Position 1\"],\n          [1, \"Gate B\", \"Position 2\"],\n        ],\n      },\n    };\n\n    const option = makeOption(rawData);\n    setChartOptions(option); \n  }, []);\n\n  function makeOption(rawData) {\n    return {\n      tooltip: {},\n      animation: false,\n      toolbox: {\n        left: 20,\n        top: 0,\n        itemSize: 20,\n        feature: {\n          myDrag: {\n            show: true,\n            title: 'Make bars draggable',\n            icon: 'path://M990.55 380.08 q11.69 0 19.88 8.19...',\n            onclick: onDragSwitchClick\n          }\n        }\n      },\n      title: {\n        text: 'Gantt Chart',\n        left: 'center',\n      },\n      dataZoom: [\n        {\n          type: 'slider',\n          xAxisIndex: 0,\n          height: 20,\n          start: 0,\n          end: 26,\n        },\n      ],\n      grid: {\n        show: true,\n        top: 70,\n        bottom: 20,\n        left: 100,\n        right: 20,\n      },\n      xAxis: {\n        type: 'time',\n        position: 'top',\n        axisLine: { show: false },\n        axisLabel: { color: '#929ABA' },\n      },\n      yAxis: {\n        axisTick: { show: false },\n        axisLine: { show: false },\n        axisLabel: { show: false },\n        min: 0,\n        max: rawData.parkingApron.data.length,\n      },\n      series: [\n        {\n          id: 'flightData',\n          type: 'custom',\n          renderItem: renderGanttItem,\n          dimensions: rawData.flight.dimensions,\n          encode: {\n            x: [DIM_TIME_ARRIVAL, DIM_TIME_DEPARTURE],\n            y: DIM_CATEGORY_INDEX,\n            tooltip: [DIM_CATEGORY_INDEX, DIM_TIME_ARRIVAL, DIM_TIME_DEPARTURE]\n          },\n          data: rawData.flight.data,\n        },\n        {\n          type: 'custom',\n          renderItem: renderAxisLabelItem,\n          dimensions: rawData.parkingApron.dimensions,\n          encode: { x: -1, y: 0 },\n          data: rawData.parkingApron.data.map((item, index) => [index].concat(item)),\n        }\n      ]\n    };\n  }\n\n  function renderGanttItem(params, api) {\n    const categoryIndex = api.value(DIM_CATEGORY_INDEX);\n    const timeArrival = api.coord([api.value(DIM_TIME_ARRIVAL), categoryIndex]);\n    const timeDeparture = api.coord([api.value(DIM_TIME_DEPARTURE), categoryIndex]);\n    const barLength = timeDeparture[0] - timeArrival[0];\n    const barHeight = api.size([0, 1])[1] * HEIGHT_RATIO;\n\n    return {\n      type: 'group',\n      children: [\n        {\n          type: 'rect',\n          shape: {\n            x: timeArrival[0],\n            y: timeArrival[1] - barHeight,\n            width: barLength,\n            height: barHeight,\n          },\n          style: api.style(),\n        },\n      ],\n    };\n  }\n\n  function renderAxisLabelItem(params, api) {\n    const y = api.coord([0, api.value(0)])[1];\n    return {\n      type: 'group',\n      position: [10, y],\n      children: [\n        {\n          type: 'path',\n          shape: {\n            d: 'M0,0 L0,-20 L30,-20 C42,-20 38,-1 50,-1 L70,-1 L70,0 Z',\n            x: 0,\n            y: -20,\n          },\n          style: { fill: '#368c6c' },\n        },\n        {\n          type: 'text',\n          style: {\n            x: 24,\n            y: -3,\n            text: api.value(1),\n            textVerticalAlign: 'bottom',\n            textAlign: 'center',\n            textFill: '#fff',\n          },\n        },\n      ],\n    };\n  }\n\n  function onDragSwitchClick(model, api, type) {\n  }\n\n  return (\n    <div>\n      {chartOptions ? (\n        <ReactEcharts ref={myChartRef} option={chartOptions} style={{ height: \"400px\" }} />\n      ) : (\n        <div>Loading chart...</div>\n      )}\n    </div>\n  );\n};\n\nexport default GanttChart;\n","import React, { useEffect, useState } from \"react\";\nimport DateRangePicker from \"../../components/common/DateRangePicker\";\nimport SelectDropdown from \"../../components/common/SelectDropdown\";\nimport Layout from \"../../components/global/layout\";\nimport BarChart from \"../../components/common/BarChart\";\nimport LineChart from \"../../components/common/LineChart\";\nimport GanttChart from \"../../components/Charts/Gantt\";\nconst ProjectManagement = () => {\n  const [filters, setFilter] = useState({});\n  const [total, seTotal] = useState(0);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState();\n  const getData = () => {};\n\n  const clear = () => {\n    let f = {\n      startDate: \"\",\n      endDate: \"\",\n      platform: \"\",\n      search: \"\",\n      status: \"\",\n      page: 1,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const filter = (p = {}) => {\n    let f = {\n      page: 1,\n      ...p,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const Category = [\n    { name: \"XERO\", id: \"xero\" },\n    { name: \"Quickbooks\", id: \"quickbooks\" },\n    { name: \"MYOB\", id: \"myob\" },\n    { name: \"Stripe\", id: \"stripe\" },\n    { name: \"Paypal\", id: \"Paypal\" },\n  ];\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    <>\n      <Layout>\n        <div className=\"flex flex-wrap justify-between items-center gap-y-4\">\n        \n\n          <a id=\"downloadFile\"></a>\n\n          <div className=\"flex\"></div>\n        </div>\n\n        <div className=\"flex gap-2 mt-3\">\n          <SelectDropdown\n            displayValue=\"name\"\n            className=\"ml-auto\"\n            placeholder=\"All Platform\"\n            intialValue={filters.platform}\n            result={(e) => {\n              filter({ platform: e.value });\n            }}\n            theme=\"search\"\n            options={Category}\n          />\n          <SelectDropdown\n            id=\"statusDropdown\"\n            displayValue=\"name\"\n            placeholder=\"All Status\"\n            intialValue={filters.status}\n            result={(e) => {\n              filter({ status: e.value });\n            }}\n            theme=\"search\"\n            // options={shared.status}\n          />\n          <DateRangePicker\n            value={{\n              startDate: filters.startDate,\n              endDate: filters.endDate,\n            }}\n            onChange={(e) => {\n              filter({\n                startDate: e.startDate,\n                endDate: e.endDate,\n              });\n            }}\n          />\n\n          {filters.status || filters.startDate || filters.platform ? (\n            <>\n              <button\n                className=\"bg-primary leading-10 h-10 inline-block shadow-btn px-6 hover:opacity-80 text-sm text-white rounded-lg\"\n                onClick={() => clear()}\n              >\n                Reset\n              </button>\n            </>\n          ) : (\n            <></>\n          )}\n        </div>\n        <div className=\"shadow-box  w-full bg-white rounded-lg mt-6\">\n          <div className=\"\">\n            <h5 className=\"p-4 border-b font-[600] rounded-[5px] rounded-bl-[0] rounded-br-[0] flex items-center text-[#0065FF]\">\n            Kanban Board\n            </h5>\n          </div>\n          <div className=\"col-span-12 md:col-span-12  p-4\">\n            <div className=\"chatr_ones border border-gray-200 p-6 rounded-lg\">\n            <LineChart\n                legends={[{ label: \"Over Time\", key: \"overtime\" }]}\n                data={[\n                  { count: 10, date: \"2020-12-04\" },\n                  { count: 13, date: \"2020-12-04\" },\n                  { count: 40, date: \"2020-12-04\" },\n                  { count: 45, date: \"2020-12-04\" },\n                  { count: 30, date: \"2020-12-04\" },\n                  { count: 20, date: \"2020-12-04\" },\n                ]}\n              />\n            \n            </div>\n          </div>\n        </div>\n        <div className=\"shadow-box  w-full bg-white rounded-lg mt-6\">\n          <div className=\"\">\n            <h5 className=\"p-4 border-b font-[600] rounded-[5px] rounded-bl-[0] rounded-br-[0] flex items-center text-[#0065FF]\">\n            Gantt Chart\n            </h5>\n          </div>\n          <div className=\"col-span-12 md:col-span-12  p-4\">\n            <div className=\"chatr_ones border border-gray-200 p-6 rounded-lg\">\n            <GanttChart/>  \n            </div>\n          </div>\n        </div>\n      \n      </Layout>\n    </>\n  );\n};\n\nexport default ProjectManagement;\n","import React, { useState } from \"react\";\nimport { DateRangePicker as DateRange } from 'react-date-range';\nimport datepipeModel from \"../../../models/datepipemodel\";\nimport { useSelector } from 'react-redux';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport \"./style.scss\";\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { ChevronDownIcon } from '@heroicons/react/20/solid'\n\nconst DateRangePicker = ({ value, onChange, dynamicStyle = false,\n    className = null, disabled = false, title = '', placeholder = '', isCompare = false, \n    showcustom = true,\n    showRange = true,\n}) => {\n    const user = useSelector((state) => state.user)\n    const [toggle, setToggle] = useState(false)\n    const [range, setRange] = useState('')\n\n    const rangeList = [\n        { id: 'This Month', name: \"This Month\" },\n        { id: 'This Year', name: \"This Year\" },\n        { id: 'Last Month', name: \"Last Month\" },\n        { id: 'Last Year', name: \"Last Year\" },\n        { id: '', name: \"Custom\" }\n    ]\n\n    const blockDateChange = (e) => {\n        let v={\n            ...value, ...e, compare: '' \n        }\n\n        v.startDate=datepipeModel.datetostring(v.startDate)\n        v.endDate=datepipeModel.datetostring(v.endDate)\n        \n        onChange({ ...v })\n        if (v.startDate != v.endDate) {\n            setToggle(false)\n        }\n    }\n\n    const toggleChange = () => {\n        setToggle(!toggle)\n    }\n\n    const getBlockValue = () => {\n        let v = {\n            startDate: value['startDate'] ? new Date(value['startDate']) : new Date(),\n            endDate: value['endDate'] ? new Date(value['endDate']) : new Date(),\n            key: 'selection'\n        }\n        return [v]\n    }\n\n    const dropdownMenuClick = (e) => {\n        // let el = document.getElementById(`daterangeDropdown-${id}`)\n        // el.click()\n    }\n\n    const rangeClick = (e) => {\n        let startDate = ''\n        let endDate = ''\n\n        if (e == 'Last Month') {\n            let current = new Date()\n            let monthdate = current.setDate(0)\n            monthdate = datepipeModel.datetostring(monthdate)\n            startDate = `${monthdate.split('-')[0]}-${monthdate.split('-')[1]}-01`\n            endDate = monthdate\n\n        } else if (e == 'This Month') {\n            let current = datepipeModel.datetostring(new Date())\n            startDate = `${current.split('-')[0]}-${current.split('-')[1]}-01`\n\n            let month2 = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n\n        else if (e == 'This Year') {\n            let current = datepipeModel.datetostring(new Date())\n            startDate = `${current.split('-')[0]}-01-01`\n\n            let month2 = new Date(new Date().getFullYear() + 1, 0, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n        else if (e == 'Last Year') {\n            let current = new Date()\n            startDate = `${current.getFullYear() - 1}-01-01`\n            let month2 = new Date(current.getFullYear(), 0, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n        setRange(e)\n        onChange({ ...value, startDate, endDate, compare: '' })\n        if (e != '') {\n            setToggle(false)\n        }\n    }\n\n    const getDays = (s, e) => {\n        // Define two date objects\n        const startDate = new Date(s); // Replace with your start date\n        const endDate = new Date(e);   // Replace with your end date\n        // Calculate the time difference in milliseconds\n        const timeDifference = endDate - startDate;\n        // Convert milliseconds to days\n        const daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n        return daysDifference\n    }\n\n    const previousYear = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            let ssplit = value.startDate.split('-')\n            let esplit = value.endDate.split('-')\n            let year = Number(ssplit[0])\n            let eyear = Number(esplit[0])\n\n            let d = new Date(`${year - 1}-${ssplit[1]}-${ssplit[2]}`)\n            start = datepipeModel.datetostring(d)\n\n            let ed = new Date(`${eyear - 1}-${esplit[1]}-${esplit[2]}`)\n            end = datepipeModel.datetostring(ed)\n        }\n        return { start, end }\n    }\n\n    const previousMonth = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            // let sMonth=new Date(value.startDate).getMonth()\n            // start=new Date(value.startDate).setMonth(sMonth-1)\n            // start=datepipeModel.datetostring(start)\n\n            // let eMonth=new Date(value.endDate).getMonth()\n            // end=new Date(value.endDate).setMonth(eMonth-1)\n            // end=datepipeModel.datetostring(end)\n\n            let current = new Date(value.startDate)\n            let monthdate = current.setDate(0)\n            monthdate = datepipeModel.datetostring(monthdate)\n            start = `${monthdate.split('-')[0]}-${monthdate.split('-')[1]}-01`\n            end = monthdate\n        }\n        return { start, end }\n    }\n\n    const previousPeriod = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            let days = getDays(value.startDate, value.endDate) + 1\n\n            let d = new Date(value.startDate)\n            d.setDate(d.getDate() - days)\n            start = datepipeModel.datetostring(d)\n\n            let ed = new Date(value.startDate)\n            ed.setDate(ed.getDate() - 1)\n            end = datepipeModel.datetostring(ed)\n        }\n        return { start, end }\n    }\n\n    const compareChange = (e) => {\n        let start = ''\n        let end = ''\n        if (e == 'Previous Period') {\n            start = previousPeriod().start\n            end = previousPeriod().end\n        } else if (e == 'Previous Year') {\n            start = previousYear().start\n            end = previousYear().end\n        } else if (e == 'Previous Month') {\n            start = previousMonth().start\n            end = previousMonth().end\n        }\n\n        let v = {\n            ...value,\n            compareStart: start,\n            compareEnd: end,\n            compare: e\n        }\n        setToggle(false)\n        onChange({ ...v })\n    }\n\n    return <>\n\n\n        <Menu as=\"div\" className=\"relative list_box_active_state \" title={title}>\n            <div>\n\n                <Menu.Button title={title} disabled={disabled} onClick={toggleChange} className=\" set-bg flex w-full bg-primary justify-center border gap-x-1.5 rounded-md  px-3 py-2.5 text-sm font-normal text-white shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\">\n                    {!value?.startDate || !value?.endDate ? <>{placeholder || 'Start Date - End Date'}</> : <>{datepipeModel.date(value?.startDate, user?.companyDateFormat)} -  {datepipeModel.date(value?.endDate, user?.companyDateFormat)}</>}\n                    <ChevronDownIcon className=\"-mr-1 h-5 w-5 text-white-400\" aria-hidden=\"true\" />\n\n\n                </Menu.Button>\n            </div>\n\n            <Transition\n                as={Fragment}\n                enter=\"transition ease-out duration-100\"\n                enterFrom=\"transform opacity-0 scale-95\"\n                enterTo=\"transform opacity-100 scale-100\"\n                leave=\"transition ease-in duration-75\"\n                leaveFrom=\"transform opacity-100 scale-100\"\n                leaveTo=\"transform opacity-0 scale-95\"\n            >\n                <Menu.Items className={`${dynamicStyle ? \"\" : \"\"}   focus:!outline-[#0065FF] focus:!outline text-sm absolute z-40 ${className ? className : \" min-w-[360px]\"\n                    }  right-0 shadow-lg !py-2 !mt-3 overflow-auto bg-white  rounded-lg scrollbar`}>\n                    <div className=\"fffff\">\n                        <div className=\"\" >\n                            {/* <p className=\"text-center px-2\">{!value?.startDate || !value?.endDate ? <>{placeholder || 'Start Date - End Date'}</> : <>{datepipeModel.date(value?.startDate, user?.companyDateFormat)} -  {datepipeModel.date(value?.endDate, user?.companyDateFormat)}</>}</p> */}\n                           \n                           {showRange?<>\n                            <div className=\"  row-gap-2 column-gap-2 whitespace-nowrap flex p-2 mb-0\">\n                                {rangeList.map(itm => {\n                                    return showcustom == false && itm.name == \"Custom\" ? null : <button className={`btn ${range == itm.id ? 'bg-[#0065FF] text-white' : 'bg-transparent hover:border-gray-400 border-1 border-gray-400'}`} type=\"button\" onClick={e => rangeClick(itm.id)}>{itm.name}</button>\n                                })}\n                            </div>\n                           </>:<></>}\n                           \n\n                            {range || showcustom == false ? <></> : <>\n                                <div className=\"w-full customcalender\">\n                                    <DateRange\n                                        showSelectionPreview={false}\n                                        editableDateInputs={true}\n                                        onChange={e => blockDateChange(e.selection)}\n                                        moveRangeOnFirstSelection={false}\n                                        ranges={getBlockValue()}\n                                    />\n                                </div>\n                            </>}\n\n\n                            {isCompare ? <>\n\n                                <Menu as=\"div\" className=\"relative \">\n                                    <div className=\"text-center\">\n                                        <Menu.Button className=\"inline-flex w-full justify-center border gap-x-1.5 rounded-md bg-white px-3 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\">\n                                            Compare\n                                            <ChevronDownIcon\n                                                className=\"-mr-1 ml-2 h-5 w-5 text-violet-200 hover:text-violet-100\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Menu.Button>\n                                    </div>\n                                    <Transition\n                                        as={Fragment}\n                                        enter=\"transition ease-out duration-100\"\n                                        enterFrom=\"transform opacity-0 scale-95\"\n                                        enterTo=\"transform opacity-100 scale-100\"\n                                        leave=\"transition ease-in duration-75\"\n                                        leaveFrom=\"transform opacity-100 scale-100\"\n                                        leaveTo=\"transform opacity-0 scale-95\"\n                                    >\n                                        <Menu.Items className=\"absolute right-0 mt-2 w-full origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black/5 focus:outline-none\">\n                                            <div className=\"px-1 py-1 \">\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Month' ? 'active' : ''}`} onClick={e => compareChange('Previous Month')}>Previous Month ({datepipeModel.date(previousMonth().start, user.companyDateFormat)} - {datepipeModel.date(previousMonth().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Year' ? 'active' : ''}`} onClick={e => compareChange('Previous Year')}>Previous Year(Same Date) ({datepipeModel.date(previousYear().start, user.companyDateFormat)} - {datepipeModel.date(previousYear().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Period' ? 'active' : ''}`} onClick={e => compareChange('Previous Period')}>Previous Period(Custom Dates) ({datepipeModel.date(previousPeriod().start, user.companyDateFormat)} - {datepipeModel.date(previousPeriod().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                            </div>\n\n\n                                        </Menu.Items>\n                                    </Transition>\n                                </Menu>\n\n\n                            </> : <></>}\n\n                        </div>\n\n                    </div>\n                </Menu.Items>\n            </Transition>\n        </Menu>\n\n    </>\n}\nexport default DateRangePicker","import ReactECharts from 'echarts-for-react';\nimport { useEffect, useState } from 'react';\nimport colorsModel from '../../../models/colors.model';\n\nconst LineChart = ({data=[],legends=[],hideLegends=false}) => {\n    const colors=colorsModel.list\n    const [overtimeLoader, setOvertimeLoader] = useState(false)\n\n    useEffect(()=>{\n        if(data?.length){\n            setOvertimeLoader(true)\n            setTimeout(()=>{\n                setOvertimeLoader(false)\n            },100)\n        }\n    },[data,legends])\n\n    const performanceLegends = [...legends.map(itm=>itm.label)]\n    const performanceOption = {\n        tooltip: {\n            trigger: 'axis'\n        },\n        legend:hideLegends?null:{\n          data: [...performanceLegends]\n          \n        },\n        toolbox: {\n            feature: {\n                saveAsImage: {}\n            }\n        },\n        grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n        },\n        xAxis: [\n            {\n                type: 'category',\n                boundaryGap: false,\n                data: [\n                    ...data.map(itm => itm.date)\n                ]\n            }\n        ],\n        yAxis: [\n            {\n                type: 'value'\n            }\n        ],\n        series: [\n            ...legends.map((itm,i)=>{\n                return {\n                    name: itm.label,\n                    type: 'line',\n                    itemStyle: {normal: {areaStyle: {type: 'default'},color: colors?.[i]}},\n                    data: [\n                        ...data.map(ditm => Number(ditm[itm.key]||0)),\n                    ]\n                }\n            })\n            \n        ]\n    };\n\n    return <>\n        {overtimeLoader ? <>\n            <div className='shine shineCard'></div>\n        </> : <>\n            <ReactECharts\n                option={performanceOption}\n                style={{ height: 400 }}\n            />\n        </>}\n    </>\n}\n\nexport default LineChart","import React, { Fragment } from \"react\";\nimport methodModel from \"../../../methods/methods\";\nimport \"./style.scss\";\nimport Select from \"react-select\";\nimport { Menu, Transition } from \"@headlessui/react\";\nimport { ChevronDownIcon } from \"@heroicons/react/20/solid\";\n\nconst Html = ({\n  options,\n  dynamicStyle = false,\n  className = \"\",\n  crossIcon,\n  inputValue = \"\",\n  selectedValues,\n  onInputChange = (e: any) => {},\n  handleChange = () => {},\n  displayValue,\n  id = \"\",\n  placeholder,\n  required = false,\n  disabled,\n  name = \"\",\n  noDefault,\n  hideDefaultPosition = false,\n  theme = \"normal\",\n}: any) => {\n  const categoryVal = () => {\n    let ext = options && options.find((item: any) => item.id == selectedValues);\n    return ext ? { value: ext.id, label: ext[displayValue] } : \"\";\n  };\n\n  return (\n    <>\n      {theme == \"search\" ? (\n        <>\n          <div className={`${className || \"capitalize\"}`}>\n            <Select\n              options={\n                options?.map((itm: any) => {\n                  return { value: itm.id, label: itm[displayValue] };\n                }) || []\n              }\n              \n              placeholder={placeholder}\n              value={categoryVal()}\n              isClearable={crossIcon}\n              name={name}\n              // formatOptionLabel=\"bordere\"\n              // inputValue={inputValue}\n              onInputChange={onInputChange}\n              onChange={(e: any) => handleChange(e?.value || \"\")}\n              className=\"text-gray-700 block text-sm options_classs\"\n              isDisabled={disabled ? true : false}\n              required={required}\n            />\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"selectDropdown\">\n            <input\n              type=\"hidden\"\n              name={name}\n              required={required}\n              value={selectedValues}\n            />\n            <div className=\"dropdown addDropdown\">\n              <Menu as=\"div\" className=\"relative list_box_active_state ml-auto\">\n                <div>\n                  <Menu.Button\n                    disabled={disabled}\n                    id={\"dropdownMenuButton\" + id}\n                    className={`capitalize inline-flex w-full border justify-start gap-x-1.5 rounded-md bg-white px-3 py-2.5 text-sm font-normal text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-200 ${className}`}\n                  >\n                    {selectedValues\n                      ? methodModel.find(options, selectedValues, \"id\")?.[\n                          displayValue\n                        ] || placeholder\n                      : placeholder}\n                    <ChevronDownIcon\n                      className=\"-mr-1 h-5 w-5 text-gray-400\"\n                      aria-hidden=\"true\"\n                    />\n                  </Menu.Button>\n                </div>\n\n                <Transition\n                  as={Fragment}\n                  enter=\"transition ease-out duration-100\"\n                  enterFrom=\"transform opacity-0 scale-95\"\n                  enterTo=\"transform opacity-100 scale-100\"\n                  leave=\"transition ease-in duration-75\"\n                  leaveFrom=\"transform opacity-100 scale-100\"\n                  leaveTo=\"transform opacity-0 scale-95\"\n                >\n                  <Menu.Items\n                    className={`${\n                      dynamicStyle ? \"\" : \"max-h-60\"\n                    }  focus:!outline-[#0065FF] focus:!outline text-sm absolute z-40 w-full min-w-[260px] ${\n                      className ? className : \" min-w-[260px]\"\n                    }  right-0 shadow-lg !py-2 !mt-1.5 overflow-auto bg-white  rounded-lg scrollbar capitalize`}\n                  >\n                    <div className=\"mt-2\">\n                      {hideDefaultPosition?null:\n                      <>\n                      {noDefault ? (\n                        <Menu.Item disabled={disabled}>\n                          {({ active }) => (\n                            <a\n                              className={\n                                selectedValues == \"\"\n                                  ? \"text-gray-700 block px-4 py-2 text-sm active\"\n                                  : \"text-gray-700 block px-4 py-2 text-sm\"\n                              }\n                              onClick={() => handleChange(\"\")}\n                            >\n                              {placeholder}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      ) : (\n                        <Menu.Item>\n                          {({ active }) => (\n                            <a\n                              className={\n                                selectedValues == \"\"\n                                  ? \"text-gray-700 block px-4 py-2 text-sm active\"\n                                  : \"text-gray-700 block px-4 py-2 text-sm\"\n                              }\n                              onClick={() => handleChange(\"\")}\n                            >\n                              {placeholder}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      )}\n                      </>}\n                      {options &&\n                        options.map((itm: any) => {\n                          return (\n                            <Menu.Item>\n                              {({ active }) => (\n                                <a\n                                  className={\n                                    selectedValues == itm.id\n                                      ? \"text-gray-700 block px-4 py-2 text-sm active\"\n                                      : \"text-gray-700 block px-4 py-2 text-sm\"\n                                  }\n                                  onClick={() => handleChange(itm.id)}\n                                  key={itm.id}\n                                >\n                                  {itm[displayValue]}\n                                </a>\n                              )}\n                            </Menu.Item>\n                          );\n                        })}\n                    </div>\n                  </Menu.Items>\n                </Transition>\n              </Menu>\n\n              {/* <button disabled={disabled} className={`text-white bg-[#0065FF] bg-[#0065FF] focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center dropdown-toggle removeBg ${className}`} type=\"button\" id={\"dropdownMenuButton\" + id} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {selectedValues ? methodModel.find(options, selectedValues, 'id')?.[displayValue] || placeholder : placeholder}\n                    </button>\n                    <div className=\"dropdown-menu shadow bg_hover\" aria-labelledby={\"dropdownMenuButton\" + id}>\n                        {noDefault ? <a className={selectedValues == '' ? 'text-gray-700 block px-4 py-2 text-sm active disabled' : 'text-gray-700 block px-4 py-2 text-sm disabled'} disabled>{placeholder}</a> : <a className={selectedValues == '' ? 'text-gray-700 block px-4 py-2 text-sm active' : 'text-gray-700 block px-4 py-2 text-sm'} onClick={() => handleChange('')}>{placeholder}</a>}\n                        {options && options.map(itm => {\n                            return <a className={selectedValues == itm.id ? 'text-gray-700 block px-4 py-2 text-sm active' : 'text-gray-700 block px-4 py-2 text-sm'} onClick={() => handleChange(itm.id)} key={itm.id}>{itm[displayValue]}</a>\n                        })}\n                    </div> */}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Html;\n","import React from \"react\";\nimport HtmlT from \"./html\";\n\nconst SelectDropdown = ({\n  intialValue,\n  options,\n  isSingle,\n  valueType = \"string\",\n  className = \"capitalize\",\n  inputValue = \"\",\n  onInputChange = (e: any) => {},\n  result,\n  crossIcon=true,\n  displayValue = \"name\",\n  id,\n  placeholder = \"Select Status\",\n  disabled = false,\n  name,\n  required = false,\n  theme = \"normal\",\n  hideDefaultPosition,\n}: any) => {\n  const handleChange = (e: any) => {\n    let v = e;\n    if (valueType == \"object\") {\n      v = options.find((itm: any) => itm.id == e);\n    }\n    result({ event: \"value\", value: v });\n  };\n\n  return (\n    <>\n      <HtmlT\n        id={id}\n        className={className}\n        name={name}\n        required={required}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        crossIcon={crossIcon}\n        theme={theme}\n        disabled={disabled}\n        placeholder={placeholder}\n        isSingle={isSingle}\n        displayValue={displayValue}\n        options={options}\n        selectedValues={intialValue}\n        handleChange={handleChange}\n        hideDefaultPosition={hideDefaultPosition}\n      />\n    </>\n  );\n};\n\nexport default SelectDropdown;\n"],"names":["_ref","totalAmounts","dates","names","type","myChartRef","useRef","chartOptions","setChartOptions","useState","renderGanttItem","params","api","categoryIndex","value","timeArrival","coord","barLength","barHeight","size","children","shape","x","y","width","height","style","renderAxisLabelItem","position","d","fill","text","textVerticalAlign","textAlign","textFill","onDragSwitchClick","model","useEffect","option","rawData","tooltip","animation","toolbox","left","top","itemSize","feature","myDrag","show","title","icon","onclick","dataZoom","xAxisIndex","start","end","grid","bottom","right","xAxis","axisLine","axisLabel","color","yAxis","axisTick","min","max","parkingApron","data","length","series","id","renderItem","dimensions","flight","encode","map","item","index","concat","makeOption","_jsx","ReactEcharts","ref","ProjectManagement","filters","setFilter","total","seTotal","setData","loading","setLoading","filter","f","page","arguments","undefined","_Fragment","_jsxs","Layout","className","SelectDropdown","displayValue","placeholder","intialValue","platform","result","e","theme","options","name","status","DateRangePicker","startDate","endDate","onChange","onClick","clear","search","LineChart","legends","label","key","count","date","GanttChart","dynamicStyle","disabled","isCompare","showcustom","showRange","user","useSelector","state","toggle","setToggle","range","setRange","previousYear","ssplit","split","esplit","year","Number","eyear","Date","datepipeModel","datetostring","ed","previousMonth","monthdate","setDate","previousPeriod","days","getDays","s","timeDifference","Math","floor","getDate","compareChange","v","compareStart","compareEnd","compare","Menu","as","Button","toggleChange","companyDateFormat","ChevronDownIcon","Transition","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","itm","current","month2","getFullYear","getMonth","rangeClick","DateRange","showSelectionPreview","editableDateInputs","blockDateChange","selection","moveRangeOnFirstSelection","ranges","Item","_ref2","active","_ref3","_ref4","hideLegends","colors","colorsModel","list","overtimeLoader","setOvertimeLoader","setTimeout","performanceLegends","performanceOption","trigger","legend","saveAsImage","containLabel","boundaryGap","i","itemStyle","normal","areaStyle","ditm","ReactECharts","_methodModel$find","crossIcon","inputValue","selectedValues","onInputChange","handleChange","required","noDefault","hideDefaultPosition","Select","categoryVal","ext","find","isClearable","isDisabled","methodModel","isSingle","valueType","HtmlT","event"],"sourceRoot":""}