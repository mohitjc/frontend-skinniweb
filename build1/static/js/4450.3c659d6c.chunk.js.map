{"version":3,"file":"static/js/4450.3c659d6c.chunk.js","mappings":"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","sources":["components/permissionUtils.js","Pages/Dashboard/index.jsx","components/Charts/Piechart.jsx","components/common/LineChart/index.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\n\nconst PermissionUtils=()=>{\n    const user = useSelector((state) => state.user);\n    const isAllow=(key)=>{\n        let value=false\n        let permissions=user.subRoleDetails?.permissions\n        if(permissions?.[key]) value=true\n        if(!user?.subRole) value=true\n        return value\n      }\n\n    return {\n        isAllow\n    }\n}\n\n\nexport default PermissionUtils","import { useEffect, useState } from \"react\";\nimport Layout from \"../../components/global/layout\";\nimport { IoHandRightOutline } from \"react-icons/io5\";\nimport PieChart from \"../../components/Charts/Piechart\";\nimport ApiClient from \"../../methods/api/apiClient\";\nimport LineChart from \"../../components/common/LineChart\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BarChart from \"../../components/common/BarChart\";\nimport loader from \"../../methods/loader\";\nimport datepipeModel from \"../../models/datepipemodel\";\nimport { subscription_success } from \"../actions/subscription\";\nimport { useNavigate } from \"react-router-dom\";\nimport PermissionUtils from \"../../components/permissionUtils\";\n\nconst Dashboard = () => {\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch()\n  let current = datepipeModel.datetostring(new Date());\n  let startDate = `${current.split(\"-\")[0]}-${current.split(\"-\")[1]}-01`;\n\n  let month2 = new Date(new Date().getFullYear(), new Date().getMonth() - 1, 1);\n  let endDate = datepipeModel.datetostring(month2);\n  const [filters, setFilter] = useState({\n    startDate: startDate,\n    endDate: endDate,\n  });\n  const [data, setData] = useState([]);\n  const [pieData, setPieData] = useState([]);\n  const {isAllow}=PermissionUtils()\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    getData();\n    getActivePlan()\n  }, []);\n  const getActivePlan = () => {\n    // let param = { userId: user?.id };\n    // ApiClient.get(\"subscription/active/subscription\").then((res) => {\n    //   if (res.success) {\n    //     let data=res.data\n    //     dispatch(subscription_success(data))\n    //   }\n    // });\n  };\n  const getData = (p = {}) => {\n    loader(true);\n    // let filter = { ...filters, ...p };\n    // if (filter.startDate) filter.startDate = `${filter.startDate}`;\n    // if (filter.endDate) filter.endDate = `${filter.endDate}`;\n\n    // ApiClient.get(\"dashboard/cashflow\", filter).then((res) => {\n    //   if (res.success) {\n    //     setData(\n    //       res.data.map((itm) => {\n    //         return itm;\n    //       })\n    //     );\n    //   }\n    //   loader(false);\n    // });\n    // ApiClient.get(\"dashboard/invoice-piechart\", filter).then((res) => {\n    //   if (res.success) {\n    //     setPieData(\n    //       res.data.map((itm) => {\n    //         return itm;\n    //       })\n    //     );\n    //   }\n    //   loader(false);\n    // });\n  };\n\n  const filter = (p = {}) => {\n    setFilter({ ...filters, ...p });\n    getData(p);\n  };\n\n  const clear = () => {\n    let p = {\n      startDate: \"\",\n      endDate: \"\",\n      status: \"\",\n    };\n    filter(p);\n  };\n\n  const userConnectionDetail = user.connectionsDetails?.length > 0\n  \n  return (\n    <>\n      <Layout>\n        {userConnectionDetail ? (\n          <>\n        <h4 className=\"text-2xl font-bold mb-3 flex items-center gap-2\">\n          <IoHandRightOutline className=\"text-3xl slow-shake text-[#0065FF]\" />\n          <span className=\"\">Hi,</span> {user?.fullName}\n        </h4>\n        <div className=\"flex gap-2 mt-3\">\n        </div>\n        <div className=\"shadow-box w-full bg-white rounded-lg mt-6 p-6\">\n          <div className=\"col-span-12 md:col-span-12\">\n            <div className=\"chatr_ones border border-gray-200 p-6 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <h5 className=\"font-semibold text-xl\">Revenue and Cash Flow</h5>\n                <div className=\"\"></div>\n              </div>\n              <LineChart\n                legends={[\n                  { label: \"Revenue\", key: \"revenue\" },\n                  { label: \"Cash Flow\", key: \"cash\" },\n                ]}\n                data={\n                  data && data?.length > 0\n                    ? data?.map((item) => ({\n                        revenue: item.revenue , \n                        cash: item.cash_flow, \n                        date: item.month, \n                      }))\n                    : [{ revenue: \"\", cash: \"\", date: \"\" }]\n                }\n              />\n            </div>\n          </div>\n          <div className=\"grid grid-cols-3 gap-4 mt-6\">\n            <div className=\"\">\n              <div className=\"chatr_ones border border-gray-200 p-6 rounded-lg\">\n                <div className=\"names_heads\">\n                  <h5 className=\"font-semibold text-xl\">Profit Margins</h5>\n                </div>\n                <BarChart\n                  // legends={[{ label: \"Profit\", key: \"profit\" }]}\n                  // data={[{ profit: 10, cash: 3, date: \"2020-12-04\" }]}\n                />\n              </div>\n            </div>\n            <div className=\"\">\n              <div className=\"chatr_ones border border-gray-200 p-6 rounded-lg\">\n                <div className=\"names_heads\">\n                  <h5 className=\"font-semibold text-xl\">Invoice Status</h5>\n                </div>\n                <PieChart\n                  title=\"Invoice Status\"\n                  data={ pieData && pieData.length > 0 ?\n                    pieData?.map((item) => ({\n                    value: item.value ,\n                    name: item.label,\n                  }))\n                  : (\"\")\n                }\n                />\n              </div>\n            </div>\n            <div className=\"\">\n              <div className=\"chatr_ones border border-gray-200 p-6 rounded-lg\">\n                <div className=\"names_heads\">\n                  <h5 className=\"font-semibold text-xl\">Resource Allocation</h5>\n                </div>\n                <BarChart\n                  // legends={[\n                  //   { label: \"Project 1\", key: \"project1\" },\n                  //   { label: \"Project 2\", key: \"project2\" },\n                  // ]}\n                  // data={[\n                  //   { project1: 10, project2: 3, date: \"2020-12-04\" },\n                  //   { project1: 23, project2: 25, date: \"2020-12-04\" },\n                  //   { project1: 12, project2: 43, date: \"2020-12-04\" },\n                  //   { project1: 67, project2: 23, date: \"2020-12-04\" },\n                  //   { project1: 65, project2: 27, date: \"2020-12-04\" },\n                  // ]}\n                  stack\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n          </>\n        ):(<>\n        <div className=\"flex items-center justify-center h-full\">\n        <div className=\"inner_part sm:mt-3 md:mt-3 shadow-box overflow-hidden rounded-lg bg-white   p-6 text-center mx-auto w-[600px] font-[600] text-[22px]\">\n          <img src=\"assets/img/connect.png\" className=\"w-[60px] mx-auto mb-4\"/>        \n          In order to view dashboard link APIs\n       <div> \n        {isAllow('addapiIntegration')?<>\n        <button className=\"text-white bg-[#0065FF] mt-3 mb-5  focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-4 py-2.5 text-center  mb-2 cursor-pointer\" onClick={() => navigate(\"/api\")} disabled={user?.activePlan === false}>Connect</button>\n        </>:<></>}\n       </div>\n        </div>\n        </div>\n        </>) }\n      </Layout>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport colorsModel from \"../../models/colors.model\";\n\nconst PieChart = ({data=[\n  { value: 20, name: \"Candies\" },\n  { value: 15, name: \"Gummies\" },\n  { value: 25, name: \"Chocolate\" },\n  { value: 10, name: \"Dried\" },\n  { value: 30, name: \"capsules\" },\n],title='Products'}) => {\n\n  // Options for the pie chart\n  const options = {\n    // title: {\n    //   text: \"\",\n    //   left: \"center\",\n    // },\n    tooltip: {\n      trigger: \"item\",\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n    },\n    series: [\n      {\n        name: title,\n        type: \"pie\",\n        radius: \"55%\",\n        center: [\"50%\", \"60%\"],\n        data: data,\n        color:colorsModel.list,\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: \"rgba(0, 0, 0, 0.5)\",\n          },\n        },\n      },\n    ],\n  };\n\n  return <ReactEcharts option={options} style={{ height: \"400px\" }} />;\n};\n\nexport default PieChart;\n","import ReactECharts from 'echarts-for-react';\nimport { useEffect, useState } from 'react';\nimport colorsModel from '../../../models/colors.model';\n\nconst LineChart = ({data=[],legends=[],hideLegends=false}) => {\n    const colors=colorsModel.list\n    const [overtimeLoader, setOvertimeLoader] = useState(false)\n\n    useEffect(()=>{\n        if(data?.length){\n            setOvertimeLoader(true)\n            setTimeout(()=>{\n                setOvertimeLoader(false)\n            },100)\n        }\n    },[data,legends])\n\n    const performanceLegends = [...legends.map(itm=>itm.label)]\n    const performanceOption = {\n        tooltip: {\n            trigger: 'axis'\n        },\n        legend:hideLegends?null:{\n          data: [...performanceLegends]\n          \n        },\n        toolbox: {\n            feature: {\n                saveAsImage: {}\n            }\n        },\n        grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n        },\n        xAxis: [\n            {\n                type: 'category',\n                boundaryGap: false,\n                data: [\n                    ...data.map(itm => itm.date)\n                ]\n            }\n        ],\n        yAxis: [\n            {\n                type: 'value'\n            }\n        ],\n        series: [\n            ...legends.map((itm,i)=>{\n                return {\n                    name: itm.label,\n                    type: 'line',\n                    itemStyle: {normal: {areaStyle: {type: 'default'},color: colors?.[i]}},\n                    data: [\n                        ...data.map(ditm => Number(ditm[itm.key]||0)),\n                    ]\n                }\n            })\n            \n        ]\n    };\n\n    return <>\n        {overtimeLoader ? <>\n            <div className='shine shineCard'></div>\n        </> : <>\n            <ReactECharts\n                option={performanceOption}\n                style={{ height: 400 }}\n            />\n        </>}\n    </>\n}\n\nexport default LineChart"],"names":["PermissionUtils","user","useSelector","state","isAllow","key","_user$subRoleDetails","value","permissions","subRoleDetails","subRole","Dashboard","_user$connectionsDeta","useDispatch","current","datepipeModel","datetostring","Date","startDate","split","month2","getFullYear","getMonth","endDate","filters","setFilter","useState","data","setData","pieData","setPieData","navigate","useNavigate","useEffect","getData","getActivePlan","loader","userConnectionDetail","connectionsDetails","length","_jsx","_Fragment","children","Layout","_jsxs","className","IoHandRightOutline","fullName","LineChart","legends","label","map","item","revenue","cash","cash_flow","date","month","BarChart","PieChart","title","name","stack","src","onClick","disabled","activePlan","_ref","options","tooltip","trigger","formatter","series","type","radius","center","color","colorsModel","list","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","ReactEcharts","option","style","height","hideLegends","colors","overtimeLoader","setOvertimeLoader","setTimeout","performanceLegends","itm","performanceOption","legend","toolbox","feature","saveAsImage","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","i","normal","areaStyle","ditm","Number","ReactECharts"],"sourceRoot":""}