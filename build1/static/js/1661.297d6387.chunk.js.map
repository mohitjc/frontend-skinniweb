{"version":3,"file":"static/js/1661.297d6387.chunk.js","mappings":"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","sources":["Pages/CRM/html.jsx","Pages/CRM/shared.js","components/Table/index.jsx","components/common/DateRangePicker/index.js","components/common/SelectDropdown/html.tsx","components/common/SelectDropdown/index.tsx","models/datepipemodel.js","Pages/CRM/style.scss"],"sourcesContent":["import React from \"react\";\nimport Layout from \"../../components/global/layout\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"../../components/Table\";\nimport SelectDropdown from \"../../components/common/SelectDropdown\";\nimport shared from \"./shared\";\nimport DateRangePicker from \"../../components/common/DateRangePicker\";\nimport { FiPlus } from \"react-icons/fi\";\nconst Html = ({\n  sorting,\n  filter,\n  edit,\n  view,\n  statusChange,\n  pageChange,\n  count,\n  deleteItem,\n  clear,\n  filters,\n  setFilter,\n  loaging,\n  data,\n  changestatus,\n  isAllow,\n  total = { total },\n  sortClass,\n  getRolesData,\n  uploadFile,\n}) => {\n  const columns = [\n    \n  ];\n\n\n  return (\n    <Layout>\n      <div className=\"flex flex-wrap justify-between items-center gap-y-4\">\n        <div>\n          <h3 className=\"text-2xl font-semibold text-[#111827]\">\n            {\" \"}\n            {shared.title}\n          </h3>\n          <p class=\"text-sm font-normal text-[#75757A]\">\n            Here you can see all about your {shared.title}\n          </p>\n        </div>\n\n        <a id=\"downloadFile\"></a>\n\n        <div className=\"flex\">\n          {isAllow(`add${shared.check}`) ? (\n            <Link\n              className=\"bg-primary leading-10 ms-3 h-10 flex items-center shadow-btn px-6 hover:opacity-80 text-sm text-white rounded-lg gap-2\"\n              to={`/${shared.url}/add`}\n            >\n              <FiPlus className=\"text-xl text-white\" /> Add {shared.addTitle}\n            </Link>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n\n      <div className=\"shadow-box w-full bg-white rounded-lg mt-6\">\n        <div className=\"flex p-4 items-center flex-wrap\">\n          <form\n            class=\"flex items-center max-w-sm\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              filter();\n            }}\n          >\n            <label for=\"simple-search\" class=\"sr-only\">\n              Search\n            </label>\n            <div class=\"relative w-full\">\n              <input\n                type=\"text\"\n                id=\"simple-search\"\n                value={filters.search}\n                onChange={(e) => {\n                  setFilter({ ...filters, search: e.target.value });\n                }}\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-orange-500 focus:border-[#0065FF]block w-full ps-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-orange-500 dark:focus:border-orange-500 pr-10\"\n                placeholder=\"Search\"\n              />\n              {filters?.search && (\n                <i\n                  className=\"fa fa-times absolute right-4 top-1/2 -translate-y-1/2 text-gray-500 text-sm\"\n                  aria-hidden=\"true\"\n                  onClick={(e) => clear()}\n                ></i>\n              )}\n            </div>\n            <button\n              type=\"submit\"\n              class=\"p-2.5 m-2 text-sm font-medium text-white bg-blue-700 rounded-lg border border-[#0065FF] focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n            >\n              <svg\n                class=\"w-4 h-4\"\n                aria-hidden=\"true\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path\n                  stroke=\"currentColor\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\"\n                />\n              </svg>\n              <span class=\"sr-only\">Search</span>\n            </button>\n          </form>\n\n          <div className=\"flex gap-2 ml-auto\">\n            <SelectDropdown\n              id=\"statusDropdown\"\n              displayValue=\"name\"\n              placeholder=\"All Status\"\n              intialValue={filters.status}\n              result={(e) => {\n                changestatus(e.value);\n              }}\n              theme=\"search\"\n              options={shared.status}\n            />\n\n            <DateRangePicker\n            value={{\n              startDate:filters.startDate,\n              endDate:filters.endDate,\n            }}\n            onChange={e=>{\n              filter({\n                startDate:e.startDate,\n                endDate:e.endDate,\n              })\n            }}\n            />\n          \n            {filters.status||filters.startDate||filters.platform? (\n              <>\n                <button\n                  className=\"bg-primary leading-10 h-10 inline-block shadow-btn px-6 hover:opacity-80 text-sm text-white rounded-lg\"\n                  onClick={() => clear()}\n                >\n                  Reset\n                </button>\n              </>\n            ) : (\n              <></>\n            )}\n          </div>\n        </div>\n\n        {!loaging ? (\n          <>\n          <div className=\"px-4 pb-4\">\n\n          \n            <Table\n              className=\"\"\n              data={data}\n              columns={columns}\n              page={filters.page}\n              count={filters.count}\n              filters={filters}\n              total={total}\n              result={(e) => {\n                if (e.event == \"page\") pageChange(e.value);\n                if (e.event == \"sort\") {\n                  sorting(e.value);\n                  sortClass(e.value);\n                }\n                if (e.event == \"count\") count(e.value);\n              }}\n            />\n            </div>\n          </>\n        ) : (\n          <></>\n        )}\n\n        {loaging ? (\n          <div className=\"text-center py-4\">\n            <img src=\"/assets/img/loader.gif\" className=\"pageLoader\" />\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Html;\n","const status=[\n  { id: 'VOIDED', name: 'Voided' },\n  { id: 'PAID', name: 'Paid' },\n  { id: 'AUTHORISED', name: 'Authorized' },\n  { id: 'DELETED', name: 'Deleted' }\n]\nconst shared = {\n  check: \"accounting\",\n  title: \"Hubspot\",\n  addTitle: \"Account Transaction\",\n  url: \"transactions\",\n  status:status,\n};\n\nexport default shared;\n","import React, { useEffect, useState } from \"react\";\nimport { HiOutlineArrowDown } from \"react-icons/hi\";\nimport Pagination from \"react-pagination-js\";\n\nconst Table = ({\n  className = \"\",\n  data = [],\n  theme = \"table\",\n  ListHtml = (e) => {},\n  rowClass = \"\",\n  columns = [],\n  topHead = [],\n  count = 50,\n  total = 0,\n  page = 1,\n  result = (e) => {},\n  nodata = \"Data Not Found\",\n  filters,\n}) => {\n  const [pageSize, setPageSize] = useState(count);\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(parseInt(e.target.value));\n    result({ event: \"count\", value: parseInt(e.target.value) });\n  };\n\n  const handlePaginate = (e) => {\n    result({ event: \"page\", value: e });\n  };\n\n  const view = (row) => {\n    result({ event: \"row\", row: row });\n  };\n\n  const headclick = (itm) => {\n    if (itm.sort) {\n      result({ event: \"sort\", value: itm.key });\n    }\n  };\n\n  // Generate options array based on the total value\n  const generateOptions = () => {\n    const options = [];\n    for (let i = 10; i <= total; i += 10) {\n      options.push(i);\n    }\n    return options;\n  };\n\n  return (\n    <>\n      <div className={`${className}`}>\n        {total ? (\n          <>\n            {/* Table view */}\n            {theme === \"table\" && (\n              <div className=\"relative overflow-x-auto border border-[#eee] sm:rounded-lg \">\n                <table className=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\n                  <thead className=\"text-xs text-gray-700 capitalize bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n                    {/* Top header */}\n                    {topHead?.length ? (\n                      <tr className=\"bg-gray-200 border-b border-black\">\n                        {topHead.map((itm, i) => (\n                          <th\n                            scope=\"col\"\n                            className={`px-2 py-3 text-center ${\n                              topHead.length - 1 === i\n                                ? \"\"\n                                : \"border-r border-black\"\n                            }`}\n                            colSpan={itm?.colSpan || 0}\n                            key={i}\n                          >\n                            {itm.name}\n                          </th>\n                        ))}\n                      </tr>\n                    ) : null}\n                    {/* Main header */}\n                    <tr>\n                      {columns.map((itm) => (\n                        <th\n                          scope=\"col\"\n                          className={`px-2 py-3   ${\n                            itm.sort ? \"cursor-pointer\" : \"\"\n                          }`}\n                          key={itm.key}\n                        >\n                          <span className=\"inline-flex items-center gap-1\">\n                            <span> {itm.name} </span>\n                            {itm.sort ? (\n                              <>\n                                <span className=\"\" onClick={() => headclick(itm)}>\n                                  <HiOutlineArrowDown className=\" inline text-sm\" />\n                                </span>\n                              </>\n                            ) : null}\n                          </span>\n                        </th>\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {/* Table data */}\n                    {data.map((itm) => (\n                      <tr\n                        onClick={() => view(itm)}\n                        className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n                        key={itm.id}\n                      >\n                        {columns.map((citm) => (\n                          <td className={`px-2 py-4 ${citm.className}`} key={citm.key}>\n                            {citm.render(itm) || \"--\"}\n                          </td>\n                        ))}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n\n            {/* List view */}\n            {theme === \"list\" && (\n              <div className={`rowClass ${rowClass}`}>\n                {data.map((itm, index) => (\n                  <ListHtml key={index} row={itm} />\n                ))}\n              </div>\n            )}\n\n            {/* Pagination */}\n            {count < total && (\n              <div className=\"paginationWrapper flex items-center justify-between mt-15 px-4\">\n                <p className=\"w-96 text-sm text-gray-500\">\n                  Show{\" \"}\n                  <select\n                    value={pageSize}\n                    onChange={handlePageSizeChange}\n                    className=\"border bg-[#0065FF] rounded-md px-2 py-1\"\n                  >\n                    {/* Dynamically generated options */}\n                    {generateOptions().map((option) => (\n                      <option key={option} value={option}>\n                        {option}\n                      </option>\n                    ))}\n                  </select>{\" \"}\n                  from {total} data\n                </p>\n                <Pagination\n                  currentPage={page}\n                  totalSize={total}\n                  sizePerPage={pageSize}\n                  changeCurrentPage={handlePaginate}\n                />\n              </div>\n            )}\n          </>\n        ) : (\n          // <div className=\"p-4 text-center\">{nodata}</div>\n          <div className=\"\">\n          <div className=\"relative overflow-x-auto border border-[#eee] sm:rounded-lg \">\n           \n            <table className=\"xl:w-full lg:w-[1300px] md:w-[1200px] w-[1200px] text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\n              <thead className=\"text-xs text-gray-700 capitalize bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n                {/* Top header */}\n                {topHead?.length ? (\n                  <tr className=\"bg-gray-200 border-b border-black\">\n                    {topHead.map((itm, i) => (\n                      <th\n                        scope=\"col\"\n                        className={`px-2 py-3 text-center ${\n                          topHead.length - 1 === i\n                            ? \"\"\n                            : \"border-r border-black\"\n                        }`}\n                        colSpan={itm?.colSpan || 0}\n                        key={i}\n                      >\n                        {itm.name}\n                      </th>\n                    ))}\n                  </tr>\n                ) : null}\n                {/* Main header */}\n                <tr>\n                  {columns.map((itm) => (\n                    <th\n                      scope=\"col\"\n                      className={`px-2 py-3   ${\n                        itm.sort ? \"cursor-pointer\" : \"\"\n                      }`}\n                      onClick={() => headclick(itm)}\n                      key={itm.key}\n                    >\n                      <span className=\"inline-flex items-center gap-1\">\n                        <span> {itm.name} </span>\n                        {itm.sort ? (\n                          <>\n                            <span className=\"\">\n                              <HiOutlineArrowDown className=\" inline text-sm\" />\n                            </span>\n                          </>\n                        ) : null}\n                      </span>\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td colspan=\"7\">\n                <div className=\"p-4 text-center\">\n                  <img src =\"assets/img/no-data.png\" alt=\"\" className=\"w-[150px] mx-auto \"/>\n                  {nodata}\n                  </div>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport { DateRangePicker as DateRange } from 'react-date-range';\nimport datepipeModel from \"../../../models/datepipemodel\";\nimport { useSelector } from 'react-redux';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport \"./style.scss\";\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { ChevronDownIcon } from '@heroicons/react/20/solid'\n\nconst DateRangePicker = ({ value, onChange, dynamicStyle = false,\n    className = null, disabled = false, title = '', placeholder = '', isCompare = false, \n    showcustom = true,\n    showRange = true,\n}) => {\n    const user = useSelector((state) => state.user)\n    const [toggle, setToggle] = useState(false)\n    const [range, setRange] = useState('')\n\n    const rangeList = [\n        { id: 'This Month', name: \"This Month\" },\n        { id: 'This Year', name: \"This Year\" },\n        { id: 'Last Month', name: \"Last Month\" },\n        { id: 'Last Year', name: \"Last Year\" },\n        { id: '', name: \"Custom\" }\n    ]\n\n    const blockDateChange = (e) => {\n        let v={\n            ...value, ...e, compare: '' \n        }\n\n        v.startDate=datepipeModel.datetostring(v.startDate)\n        v.endDate=datepipeModel.datetostring(v.endDate)\n        \n        onChange({ ...v })\n        if (v.startDate != v.endDate) {\n            setToggle(false)\n        }\n    }\n\n    const toggleChange = () => {\n        setToggle(!toggle)\n    }\n\n    const getBlockValue = () => {\n        let v = {\n            startDate: value['startDate'] ? new Date(value['startDate']) : new Date(),\n            endDate: value['endDate'] ? new Date(value['endDate']) : new Date(),\n            key: 'selection'\n        }\n        return [v]\n    }\n\n    const dropdownMenuClick = (e) => {\n        // let el = document.getElementById(`daterangeDropdown-${id}`)\n        // el.click()\n    }\n\n    const rangeClick = (e) => {\n        let startDate = ''\n        let endDate = ''\n\n        if (e == 'Last Month') {\n            let current = new Date()\n            let monthdate = current.setDate(0)\n            monthdate = datepipeModel.datetostring(monthdate)\n            startDate = `${monthdate.split('-')[0]}-${monthdate.split('-')[1]}-01`\n            endDate = monthdate\n\n        } else if (e == 'This Month') {\n            let current = datepipeModel.datetostring(new Date())\n            startDate = `${current.split('-')[0]}-${current.split('-')[1]}-01`\n\n            let month2 = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n\n        else if (e == 'This Year') {\n            let current = datepipeModel.datetostring(new Date())\n            startDate = `${current.split('-')[0]}-01-01`\n\n            let month2 = new Date(new Date().getFullYear() + 1, 0, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n        else if (e == 'Last Year') {\n            let current = new Date()\n            startDate = `${current.getFullYear() - 1}-01-01`\n            let month2 = new Date(current.getFullYear(), 0, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n        setRange(e)\n        onChange({ ...value, startDate, endDate, compare: '' })\n        if (e != '') {\n            setToggle(false)\n        }\n    }\n\n    const getDays = (s, e) => {\n        // Define two date objects\n        const startDate = new Date(s); // Replace with your start date\n        const endDate = new Date(e);   // Replace with your end date\n        // Calculate the time difference in milliseconds\n        const timeDifference = endDate - startDate;\n        // Convert milliseconds to days\n        const daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n        return daysDifference\n    }\n\n    const previousYear = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            let ssplit = value.startDate.split('-')\n            let esplit = value.endDate.split('-')\n            let year = Number(ssplit[0])\n            let eyear = Number(esplit[0])\n\n            let d = new Date(`${year - 1}-${ssplit[1]}-${ssplit[2]}`)\n            start = datepipeModel.datetostring(d)\n\n            let ed = new Date(`${eyear - 1}-${esplit[1]}-${esplit[2]}`)\n            end = datepipeModel.datetostring(ed)\n        }\n        return { start, end }\n    }\n\n    const previousMonth = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            // let sMonth=new Date(value.startDate).getMonth()\n            // start=new Date(value.startDate).setMonth(sMonth-1)\n            // start=datepipeModel.datetostring(start)\n\n            // let eMonth=new Date(value.endDate).getMonth()\n            // end=new Date(value.endDate).setMonth(eMonth-1)\n            // end=datepipeModel.datetostring(end)\n\n            let current = new Date(value.startDate)\n            let monthdate = current.setDate(0)\n            monthdate = datepipeModel.datetostring(monthdate)\n            start = `${monthdate.split('-')[0]}-${monthdate.split('-')[1]}-01`\n            end = monthdate\n        }\n        return { start, end }\n    }\n\n    const previousPeriod = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            let days = getDays(value.startDate, value.endDate) + 1\n\n            let d = new Date(value.startDate)\n            d.setDate(d.getDate() - days)\n            start = datepipeModel.datetostring(d)\n\n            let ed = new Date(value.startDate)\n            ed.setDate(ed.getDate() - 1)\n            end = datepipeModel.datetostring(ed)\n        }\n        return { start, end }\n    }\n\n    const compareChange = (e) => {\n        let start = ''\n        let end = ''\n        if (e == 'Previous Period') {\n            start = previousPeriod().start\n            end = previousPeriod().end\n        } else if (e == 'Previous Year') {\n            start = previousYear().start\n            end = previousYear().end\n        } else if (e == 'Previous Month') {\n            start = previousMonth().start\n            end = previousMonth().end\n        }\n\n        let v = {\n            ...value,\n            compareStart: start,\n            compareEnd: end,\n            compare: e\n        }\n        setToggle(false)\n        onChange({ ...v })\n    }\n\n    return <>\n\n\n        <Menu as=\"div\" className=\"relative list_box_active_state \" title={title}>\n            <div>\n\n                <Menu.Button title={title} disabled={disabled} onClick={toggleChange} className=\" set-bg flex w-full bg-primary justify-center border gap-x-1.5 rounded-md  px-3 py-2.5 text-sm font-normal text-white shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\">\n                    {!value?.startDate || !value?.endDate ? <>{placeholder || 'Start Date - End Date'}</> : <>{datepipeModel.date(value?.startDate, user?.companyDateFormat)} -  {datepipeModel.date(value?.endDate, user?.companyDateFormat)}</>}\n                    <ChevronDownIcon className=\"-mr-1 h-5 w-5 text-white-400\" aria-hidden=\"true\" />\n\n\n                </Menu.Button>\n            </div>\n\n            <Transition\n                as={Fragment}\n                enter=\"transition ease-out duration-100\"\n                enterFrom=\"transform opacity-0 scale-95\"\n                enterTo=\"transform opacity-100 scale-100\"\n                leave=\"transition ease-in duration-75\"\n                leaveFrom=\"transform opacity-100 scale-100\"\n                leaveTo=\"transform opacity-0 scale-95\"\n            >\n                <Menu.Items className={`${dynamicStyle ? \"\" : \"\"}   focus:!outline-[#0065FF] focus:!outline text-sm absolute z-40 ${className ? className : \" min-w-[360px]\"\n                    }  right-0 shadow-lg !py-2 !mt-3 overflow-auto bg-white  rounded-lg scrollbar`}>\n                    <div className=\"fffff\">\n                        <div className=\"\" >\n                            {/* <p className=\"text-center px-2\">{!value?.startDate || !value?.endDate ? <>{placeholder || 'Start Date - End Date'}</> : <>{datepipeModel.date(value?.startDate, user?.companyDateFormat)} -  {datepipeModel.date(value?.endDate, user?.companyDateFormat)}</>}</p> */}\n                           \n                           {showRange?<>\n                            <div className=\"  row-gap-2 column-gap-2 whitespace-nowrap flex p-2 mb-0\">\n                                {rangeList.map(itm => {\n                                    return showcustom == false && itm.name == \"Custom\" ? null : <button className={`btn ${range == itm.id ? 'bg-[#0065FF] text-white' : 'bg-transparent hover:border-gray-400 border-1 border-gray-400'}`} type=\"button\" onClick={e => rangeClick(itm.id)}>{itm.name}</button>\n                                })}\n                            </div>\n                           </>:<></>}\n                           \n\n                            {range || showcustom == false ? <></> : <>\n                                <div className=\"w-full customcalender\">\n                                    <DateRange\n                                        showSelectionPreview={false}\n                                        editableDateInputs={true}\n                                        onChange={e => blockDateChange(e.selection)}\n                                        moveRangeOnFirstSelection={false}\n                                        ranges={getBlockValue()}\n                                    />\n                                </div>\n                            </>}\n\n\n                            {isCompare ? <>\n\n                                <Menu as=\"div\" className=\"relative \">\n                                    <div className=\"text-center\">\n                                        <Menu.Button className=\"inline-flex w-full justify-center border gap-x-1.5 rounded-md bg-white px-3 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\">\n                                            Compare\n                                            <ChevronDownIcon\n                                                className=\"-mr-1 ml-2 h-5 w-5 text-violet-200 hover:text-violet-100\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Menu.Button>\n                                    </div>\n                                    <Transition\n                                        as={Fragment}\n                                        enter=\"transition ease-out duration-100\"\n                                        enterFrom=\"transform opacity-0 scale-95\"\n                                        enterTo=\"transform opacity-100 scale-100\"\n                                        leave=\"transition ease-in duration-75\"\n                                        leaveFrom=\"transform opacity-100 scale-100\"\n                                        leaveTo=\"transform opacity-0 scale-95\"\n                                    >\n                                        <Menu.Items className=\"absolute right-0 mt-2 w-full origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black/5 focus:outline-none\">\n                                            <div className=\"px-1 py-1 \">\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Month' ? 'active' : ''}`} onClick={e => compareChange('Previous Month')}>Previous Month ({datepipeModel.date(previousMonth().start, user.companyDateFormat)} - {datepipeModel.date(previousMonth().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Year' ? 'active' : ''}`} onClick={e => compareChange('Previous Year')}>Previous Year(Same Date) ({datepipeModel.date(previousYear().start, user.companyDateFormat)} - {datepipeModel.date(previousYear().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Period' ? 'active' : ''}`} onClick={e => compareChange('Previous Period')}>Previous Period(Custom Dates) ({datepipeModel.date(previousPeriod().start, user.companyDateFormat)} - {datepipeModel.date(previousPeriod().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                            </div>\n\n\n                                        </Menu.Items>\n                                    </Transition>\n                                </Menu>\n\n\n                            </> : <></>}\n\n                        </div>\n\n                    </div>\n                </Menu.Items>\n            </Transition>\n        </Menu>\n\n    </>\n}\nexport default DateRangePicker","import React, { Fragment } from \"react\";\nimport methodModel from \"../../../methods/methods\";\nimport \"./style.scss\";\nimport Select from \"react-select\";\nimport { Menu, Transition } from \"@headlessui/react\";\nimport { ChevronDownIcon } from \"@heroicons/react/20/solid\";\n\nconst Html = ({\n  options,\n  dynamicStyle = false,\n  className = \"\",\n  crossIcon,\n  inputValue = \"\",\n  selectedValues,\n  onInputChange = (e: any) => {},\n  handleChange = () => {},\n  displayValue,\n  id = \"\",\n  placeholder,\n  required = false,\n  disabled,\n  name = \"\",\n  noDefault,\n  hideDefaultPosition = false,\n  theme = \"normal\",\n}: any) => {\n  const categoryVal = () => {\n    let ext = options && options.find((item: any) => item.id == selectedValues);\n    return ext ? { value: ext.id, label: ext[displayValue] } : \"\";\n  };\n\n  return (\n    <>\n      {theme == \"search\" ? (\n        <>\n          <div className={`${className || \"capitalize\"}`}>\n            <Select\n              options={\n                options?.map((itm: any) => {\n                  return { value: itm.id, label: itm[displayValue] };\n                }) || []\n              }\n              \n              placeholder={placeholder}\n              value={categoryVal()}\n              isClearable={crossIcon}\n              name={name}\n              // formatOptionLabel=\"bordere\"\n              // inputValue={inputValue}\n              onInputChange={onInputChange}\n              onChange={(e: any) => handleChange(e?.value || \"\")}\n              className=\"text-gray-700 block text-sm options_classs\"\n              isDisabled={disabled ? true : false}\n              required={required}\n            />\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"selectDropdown\">\n            <input\n              type=\"hidden\"\n              name={name}\n              required={required}\n              value={selectedValues}\n            />\n            <div className=\"dropdown addDropdown\">\n              <Menu as=\"div\" className=\"relative list_box_active_state ml-auto\">\n                <div>\n                  <Menu.Button\n                    disabled={disabled}\n                    id={\"dropdownMenuButton\" + id}\n                    className={`capitalize inline-flex w-full border justify-start gap-x-1.5 rounded-md bg-white px-3 py-2.5 text-sm font-normal text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-200 ${className}`}\n                  >\n                    {selectedValues\n                      ? methodModel.find(options, selectedValues, \"id\")?.[\n                          displayValue\n                        ] || placeholder\n                      : placeholder}\n                    <ChevronDownIcon\n                      className=\"-mr-1 h-5 w-5 text-gray-400\"\n                      aria-hidden=\"true\"\n                    />\n                  </Menu.Button>\n                </div>\n\n                <Transition\n                  as={Fragment}\n                  enter=\"transition ease-out duration-100\"\n                  enterFrom=\"transform opacity-0 scale-95\"\n                  enterTo=\"transform opacity-100 scale-100\"\n                  leave=\"transition ease-in duration-75\"\n                  leaveFrom=\"transform opacity-100 scale-100\"\n                  leaveTo=\"transform opacity-0 scale-95\"\n                >\n                  <Menu.Items\n                    className={`${\n                      dynamicStyle ? \"\" : \"max-h-60\"\n                    }  focus:!outline-[#0065FF] focus:!outline text-sm absolute z-40 w-full min-w-[260px] ${\n                      className ? className : \" min-w-[260px]\"\n                    }  right-0 shadow-lg !py-2 !mt-1.5 overflow-auto bg-white  rounded-lg scrollbar capitalize`}\n                  >\n                    <div className=\"mt-2\">\n                      {hideDefaultPosition?null:\n                      <>\n                      {noDefault ? (\n                        <Menu.Item disabled={disabled}>\n                          {({ active }) => (\n                            <a\n                              className={\n                                selectedValues == \"\"\n                                  ? \"text-gray-700 block px-4 py-2 text-sm active\"\n                                  : \"text-gray-700 block px-4 py-2 text-sm\"\n                              }\n                              onClick={() => handleChange(\"\")}\n                            >\n                              {placeholder}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      ) : (\n                        <Menu.Item>\n                          {({ active }) => (\n                            <a\n                              className={\n                                selectedValues == \"\"\n                                  ? \"text-gray-700 block px-4 py-2 text-sm active\"\n                                  : \"text-gray-700 block px-4 py-2 text-sm\"\n                              }\n                              onClick={() => handleChange(\"\")}\n                            >\n                              {placeholder}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      )}\n                      </>}\n                      {options &&\n                        options.map((itm: any) => {\n                          return (\n                            <Menu.Item>\n                              {({ active }) => (\n                                <a\n                                  className={\n                                    selectedValues == itm.id\n                                      ? \"text-gray-700 block px-4 py-2 text-sm active\"\n                                      : \"text-gray-700 block px-4 py-2 text-sm\"\n                                  }\n                                  onClick={() => handleChange(itm.id)}\n                                  key={itm.id}\n                                >\n                                  {itm[displayValue]}\n                                </a>\n                              )}\n                            </Menu.Item>\n                          );\n                        })}\n                    </div>\n                  </Menu.Items>\n                </Transition>\n              </Menu>\n\n              {/* <button disabled={disabled} className={`text-white bg-[#0065FF] bg-[#0065FF] focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center dropdown-toggle removeBg ${className}`} type=\"button\" id={\"dropdownMenuButton\" + id} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {selectedValues ? methodModel.find(options, selectedValues, 'id')?.[displayValue] || placeholder : placeholder}\n                    </button>\n                    <div className=\"dropdown-menu shadow bg_hover\" aria-labelledby={\"dropdownMenuButton\" + id}>\n                        {noDefault ? <a className={selectedValues == '' ? 'text-gray-700 block px-4 py-2 text-sm active disabled' : 'text-gray-700 block px-4 py-2 text-sm disabled'} disabled>{placeholder}</a> : <a className={selectedValues == '' ? 'text-gray-700 block px-4 py-2 text-sm active' : 'text-gray-700 block px-4 py-2 text-sm'} onClick={() => handleChange('')}>{placeholder}</a>}\n                        {options && options.map(itm => {\n                            return <a className={selectedValues == itm.id ? 'text-gray-700 block px-4 py-2 text-sm active' : 'text-gray-700 block px-4 py-2 text-sm'} onClick={() => handleChange(itm.id)} key={itm.id}>{itm[displayValue]}</a>\n                        })}\n                    </div> */}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Html;\n","import React from \"react\";\nimport HtmlT from \"./html\";\n\nconst SelectDropdown = ({\n  intialValue,\n  options,\n  isSingle,\n  valueType = \"string\",\n  className = \"capitalize\",\n  inputValue = \"\",\n  onInputChange = (e: any) => {},\n  result,\n  crossIcon=true,\n  displayValue = \"name\",\n  id,\n  placeholder = \"Select Status\",\n  disabled = false,\n  name,\n  required = false,\n  theme = \"normal\",\n  hideDefaultPosition,\n}: any) => {\n  const handleChange = (e: any) => {\n    let v = e;\n    if (valueType == \"object\") {\n      v = options.find((itm: any) => itm.id == e);\n    }\n    result({ event: \"value\", value: v });\n  };\n\n  return (\n    <>\n      <HtmlT\n        id={id}\n        className={className}\n        name={name}\n        required={required}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        crossIcon={crossIcon}\n        theme={theme}\n        disabled={disabled}\n        placeholder={placeholder}\n        isSingle={isSingle}\n        displayValue={displayValue}\n        options={options}\n        selectedValues={intialValue}\n        handleChange={handleChange}\n        hideDefaultPosition={hideDefaultPosition}\n      />\n    </>\n  );\n};\n\nexport default SelectDropdown;\n","const monthArray = [\n    { value: 'Jan',name:'January', id: 0 },\n    { value: 'Feb',name:'February', id: 1 },\n    { value: 'Mar',name:'March', id: 2 },\n    { value: 'Apr',name:'April', id: 3 },\n    { value: 'May',name:'May', id: 4 },\n    { value: 'Jun',name:'Jun', id: 5 },\n    { value: 'Jul',name:'July', id: 6 },\n    { value: 'Aug',name:'Auguest', id: 7 },\n    { value: 'Sep',name:'September', id: 8 },\n    { value: 'Oct',name:'October', id: 9 },\n    { value: 'Nov',name:'November', id: 10 },\n    { value: 'Dec',name:'December', id: 11 }\n]\n\nconst monthname = (id) => {\n    let ext = monthArray.find(itm => itm.id === id)\n    return ext?ext?.name:'--'\n}\n\nconst monthfind = (id) => {\n    let value = 0\n    let ext = monthArray.find(itm => itm.id === id)\n    if (ext) value = ext.value\n    return value\n}\n\nconst getWeekDate = (date = new Date(), week = 1) => {\n    let d = new Date(date)\n    let month = d.getMonth()\n    month = String(month + 1)\n\n    let value = 1\n    if (week == 1) value = 1\n    else if (week > 1) value = 7 * (week - 1)\n    if (value > 30) value = 30\n\n    return new Date(`${d.getFullYear()}-${month}-${value}`)\n}\n\nconst date = (p) => {\n    if(!p) return '--'\n    if(p.includes('T')) p=p.split('T')[0]\n    let d = new Date(p)\n    return `${d.getDate()} ${monthfind(d.getMonth())} ${d.getFullYear()}`\n}\n\nconst stringToDate=(p)=>{\n    let d=''\n    if(p){\n        d=new Date(p)\n    }\n    return d\n}\n\nconst daysArray = [\n    { value: 'Monday', id: 1 },\n    { value: 'Tuesday', id: 2 },\n    { value: 'Wednesday', id: 3 },\n    { value: 'Thursday', id: 4 },\n    { value: 'Friday', id: 5 },\n    { value: 'Saturday', id: 6 },\n    { value: 'Sunday', id: 0 },\n]\n\nconst getDayName = (id) => {\n    let value = daysArray.find((itm) => itm.id === id).value\n    return value;\n}\n\nconst day = (p) => {\n    if (!p) return ''\n    let day = new Date(p).getDay()\n    day = getDayName(day)\n    return day\n}\n\nconst time = (p) => {\n    if (!p) return ''\n    let v = p.split('T')\n    if (v.length === 2) {\n        return new Date(p).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n    } else {\n        return new Date(`2020-07-19 ${p}`).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n    }\n}\n\nconst datetime = (p) => {\n    if(!p) return ''\n    return `${date(p)}, ${time(timeString(p))}`\n}\n\nconst timeString = (p) => {\n    let date = new Date(p)\n    let hr = String(date.getHours())\n    let minutes = String(date.getMinutes())\n    if (hr.length === 1) hr = `0${hr}`\n    if (minutes.length === 1) minutes = `0${minutes}`\n    return `${hr}:${minutes}:00`\n}\n\nconst datetostring = (p) => {\n    if (!p) return ''\n    let date = new Date(p)\n    let month = String(date.getMonth() + 1)\n    let d = String(date.getDate())\n    if (month.length === 1) month = `0${month}`\n    if (d.length === 1) d = `0${d}`\n    return `${date.getFullYear()}-${month}-${d}`\n}\n\nconst datetoIso = (p) => {\n    if (!p) return ''\n    let date = datetostring(p)\n\n    let value = `${date}T00:00:00.000Z`\n    return value\n}\n\nconst datetoIsotime = (p) => {\n    let date = datetostring(p)\n    let time = timeString(p)\n    let value = `${date}T${time}.000Z`\n    return value\n}\n\nconst isototime = (p) => {\n    if (!p) return ''\n    let value = p.split('T')[1].split('.')\n    // if (value.length === 2) {\n    // } else {\n    //     value = p.split('T')[1].split('+')\n    // }\n    return value[0]\n}\n\nconst isotime = (p) => {\n    return time(isototime(p))\n}\n\nconst isotodate = (p) => {\n    let d = new Date(`${datetostring(p)} ${isototime(p)}`)\n    return d\n}\n\nconst datetodatepicker = (p) => {\n    if(!p) return ''\n    let value=p?.split('.')?.[0]\n    return `${value}`\n}\n\nconst DaysNo = (s, e) => {\n    // JavaScript program to illustrate \n    // calculation of no. of days between two date \n\n    // To set two dates to two variables\n    var date1 = new Date(s);\n    var date2 = new Date(e);\n\n    // To calculate the time difference of two dates\n    var Difference_In_Time = date2.getTime() - date1.getTime();\n\n    // To calculate the no. of days between two dates\n    var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\n\n    return Difference_In_Days + 1\n}\n\nfunction getHoursAndMinutes(s, e) {\n    let startDate=new Date(s)\n    let endDate=new Date(e)\n    // Convert dates to timestamps\n    var startTimestamp = startDate.getTime();\n    var endTimestamp = endDate.getTime();\n\n    // Calculate the difference in milliseconds\n    var difference = Math.abs(endTimestamp - startTimestamp);\n\n    // Convert milliseconds to hours and minutes\n    var hours = Math.floor(difference / (1000 * 60 * 60));\n    var minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n\n    let value=''\n    if(hours>24){\n        let days=hours/24\n        days=Math.round(days)\n        value=`${days} days`\n    }else if(hours){\n        value=`${hours} hours ${minutes?`and ${minutes} minutes`:''}`\n    }else{\n        value=`${minutes?`${minutes} minutes`:''}`\n    }\n\n    return value;\n}\nfunction getHoursAndMinutesSeconds(s, e) {\n    let startDate = new Date(s);\n    let endDate = new Date(e);\n    // Convert dates to timestamps\n    var startTimestamp = startDate.getTime();\n    var endTimestamp = endDate.getTime();\n\n    // Calculate the difference in milliseconds\n    var difference = Math.abs(endTimestamp - startTimestamp);\n\n    // Convert milliseconds to hours, minutes, and seconds\n    var hours = Math.floor(difference / (1000 * 60 * 60));\n    var minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n    var seconds = Math.floor((difference % (1000 * 60)) / 1000);\n\n    let value = '';\n    if (hours > 24) {\n        let days = hours / 24;\n        days = Math.round(days);\n        value = `${days} days`;\n    } else if (hours) {\n        value = `${hours} hours ${minutes ? `and ${minutes} minutes` : ''}`;\n    } else if (minutes) {\n        value = `${minutes} minutes ${seconds ? `and ${seconds} seconds` : ''}`;\n    } else {\n        value = `${seconds} seconds`;\n    }\n\n    return value;\n}\n\n\nconst datepipeModel = {\n    DaysNo,\n    date,\n    getHoursAndMinutes,\n    getHoursAndMinutesSeconds,\n    stringToDate,\n    day,\n    datetostring,\n    datetoIso,\n    isototime,\n    isotodate,\n    isotime,\n    datetoIsotime,\n    time,\n    timeString,\n    datetime,\n    monthfind,\n    getWeekDate,\n    monthname,\n    monthArray,\n    datetodatepicker\n}\n\nexport default datepipeModel;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["_ref","sorting","filter","edit","view","statusChange","pageChange","count","deleteItem","clear","filters","setFilter","loaging","data","changestatus","isAllow","total","sortClass","getRolesData","uploadFile","_jsxs","Layout","children","className","shared","title","class","_jsx","id","check","Link","to","url","FiPlus","addTitle","_Fragment","onSubmit","e","preventDefault","for","type","value","search","onChange","target","placeholder","onClick","xmlns","fill","viewBox","stroke","d","SelectDropdown","displayValue","intialValue","status","result","theme","options","DateRangePicker","startDate","endDate","platform","Table","columns","page","event","src","name","ListHtml","rowClass","topHead","nodata","pageSize","setPageSize","useState","headclick","itm","sort","key","length","map","i","scope","colSpan","HiOutlineArrowDown","row","citm","render","index","parseInt","generateOptions","push","option","Pagination","currentPage","totalSize","sizePerPage","changeCurrentPage","colspan","alt","dynamicStyle","disabled","isCompare","showcustom","showRange","user","useSelector","state","toggle","setToggle","range","setRange","previousYear","start","end","ssplit","split","esplit","year","Number","eyear","Date","datepipeModel","datetostring","ed","previousMonth","monthdate","setDate","previousPeriod","days","getDays","s","timeDifference","Math","floor","getDate","compareChange","v","compareStart","compareEnd","compare","Menu","as","Button","toggleChange","date","companyDateFormat","ChevronDownIcon","Transition","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","current","month2","getFullYear","getMonth","rangeClick","DateRange","showSelectionPreview","editableDateInputs","blockDateChange","selection","moveRangeOnFirstSelection","ranges","Item","_ref2","active","_ref3","_ref4","_methodModel$find","crossIcon","inputValue","selectedValues","onInputChange","handleChange","required","noDefault","hideDefaultPosition","Select","label","categoryVal","ext","find","item","isClearable","isDisabled","methodModel","isSingle","valueType","HtmlT","monthArray","monthfind","p","includes","daysArray","time","toLocaleString","hour","minute","hour12","timeString","hr","String","getHours","minutes","getMinutes","month","isototime","DaysNo","date1","getTime","getHoursAndMinutes","startTimestamp","endTimestamp","difference","abs","hours","round","getHoursAndMinutesSeconds","seconds","stringToDate","day","getDay","datetoIso","isotodate","isotime","datetoIsotime","datetime","getWeekDate","arguments","undefined","week","monthname","datetodatepicker","_p$split"],"sourceRoot":""}