{"version":3,"file":"static/js/4597.4b7893e3.chunk.js","mappings":"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","sources":["Pages/Invoice/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ApiClient from \"../../methods/api/apiClient\";\nimport \"./style.scss\";\nimport loader from \"../../methods/loader\";\nimport Html from \"./html\";\nimport { useNavigate } from \"react-router-dom\";\nimport environment from \"../../environment\";\nimport axios from \"axios\";\nimport shared from \"./shared\";\nimport { useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nconst Invoice = () => {\n  const user = useSelector((state) => state.user);\n  const searchState = { data: \"\" };\n  const [filters, setFilter] = useState({ page: 1, count: 10, search: \"\" });\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loaging, setLoader] = useState(true);\n  const history = useNavigate();\n  const isAdmin = user?.role?.name == \"Admin\";\n\n  const sortClass = (key) => {\n    let cls = \"fa-sort\";\n    if (filters.key == key && filters.sorder == \"asc\") cls = \"fa-sort-up\";\n    else if (filters.key == key && filters.sorder == \"desc\")\n      cls = \"fa-sort-down\";\n    return \"fa \" + cls;\n  };\n\n  const sorting = (key) => {\n    let sorder = \"asc\";\n    if (filters.key == key) {\n      if (filters.sorder == \"asc\") {\n        sorder = \"desc\";\n      } else {\n        sorder = \"asc\";\n      }\n    }\n\n    let sortBy = `${key} ${sorder}`;\n    setFilter({ ...filters, sortBy, key, sorder });\n    getData({ sortBy, key, sorder });\n  };\n\n  const getData = (p = {}) => {\n    setLoader(true);\n    let filter = { ...filters, ...p,  };\n    ApiClient.get(shared.listApi, filter).then((res) => {\n      if (res.success) {\n        setData(\n          res.data.map((itm) => {\n            return itm;\n          })\n        );\n        setTotal(res.total);\n      }\n      setLoader(false);\n    });\n  };\n\n  const clear = () => {\n    let f = {\n      startDate: \"\",\n      endDate: \"\",\n      search: \"\",\n      status: \"\",\n      page: 1,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const filter = (p = {}) => {\n    let f = {\n      page: 1,\n      ...p,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const deleteItem = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `Do you want to delete this`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#0065FF\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        loader(true);\n        ApiClient.delete(shared.deleteApi, { id: id }).then((res) => {\n          if (res.success) {\n            clear();\n          }\n          loader(false);\n        });\n      }\n    });\n  };\n\n  const pageChange = (e) => {\n    setFilter({ ...filters, page: e });\n    getData({ page: e });\n  };\n  const count = (e) => {\n    setFilter({ ...filters, count: e });\n    getData({ ...filters, count: e });\n  };\n  const changestatus = (e) => {\n    setFilter({ ...filters, status: e, page: 1 });\n    getData({ status: e, page: 1 });\n  };\n\n  const getRolesData = (id) => {\n    setFilter({ ...filters, role: id, page: 1 });\n    getData({ role: id, page: 1 });\n  };\n\n  const statusChange = (itm) => {\n    if (!isAllow(`edit${shared.check}`)) return;\n    let status = \"active\";\n    if (itm.status == \"active\") status = \"deactive\";\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `Do you want to ${\n        status == \"active\" ? \"Activate\" : \"Inactivate\"\n      } this Plan?`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#0065FF\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        loader(true);\n        ApiClient.put(shared.statusApi, { id: itm.id, status }).then((res) => {\n          if (res.success) {\n            getData();\n          }\n          loader(false);\n        });\n      }\n    });\n  };\n\n  const edit = (id) => {\n    history(`/${shared.url}/edit/${id}`);\n  };\n\n  const view = (id) => {\n    let url = `/${shared.url}/detail/${id}`;\n    history(url);\n  };\n\n  const uploadFile = (e) => {\n    let files = e.target.files;\n    let file = files?.item(0);\n    let url = \"user/import-users\";\n    if (!file) return;\n    loader(true);\n    ApiClient.postFormFileData(url, { file }).then((res) => {\n      if (res.success) {\n      }\n      loader(false);\n    });\n  };\n\n  const exportfun = async () => {\n    const token =  user?.access_token;\n    const req = await axios({\n      method: \"get\",\n      url: `${environment.api}api/export/excel`,\n      responseType: \"blob\",\n      body: { token: token },\n    });\n    var blob = new Blob([req.data], {\n      type: req.headers[\"content-type\"],\n    });\n    const link = document.createElement(\"a\");\n    link.href = window.URL.createObjectURL(blob);\n    link.download = `${shared.title}.xlsx`;\n    link.click();\n  };\n\n  const isAllow = (key = \"\") => {\n    let permissions = user?.permissions;\n    let value = permissions?.[key];\n    if(user.role=='admin') value=true\n    // return true;\n    return value;\n  };\n\n  useEffect(() => {\n    if (user && user.loggedIn) {\n      setFilter({ ...filters, search: searchState.data });\n      getData({ search: searchState.data, page: 1 });\n    }\n  }, []);\n\n  return (\n    <>\n      <Html\n        edit={edit}\n        view={view}\n        clear={clear}\n        sortClass={sortClass}\n        sorting={sorting}\n        isAllow={isAllow}\n        count={count}\n        pageChange={pageChange}\n        deleteItem={deleteItem}\n        filters={filters}\n        setFilter={setFilter}\n        filter={filter}\n        loaging={loaging}\n        data={data}\n        total={total}\n        statusChange={statusChange}\n        changestatus={changestatus}\n        exportfun={exportfun}\n        getRolesData={getRolesData}\n        uploadFile={uploadFile}\n      />\n    </>\n  );\n};\n\nexport default Invoice;\n"],"names":["Invoice","_user$role","user","useSelector","state","searchState","filters","setFilter","useState","page","count","search","data","setData","total","setTotal","loaging","setLoader","history","useNavigate","getData","role","name","p","arguments","length","undefined","filter","ApiClient","get","shared","listApi","then","res","success","map","itm","clear","f","startDate","endDate","status","isAllow","key","permissions","value","useEffect","loggedIn","_jsx","_Fragment","children","Html","edit","id","url","view","sortClass","cls","sorder","sorting","sortBy","e","pageChange","deleteItem","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","loader","delete","deleteApi","statusChange","check","put","statusApi","changestatus","exportfun","async","token","access_token","req","axios","method","environment","api","responseType","body","blob","Blob","type","headers","link","document","createElement","href","window","URL","createObjectURL","download","click","getRolesData","uploadFile","files","target","file","item","postFormFileData"],"sourceRoot":""}