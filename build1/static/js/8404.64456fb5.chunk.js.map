{"version":3,"file":"static/js/8404.64456fb5.chunk.js","mappings":"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","sources":["Pages/Blogs/index.jsx","Pages/Blogs/shared.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ApiClient from \"../../methods/api/apiClient\";\nimport loader from \"../../methods/loader\";\nimport Html from \"./html\";\nimport { useNavigate } from \"react-router-dom\";\nimport shared from \"./shared\";\nimport { useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nconst Blogs = () => {\n  const user = useSelector((state) => state.user);\n  const searchState = { data: \"\" };\n  const [filters, setFilter] = useState({ page: 1, count: 10, search: \"\" });\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loaging, setLoader] = useState(true);\n  const history = useNavigate();\n\n  const sortClass = (key) => {\n    let cls = \"fa-sort\";\n    if (filters.key == key && filters.sorder == \"asc\") cls = \"fa-sort-up\";\n    else if (filters.key == key && filters.sorder == \"desc\")\n      cls = \"fa-sort-down\";\n    return \"fa \" + cls;\n  };\n\n  const sorting = (key) => {\n    let sorder = \"asc\";\n    if (filters.key == key) {\n      if (filters.sorder == \"asc\") {\n        sorder = \"desc\";\n      } else {\n        sorder = \"asc\";\n      }\n    }\n\n    let sortBy = `${key} ${sorder}`;\n    setFilter({ ...filters, sortBy, key, sorder });\n    getData({ sortBy, key, sorder });\n  };\n\n  const getData = (p = {}) => {\n    setLoader(true);\n    let filter = { ...filters, ...p,  };\n\n\n    ApiClient.get(shared.listApi, filter).then((res) => {\n      if (res.success) {\n        setData(\n          res.data.map((itm) => {\n            return itm;\n          })\n        );\n        setTotal(res.total);\n      }\n      setLoader(false);\n    });\n  };\n\n  const clear = () => {\n    let f = {\n      groupId: \"\",\n      search: \"\",\n      status: \"\",\n      page: 1,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const filter = (p = {}) => {\n    let f = {\n      page: 1,\n      ...p,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const deleteItem = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `Do you want to delete this`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#0065FF\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        loader(true);\n        ApiClient.delete(shared.deleteApi, { id: id }).then((res) => {\n          if (res.success) {\n            clear();\n          }\n          loader(false);\n        }); \n      }\n    });\n  };\n\n  const pageChange = (e) => {\n    setFilter({ ...filters, page: e });\n    getData({ page: e });\n  };\n  const count = (e) => {\n    setFilter({ ...filters, count: e });\n    getData({ ...filters, count: e });\n  };\n \n\n\n  const view = (id) => {\n    let url = `/${shared.url}/detail/${id}`;\n    history(url);\n  };\n\n  const isAllow = (key = \"\") => {\n    let permissions = user?.permissions?.[0];\n    let value = permissions?.[key];\n    if(user.role?.name=='Admin') value=true\n    return value;\n  };\n\n  useEffect(() => {\n    if (user && user.loggedIn) {\n      setFilter({ ...filters, search: searchState.data });\n      getData({ search: searchState.data, page: 1 });\n    }\n  }, []);\n\n  return (\n    <>\n      <Html\n        view={view}\n        clear={clear}\n        sortClass={sortClass}\n        sorting={sorting}\n        isAllow={isAllow}\n        count={count}\n        pageChange={pageChange}\n        deleteItem={deleteItem}\n        filters={filters}\n        setFilter={setFilter}\n        filter={filter}\n        loaging={loaging}\n        data={data}\n        total={total}\n        setData={setData}\n        setLoader={setLoader}\n      />\n    </>\n  );\n};\n\nexport default Blogs;\n","const shared = {\n    check: \"Blog\",\n    title: \"Blogs\",\n    addTitle: \"Blog\",\n    url: \"blogs\",\n    addApi: \"blog/add\",\n    editApi: \"blog/update\",\n    detailApi: \"blog/detail\",\n    listApi: \"blog/listing\",\n    statusApi: \"blog/status/change\",\n    deleteApi: \"blog/delete\",\n  };\n  \n  export default shared;\n  "],"names":["Blogs","user","useSelector","state","searchState","filters","setFilter","useState","page","count","search","data","setData","total","setTotal","loaging","setLoader","history","useNavigate","getData","p","arguments","length","undefined","filter","ApiClient","get","shared","listApi","then","res","success","map","itm","clear","f","groupId","status","useEffect","loggedIn","_jsx","_Fragment","children","Html","view","id","url","sortClass","key","cls","sorder","sorting","sortBy","isAllow","_user$permissions","_user$role","permissions","value","role","name","e","pageChange","deleteItem","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","loader","delete","deleteApi","check","addTitle","addApi","editApi","detailApi","statusApi"],"sourceRoot":""}