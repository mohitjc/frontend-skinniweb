{"version":3,"file":"static/js/368.04628129.chunk.js","mappings":"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","sources":["Pages/SalesCRM/SalesPipeline.jsx","components/Charts/FunnelChart.jsx","components/common/DateRangePicker/index.js","components/common/SelectDropdown/html.tsx","components/common/SelectDropdown/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DateRangePicker from \"../../components/common/DateRangePicker\";\nimport SelectDropdown from \"../../components/common/SelectDropdown\";\nimport Layout from \"../../components/global/layout\";\nimport BarChart from \"../../components/common/BarChart\";\nimport FunnelChart from \"../../components/Charts/FunnelChart\";\nconst SalesPipeline = () => {\n  const [filters, setFilter] = useState({});\n  const [total, seTotal] = useState(0);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState();\n  const getData = () => {};\n\n  const clear = () => {\n    let f = {\n      startDate: \"\",\n      endDate: \"\",\n      platform: \"\",\n      search: \"\",\n      status: \"\",\n      page: 1,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const filter = (p = {}) => {\n    let f = {\n      page: 1,\n      ...p,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const Category = [\n    { name: \"XERO\", id: \"xero\" },\n    { name: \"Quickbooks\", id: \"quickbooks\" },\n    { name: \"MYOB\", id: \"myob\" },\n    { name: \"Stripe\", id: \"stripe\" },\n    { name: \"Paypal\", id: \"Paypal\" },\n  ];\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    <>\n      <Layout>\n        <div className=\"flex flex-wrap justify-between items-center gap-y-4\">\n         <a id=\"downloadFile\"></a>\n\n          <div className=\"flex\"></div>\n        </div>\n\n        <div className=\"flex gap-2 mt-3\">\n          <SelectDropdown\n            displayValue=\"name\"\n            className=\"ml-auto\"\n            placeholder=\"All Platform\"\n            intialValue={filters.platform}\n            result={(e) => {\n              filter({ platform: e.value });\n            }}\n            theme=\"search\"\n            options={Category}\n          />\n          <SelectDropdown\n            id=\"statusDropdown\"\n            displayValue=\"name\"\n            placeholder=\"All Status\"\n            intialValue={filters.status}\n            result={(e) => {\n              filter({ status: e.value });\n            }}\n            theme=\"search\"\n            // options={shared.status}\n          />\n          <DateRangePicker\n            value={{\n              startDate: filters.startDate,\n              endDate: filters.endDate,\n            }}\n            onChange={(e) => {\n              filter({\n                startDate: e.startDate,\n                endDate: e.endDate,\n              });\n            }}\n          />\n\n          {filters.status || filters.startDate || filters.platform ? (\n            <>\n              <button\n                className=\"bg-primary leading-10 h-10 inline-block shadow-btn px-6 hover:opacity-80 text-sm text-white rounded-lg\"\n                onClick={() => clear()}\n              >\n                Reset\n              </button>\n            </>\n          ) : (\n            <></>\n          )}\n        </div>\n        <div className=\"shadow-box  w-full bg-white rounded-lg mt-6\">\n          <div className=\"\">\n            <h5 className=\"p-4 border-b font-[600] rounded-[5px] rounded-bl-[0] rounded-br-[0] flex items-center text-[#0065FF]\">\n              Pipeline Stages\n            </h5>\n          </div>\n          <div className=\"col-span-12 md:col-span-12  p-4\">\n            <div className=\"chatr_ones border border-gray-200 p-6 rounded-lg\">\n            <FunnelChart/>\n            </div>\n          </div>\n        </div>\n        <div className=\"shadow-box  w-full bg-white rounded-lg mt-6\">\n          <div className=\"\">\n            <h5 className=\"p-4 border-b font-[600] rounded-[5px] rounded-bl-[0] rounded-br-[0] flex items-center text-[#0065FF]\">\n              Deal Value Forecast\n            </h5>\n          </div>\n          <div className=\"col-span-12 md:col-span-12  p-4\">\n            <div className=\"chatr_ones border border-gray-200 p-6 rounded-lg\">\n              <BarChart\n                legends={[{ label: \"\", key: \"\" }]}\n                data={[\n                  { project1: 10, project2: 3, date: \"2020-12-04\" },\n                  { project1: 23, project2: 25, date: \"2020-12-04\" },\n                  { project1: 12, project2: 43, date: \"2020-12-04\" },\n                  { project1: 67, project2: 23, date: \"2020-12-04\" },\n                  { project1: 65, project2: 27, date: \"2020-12-04\" },\n                ]}\n                stack\n              />\n            </div>\n          </div>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nexport default SalesPipeline;\n","import React from 'react'\nimport ReactEcharts from \"echarts-for-react\";\nconst FunnelChart = () => {\n  const   option = {\n        title: {\n          text: 'Funnel'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c}%'\n        },\n        toolbox: {\n          feature: {\n            dataView: { readOnly: false },\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        legend: {\n          data: ['Show', 'Click', 'Visit', 'Inquiry', 'Order']\n        },\n        series: [\n          {\n            name: 'Funnel',\n            type: 'funnel',\n            left: '10%',\n            top: 60,\n            bottom: 60,\n            width: '80%',\n            min: 0,\n            max: 100,\n            minSize: '0%',\n            maxSize: '100%',\n            sort: 'descending',\n            gap: 2,\n            label: {\n              show: true,\n              position: 'inside'\n            },\n            labelLine: {\n              length: 10,\n              lineStyle: {\n                width: 1,\n                type: 'solid'\n              }\n            },\n            itemStyle: {\n              borderColor: '#fff',\n              borderWidth: 1\n            },\n            emphasis: {\n              label: {\n                fontSize: 20\n              }\n            },\n            data: [\n              { value: 60, name: 'Visit' },\n              { value: 40, name: 'Inquiry' },\n              { value: 20, name: 'Order' },\n              { value: 80, name: 'Click' },\n              { value: 100, name: 'Show' }\n            ]\n          }\n        ]\n      };\n  return (\n    <div>\n      <ReactEcharts option={option} style={{ height: \"400px\" }} />\n    </div>\n  )\n}\n\nexport default FunnelChart\n","import React, { useState } from \"react\";\nimport { DateRangePicker as DateRange } from 'react-date-range';\nimport datepipeModel from \"../../../models/datepipemodel\";\nimport { useSelector } from 'react-redux';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport \"./style.scss\";\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { ChevronDownIcon } from '@heroicons/react/20/solid'\n\nconst DateRangePicker = ({ value, onChange, dynamicStyle = false,\n    className = null, disabled = false, title = '', placeholder = '', isCompare = false, \n    showcustom = true,\n    showRange = true,\n}) => {\n    const user = useSelector((state) => state.user)\n    const [toggle, setToggle] = useState(false)\n    const [range, setRange] = useState('')\n\n    const rangeList = [\n        { id: 'This Month', name: \"This Month\" },\n        { id: 'This Year', name: \"This Year\" },\n        { id: 'Last Month', name: \"Last Month\" },\n        { id: 'Last Year', name: \"Last Year\" },\n        { id: '', name: \"Custom\" }\n    ]\n\n    const blockDateChange = (e) => {\n        let v={\n            ...value, ...e, compare: '' \n        }\n\n        v.startDate=datepipeModel.datetostring(v.startDate)\n        v.endDate=datepipeModel.datetostring(v.endDate)\n        \n        onChange({ ...v })\n        if (v.startDate != v.endDate) {\n            setToggle(false)\n        }\n    }\n\n    const toggleChange = () => {\n        setToggle(!toggle)\n    }\n\n    const getBlockValue = () => {\n        let v = {\n            startDate: value['startDate'] ? new Date(value['startDate']) : new Date(),\n            endDate: value['endDate'] ? new Date(value['endDate']) : new Date(),\n            key: 'selection'\n        }\n        return [v]\n    }\n\n    const dropdownMenuClick = (e) => {\n        // let el = document.getElementById(`daterangeDropdown-${id}`)\n        // el.click()\n    }\n\n    const rangeClick = (e) => {\n        let startDate = ''\n        let endDate = ''\n\n        if (e == 'Last Month') {\n            let current = new Date()\n            let monthdate = current.setDate(0)\n            monthdate = datepipeModel.datetostring(monthdate)\n            startDate = `${monthdate.split('-')[0]}-${monthdate.split('-')[1]}-01`\n            endDate = monthdate\n\n        } else if (e == 'This Month') {\n            let current = datepipeModel.datetostring(new Date())\n            startDate = `${current.split('-')[0]}-${current.split('-')[1]}-01`\n\n            let month2 = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n\n        else if (e == 'This Year') {\n            let current = datepipeModel.datetostring(new Date())\n            startDate = `${current.split('-')[0]}-01-01`\n\n            let month2 = new Date(new Date().getFullYear() + 1, 0, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n        else if (e == 'Last Year') {\n            let current = new Date()\n            startDate = `${current.getFullYear() - 1}-01-01`\n            let month2 = new Date(current.getFullYear(), 0, 0)\n            endDate = datepipeModel.datetostring(month2)\n        }\n        setRange(e)\n        onChange({ ...value, startDate, endDate, compare: '' })\n        if (e != '') {\n            setToggle(false)\n        }\n    }\n\n    const getDays = (s, e) => {\n        // Define two date objects\n        const startDate = new Date(s); // Replace with your start date\n        const endDate = new Date(e);   // Replace with your end date\n        // Calculate the time difference in milliseconds\n        const timeDifference = endDate - startDate;\n        // Convert milliseconds to days\n        const daysDifference = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n        return daysDifference\n    }\n\n    const previousYear = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            let ssplit = value.startDate.split('-')\n            let esplit = value.endDate.split('-')\n            let year = Number(ssplit[0])\n            let eyear = Number(esplit[0])\n\n            let d = new Date(`${year - 1}-${ssplit[1]}-${ssplit[2]}`)\n            start = datepipeModel.datetostring(d)\n\n            let ed = new Date(`${eyear - 1}-${esplit[1]}-${esplit[2]}`)\n            end = datepipeModel.datetostring(ed)\n        }\n        return { start, end }\n    }\n\n    const previousMonth = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            // let sMonth=new Date(value.startDate).getMonth()\n            // start=new Date(value.startDate).setMonth(sMonth-1)\n            // start=datepipeModel.datetostring(start)\n\n            // let eMonth=new Date(value.endDate).getMonth()\n            // end=new Date(value.endDate).setMonth(eMonth-1)\n            // end=datepipeModel.datetostring(end)\n\n            let current = new Date(value.startDate)\n            let monthdate = current.setDate(0)\n            monthdate = datepipeModel.datetostring(monthdate)\n            start = `${monthdate.split('-')[0]}-${monthdate.split('-')[1]}-01`\n            end = monthdate\n        }\n        return { start, end }\n    }\n\n    const previousPeriod = () => {\n        let start = ''\n        let end = ''\n        if (value.startDate && value.endDate) {\n            let days = getDays(value.startDate, value.endDate) + 1\n\n            let d = new Date(value.startDate)\n            d.setDate(d.getDate() - days)\n            start = datepipeModel.datetostring(d)\n\n            let ed = new Date(value.startDate)\n            ed.setDate(ed.getDate() - 1)\n            end = datepipeModel.datetostring(ed)\n        }\n        return { start, end }\n    }\n\n    const compareChange = (e) => {\n        let start = ''\n        let end = ''\n        if (e == 'Previous Period') {\n            start = previousPeriod().start\n            end = previousPeriod().end\n        } else if (e == 'Previous Year') {\n            start = previousYear().start\n            end = previousYear().end\n        } else if (e == 'Previous Month') {\n            start = previousMonth().start\n            end = previousMonth().end\n        }\n\n        let v = {\n            ...value,\n            compareStart: start,\n            compareEnd: end,\n            compare: e\n        }\n        setToggle(false)\n        onChange({ ...v })\n    }\n\n    return <>\n\n\n        <Menu as=\"div\" className=\"relative list_box_active_state \" title={title}>\n            <div>\n\n                <Menu.Button title={title} disabled={disabled} onClick={toggleChange} className=\" set-bg flex w-full bg-primary justify-center border gap-x-1.5 rounded-md  px-3 py-2.5 text-sm font-normal text-white shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\">\n                    {!value?.startDate || !value?.endDate ? <>{placeholder || 'Start Date - End Date'}</> : <>{datepipeModel.date(value?.startDate, user?.companyDateFormat)} -  {datepipeModel.date(value?.endDate, user?.companyDateFormat)}</>}\n                    <ChevronDownIcon className=\"-mr-1 h-5 w-5 text-white-400\" aria-hidden=\"true\" />\n\n\n                </Menu.Button>\n            </div>\n\n            <Transition\n                as={Fragment}\n                enter=\"transition ease-out duration-100\"\n                enterFrom=\"transform opacity-0 scale-95\"\n                enterTo=\"transform opacity-100 scale-100\"\n                leave=\"transition ease-in duration-75\"\n                leaveFrom=\"transform opacity-100 scale-100\"\n                leaveTo=\"transform opacity-0 scale-95\"\n            >\n                <Menu.Items className={`${dynamicStyle ? \"\" : \"\"}   focus:!outline-[#0065FF] focus:!outline text-sm absolute z-40 ${className ? className : \" min-w-[360px]\"\n                    }  right-0 shadow-lg !py-2 !mt-3 overflow-auto bg-white  rounded-lg scrollbar`}>\n                    <div className=\"fffff\">\n                        <div className=\"\" >\n                            {/* <p className=\"text-center px-2\">{!value?.startDate || !value?.endDate ? <>{placeholder || 'Start Date - End Date'}</> : <>{datepipeModel.date(value?.startDate, user?.companyDateFormat)} -  {datepipeModel.date(value?.endDate, user?.companyDateFormat)}</>}</p> */}\n                           \n                           {showRange?<>\n                            <div className=\"  row-gap-2 column-gap-2 whitespace-nowrap flex p-2 mb-0\">\n                                {rangeList.map(itm => {\n                                    return showcustom == false && itm.name == \"Custom\" ? null : <button className={`btn ${range == itm.id ? 'bg-[#0065FF] text-white' : 'bg-transparent hover:border-gray-400 border-1 border-gray-400'}`} type=\"button\" onClick={e => rangeClick(itm.id)}>{itm.name}</button>\n                                })}\n                            </div>\n                           </>:<></>}\n                           \n\n                            {range || showcustom == false ? <></> : <>\n                                <div className=\"w-full customcalender\">\n                                    <DateRange\n                                        showSelectionPreview={false}\n                                        editableDateInputs={true}\n                                        onChange={e => blockDateChange(e.selection)}\n                                        moveRangeOnFirstSelection={false}\n                                        ranges={getBlockValue()}\n                                    />\n                                </div>\n                            </>}\n\n\n                            {isCompare ? <>\n\n                                <Menu as=\"div\" className=\"relative \">\n                                    <div className=\"text-center\">\n                                        <Menu.Button className=\"inline-flex w-full justify-center border gap-x-1.5 rounded-md bg-white px-3 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\">\n                                            Compare\n                                            <ChevronDownIcon\n                                                className=\"-mr-1 ml-2 h-5 w-5 text-violet-200 hover:text-violet-100\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        </Menu.Button>\n                                    </div>\n                                    <Transition\n                                        as={Fragment}\n                                        enter=\"transition ease-out duration-100\"\n                                        enterFrom=\"transform opacity-0 scale-95\"\n                                        enterTo=\"transform opacity-100 scale-100\"\n                                        leave=\"transition ease-in duration-75\"\n                                        leaveFrom=\"transform opacity-100 scale-100\"\n                                        leaveTo=\"transform opacity-0 scale-95\"\n                                    >\n                                        <Menu.Items className=\"absolute right-0 mt-2 w-full origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black/5 focus:outline-none\">\n                                            <div className=\"px-1 py-1 \">\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Month' ? 'active' : ''}`} onClick={e => compareChange('Previous Month')}>Previous Month ({datepipeModel.date(previousMonth().start, user.companyDateFormat)} - {datepipeModel.date(previousMonth().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Year' ? 'active' : ''}`} onClick={e => compareChange('Previous Year')}>Previous Year(Same Date) ({datepipeModel.date(previousYear().start, user.companyDateFormat)} - {datepipeModel.date(previousYear().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                                <Menu.Item>\n                                                    {({ active }) => (\n                                                        <a className={`dropdown-item ${value.compare == 'Previous Period' ? 'active' : ''}`} onClick={e => compareChange('Previous Period')}>Previous Period(Custom Dates) ({datepipeModel.date(previousPeriod().start, user.companyDateFormat)} - {datepipeModel.date(previousPeriod().end, user.companyDateFormat)})</a>\n\n                                                    )}\n                                                </Menu.Item>\n\n                                            </div>\n\n\n                                        </Menu.Items>\n                                    </Transition>\n                                </Menu>\n\n\n                            </> : <></>}\n\n                        </div>\n\n                    </div>\n                </Menu.Items>\n            </Transition>\n        </Menu>\n\n    </>\n}\nexport default DateRangePicker","import React, { Fragment } from \"react\";\nimport methodModel from \"../../../methods/methods\";\nimport \"./style.scss\";\nimport Select from \"react-select\";\nimport { Menu, Transition } from \"@headlessui/react\";\nimport { ChevronDownIcon } from \"@heroicons/react/20/solid\";\n\nconst Html = ({\n  options,\n  dynamicStyle = false,\n  className = \"\",\n  crossIcon,\n  inputValue = \"\",\n  selectedValues,\n  onInputChange = (e: any) => {},\n  handleChange = () => {},\n  displayValue,\n  id = \"\",\n  placeholder,\n  required = false,\n  disabled,\n  name = \"\",\n  noDefault,\n  hideDefaultPosition = false,\n  theme = \"normal\",\n}: any) => {\n  const categoryVal = () => {\n    let ext = options && options.find((item: any) => item.id == selectedValues);\n    return ext ? { value: ext.id, label: ext[displayValue] } : \"\";\n  };\n\n  return (\n    <>\n      {theme == \"search\" ? (\n        <>\n          <div className={`${className || \"capitalize\"}`}>\n            <Select\n              options={\n                options?.map((itm: any) => {\n                  return { value: itm.id, label: itm[displayValue] };\n                }) || []\n              }\n              \n              placeholder={placeholder}\n              value={categoryVal()}\n              isClearable={crossIcon}\n              name={name}\n              // formatOptionLabel=\"bordere\"\n              // inputValue={inputValue}\n              onInputChange={onInputChange}\n              onChange={(e: any) => handleChange(e?.value || \"\")}\n              className=\"text-gray-700 block text-sm options_classs\"\n              isDisabled={disabled ? true : false}\n              required={required}\n            />\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"selectDropdown\">\n            <input\n              type=\"hidden\"\n              name={name}\n              required={required}\n              value={selectedValues}\n            />\n            <div className=\"dropdown addDropdown\">\n              <Menu as=\"div\" className=\"relative list_box_active_state ml-auto\">\n                <div>\n                  <Menu.Button\n                    disabled={disabled}\n                    id={\"dropdownMenuButton\" + id}\n                    className={`capitalize inline-flex w-full border justify-start gap-x-1.5 rounded-md bg-white px-3 py-2.5 text-sm font-normal text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-200 ${className}`}\n                  >\n                    {selectedValues\n                      ? methodModel.find(options, selectedValues, \"id\")?.[\n                          displayValue\n                        ] || placeholder\n                      : placeholder}\n                    <ChevronDownIcon\n                      className=\"-mr-1 h-5 w-5 text-gray-400\"\n                      aria-hidden=\"true\"\n                    />\n                  </Menu.Button>\n                </div>\n\n                <Transition\n                  as={Fragment}\n                  enter=\"transition ease-out duration-100\"\n                  enterFrom=\"transform opacity-0 scale-95\"\n                  enterTo=\"transform opacity-100 scale-100\"\n                  leave=\"transition ease-in duration-75\"\n                  leaveFrom=\"transform opacity-100 scale-100\"\n                  leaveTo=\"transform opacity-0 scale-95\"\n                >\n                  <Menu.Items\n                    className={`${\n                      dynamicStyle ? \"\" : \"max-h-60\"\n                    }  focus:!outline-[#0065FF] focus:!outline text-sm absolute z-40 w-full min-w-[260px] ${\n                      className ? className : \" min-w-[260px]\"\n                    }  right-0 shadow-lg !py-2 !mt-1.5 overflow-auto bg-white  rounded-lg scrollbar capitalize`}\n                  >\n                    <div className=\"mt-2\">\n                      {hideDefaultPosition?null:\n                      <>\n                      {noDefault ? (\n                        <Menu.Item disabled={disabled}>\n                          {({ active }) => (\n                            <a\n                              className={\n                                selectedValues == \"\"\n                                  ? \"text-gray-700 block px-4 py-2 text-sm active\"\n                                  : \"text-gray-700 block px-4 py-2 text-sm\"\n                              }\n                              onClick={() => handleChange(\"\")}\n                            >\n                              {placeholder}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      ) : (\n                        <Menu.Item>\n                          {({ active }) => (\n                            <a\n                              className={\n                                selectedValues == \"\"\n                                  ? \"text-gray-700 block px-4 py-2 text-sm active\"\n                                  : \"text-gray-700 block px-4 py-2 text-sm\"\n                              }\n                              onClick={() => handleChange(\"\")}\n                            >\n                              {placeholder}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      )}\n                      </>}\n                      {options &&\n                        options.map((itm: any) => {\n                          return (\n                            <Menu.Item>\n                              {({ active }) => (\n                                <a\n                                  className={\n                                    selectedValues == itm.id\n                                      ? \"text-gray-700 block px-4 py-2 text-sm active\"\n                                      : \"text-gray-700 block px-4 py-2 text-sm\"\n                                  }\n                                  onClick={() => handleChange(itm.id)}\n                                  key={itm.id}\n                                >\n                                  {itm[displayValue]}\n                                </a>\n                              )}\n                            </Menu.Item>\n                          );\n                        })}\n                    </div>\n                  </Menu.Items>\n                </Transition>\n              </Menu>\n\n              {/* <button disabled={disabled} className={`text-white bg-[#0065FF] bg-[#0065FF] focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center dropdown-toggle removeBg ${className}`} type=\"button\" id={\"dropdownMenuButton\" + id} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {selectedValues ? methodModel.find(options, selectedValues, 'id')?.[displayValue] || placeholder : placeholder}\n                    </button>\n                    <div className=\"dropdown-menu shadow bg_hover\" aria-labelledby={\"dropdownMenuButton\" + id}>\n                        {noDefault ? <a className={selectedValues == '' ? 'text-gray-700 block px-4 py-2 text-sm active disabled' : 'text-gray-700 block px-4 py-2 text-sm disabled'} disabled>{placeholder}</a> : <a className={selectedValues == '' ? 'text-gray-700 block px-4 py-2 text-sm active' : 'text-gray-700 block px-4 py-2 text-sm'} onClick={() => handleChange('')}>{placeholder}</a>}\n                        {options && options.map(itm => {\n                            return <a className={selectedValues == itm.id ? 'text-gray-700 block px-4 py-2 text-sm active' : 'text-gray-700 block px-4 py-2 text-sm'} onClick={() => handleChange(itm.id)} key={itm.id}>{itm[displayValue]}</a>\n                        })}\n                    </div> */}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Html;\n","import React from \"react\";\nimport HtmlT from \"./html\";\n\nconst SelectDropdown = ({\n  intialValue,\n  options,\n  isSingle,\n  valueType = \"string\",\n  className = \"capitalize\",\n  inputValue = \"\",\n  onInputChange = (e: any) => {},\n  result,\n  crossIcon=true,\n  displayValue = \"name\",\n  id,\n  placeholder = \"Select Status\",\n  disabled = false,\n  name,\n  required = false,\n  theme = \"normal\",\n  hideDefaultPosition,\n}: any) => {\n  const handleChange = (e: any) => {\n    let v = e;\n    if (valueType == \"object\") {\n      v = options.find((itm: any) => itm.id == e);\n    }\n    result({ event: \"value\", value: v });\n  };\n\n  return (\n    <>\n      <HtmlT\n        id={id}\n        className={className}\n        name={name}\n        required={required}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        crossIcon={crossIcon}\n        theme={theme}\n        disabled={disabled}\n        placeholder={placeholder}\n        isSingle={isSingle}\n        displayValue={displayValue}\n        options={options}\n        selectedValues={intialValue}\n        handleChange={handleChange}\n        hideDefaultPosition={hideDefaultPosition}\n      />\n    </>\n  );\n};\n\nexport default SelectDropdown;\n"],"names":["SalesPipeline","filters","setFilter","useState","total","seTotal","data","setData","loading","setLoading","filter","f","page","arguments","length","undefined","useEffect","_jsx","_Fragment","children","_jsxs","Layout","className","id","SelectDropdown","displayValue","placeholder","intialValue","platform","result","e","value","theme","options","name","status","DateRangePicker","startDate","endDate","onChange","onClick","clear","search","FunnelChart","BarChart","legends","label","key","project1","project2","date","stack","ReactEcharts","option","title","text","tooltip","trigger","formatter","toolbox","feature","dataView","readOnly","restore","saveAsImage","legend","series","type","left","top","bottom","width","min","max","minSize","maxSize","sort","gap","show","position","labelLine","lineStyle","itemStyle","borderColor","borderWidth","emphasis","fontSize","style","height","_ref","dynamicStyle","disabled","isCompare","showcustom","showRange","user","useSelector","state","toggle","setToggle","range","setRange","previousYear","start","end","ssplit","split","esplit","year","Number","eyear","d","Date","datepipeModel","datetostring","ed","previousMonth","monthdate","setDate","previousPeriod","days","getDays","s","timeDifference","Math","floor","getDate","compareChange","v","compareStart","compareEnd","compare","Menu","as","Button","toggleChange","companyDateFormat","ChevronDownIcon","Transition","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","map","itm","current","month2","getFullYear","getMonth","rangeClick","DateRange","showSelectionPreview","editableDateInputs","blockDateChange","selection","moveRangeOnFirstSelection","ranges","Item","_ref2","active","_ref3","_ref4","_methodModel$find","crossIcon","inputValue","selectedValues","onInputChange","handleChange","required","noDefault","hideDefaultPosition","Select","categoryVal","ext","find","item","isClearable","isDisabled","methodModel","isSingle","valueType","HtmlT","event"],"sourceRoot":""}