{"version":3,"file":"static/js/3996.74e25516.chunk.js","mappings":"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","sources":["Pages/Calendly/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ApiClient from \"../../methods/api/apiClient\";\nimport \"./style.scss\";\nimport loader from \"../../methods/loader\";\nimport Html from \"./html\";\nimport { useNavigate } from \"react-router-dom\";\nimport environment from \"../../environment\";\nimport axios from \"axios\";\nimport shared from \"./shared\";\nimport { useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nconst Calendly = () => {\n  const user = useSelector((state) => state.user);\n  const refreshToken=user.connectionsDetails?.find(itm=>itm.type=='calendly'&&itm.connected)?.refreshToken\n  const [Authorization, setAuthorization] = useState('');\n  const [filters, setFilter] = useState({ page: 1, count: 10, search: \"\" });\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [eventCount, setEventCount] = useState()\n  const [loaging, setLoader] = useState(false);\n  const [me, setMe] = useState();\n  const [eventTypes, setEventTypes] = useState([]);\n  const [upcomingEvents,  setUpcomingEvents] = useState([])\n  const history = useNavigate();\n\n  const sortClass = (key) => {\n    let cls = \"fa-sort\";\n    if (filters.key == key && filters.sorder == \"asc\") cls = \"fa-sort-up\";\n    else if (filters.key == key && filters.sorder == \"desc\")\n      cls = \"fa-sort-down\";\n    return \"fa \" + cls;\n  };\n\n  const sorting = (key) => {\n    let sorder = \"asc\";\n    if (filters.key == key) {\n      if (filters.sorder == \"asc\") {\n        sorder = \"desc\";\n      } else {\n        sorder = \"asc\";\n      }\n    }\n\n    let sortBy = `${key} ${sorder}`;\n    setFilter({ ...filters, sortBy, key, sorder });\n    getData({ sortBy, key, sorder });\n  };\n\n  const getData = (p = {}) => {\n    \n    let filter = { ...filters, \n      ...p,\n      user:me?.uri,\n      Authorization:Authorization,\n      status:'active'\n    };\n    if(!filter.Authorization) return\n\n    if(filter.eventType) filter.event_type=filter.eventType\n    if(filter.sortBy) filter.sort=filter.sortBy.replace(' ',':')\n      if(filter.startDate){\n        filter.min_start_time=new Date(filter.startDate).toUTCString()\n        filter.max_start_time=new Date(filter.endDate).toUTCString()\n      }\n      setLoader(true);\n      let url='https://api.calendly.com/scheduled_events'\n    ApiClient.get(url, filter).then((res) => {\n      if (res.collection) {\n        let data=res.collection.map((itm) => {\n          itm.id = itm.uri;\n          return itm;\n        })\n    \n        setData(data)\n        setTotal(res.pagination.count);\n      }\n      setLoader(false);\n    });\n  };\n\n  const clear = () => {\n    let f = {\n      startDate: \"\",\n      endDate: \"\",\n      platform: \"\",\n      search: \"\",\n      status: \"\",\n      eventType:'',\n      page: 1,\n      role: \"\",\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const filter = (p = {}) => {\n    let f = {\n      page: 1,\n      ...p,\n    };\n    setFilter({ ...filters, ...f });\n    getData({ ...f });\n  };\n\n  const deleteItem = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `Do you want to delete this`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#0065FF\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        loader(true);\n        ApiClient.delete(shared.deleteApi, { id: id }).then((res) => {\n          if (res.success) {\n            clear();\n          }\n          loader(false);\n        });\n      }\n    });\n  };\n\n  const pageChange = (e) => {\n    setFilter({ ...filters, page: e });\n    getData({ page: e });\n  };\n  const count = (e) => {\n    setFilter({ ...filters, count: e });\n    getData({ ...filters, count: e });\n  };\n  const changestatus = (e) => {\n    setFilter({ ...filters, status: e, page: 1 });\n    getData({ status: e, page: 1 });\n  };\n\n  const getRolesData = (id) => {\n    setFilter({ ...filters, role: id, page: 1 });\n    getData({ role: id, page: 1 });\n  };\n\n  const statusChange = (itm) => {\n    if (!isAllow(`edit${shared.check}`)) return;\n    let status = \"active\";\n    if (itm.status == \"active\") status = \"deactive\";\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `Do you want to ${\n        status == \"active\" ? \"Activate\" : \"Inactivate\"\n      } this user?`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#0065FF\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        loader(true);\n        ApiClient.put(shared.statusApi, { id: itm.id, status }).then((res) => {\n          if (res.success) {\n            getData();\n          }\n          loader(false);\n        });\n      }\n    });\n  };\n\n  const edit = (id) => {\n    history(`/${shared.url}/edit/${id}`);\n  };\n\n  const view = (id) => {\n    let url = `/${shared.url}/detail/${id}`;\n    history(url);\n  };\n\n  const uploadFile = (e) => {\n    let files = e.target.files;\n    let file = files?.item(0);\n    let url = \"user/import-users\";\n    if (!file) return;\n    loader(true);\n    ApiClient.postFormFileData(url, { file }).then((res) => {\n      if (res.success) {\n      }\n      loader(false);\n    });\n  };\n\n  const exportfun = async () => {\n    const token =  user?.access_token;\n    const req = await axios({\n      method: \"get\",\n      url: `${environment.api}api/export/excel`,\n      responseType: \"blob\",\n      body: { token: token },\n    });\n    var blob = new Blob([req.data], {\n      type: req.headers[\"content-type\"],\n    });\n    const link = document.createElement(\"a\");\n    link.href = window.URL.createObjectURL(blob);\n    link.download = `${shared.title}.xlsx`;\n    link.click();\n  };\n\n  const isAllow = (key = \"\") => {\n    let permissions = user?.permissions;\n    let value = permissions?.[key];\n    // if(user.role=='admin') value=true\n    return true;\n  };\n\n  const getAuth=()=>{\n    if(!Authorization) return\n    loader(true)\n    ApiClient.get('https://api.calendly.com/users/me',{\n      Authorization:Authorization,\n    }).then(res=>{\n      loader(false)\n      if(res.resource){\n        let data=res.resource\n        setMe(data)\n      }\n    })\n  }\n\n\n  useEffect(() => {\n    if (user && user.loggedIn) {\n      getAuth()\n    }\n  }, [user,Authorization]);\n\n  useEffect(() => {\n    if (user && user.loggedIn) {\n      if(!refreshToken) return\n      loader(true)\n      ApiClient.get('calendly/refresh_token',{\n        refresh_token:refreshToken,\n      }).then(res=>{\n        loader(false)\n       if(res.success){\n        setAuthorization(res.data.access_token)\n       }\n      })\n    }\n  }, [refreshToken]);\n\n\n  const getEventTypes=()=>{\n    if(!Authorization) return\n    ApiClient.get('https://api.calendly.com/event_types',{\n      Authorization:Authorization,\n      organization:me?.current_organization\n    }).then(res=>{\n      if(res.collection){\n        let data=res.collection.map(itm=>{\n          return {\n            ...itm,\n            id:itm.uri,\n          }\n        })\n        setEventTypes(data)\n      }\n    })\n  }\n  const getUpcomingEvents = () => {\n    ApiClient.get('calendly/upcoming/events').then((res) => {\n      if(res.success){\n        setUpcomingEvents(res?.data?.collection)\n        setEventCount(res?.data?.pagination?.total_count)\n      }\n    })\n  }\n\n  useEffect(()=>{\n    if(me){\n      getEventTypes()\n      getData()\n      getUpcomingEvents()\n    }\n  },[me])\n\n  \n\n  return (\n    <>\n      <Html\n      eventTypes={eventTypes}\n      me={me}\n      Authorization={Authorization}\n        edit={edit}\n        view={view}\n        clear={clear}\n        sortClass={sortClass}\n        sorting={sorting}\n        isAllow={isAllow}\n        count={count}\n        pageChange={pageChange}\n        deleteItem={deleteItem}\n        filters={filters}\n        setFilter={setFilter}\n        filter={filter}\n        loaging={loaging}\n        data={data}\n        total={total}\n        statusChange={statusChange}\n        changestatus={changestatus}\n        exportfun={exportfun}\n        getRolesData={getRolesData}\n        uploadFile={uploadFile}\n        upcomingEvents={upcomingEvents}\n        eventCount={eventCount}\n      />\n    </>\n  );\n};\n\nexport default Calendly;\n"],"names":["Calendly","_user$connectionsDeta","_user$connectionsDeta2","user","useSelector","state","refreshToken","connectionsDetails","find","itm","type","connected","Authorization","setAuthorization","useState","filters","setFilter","page","count","search","data","setData","total","setTotal","eventCount","setEventCount","loaging","setLoader","me","setMe","eventTypes","setEventTypes","upcomingEvents","setUpcomingEvents","history","useNavigate","getData","p","arguments","length","undefined","filter","uri","status","eventType","event_type","sortBy","sort","replace","startDate","min_start_time","Date","toUTCString","max_start_time","endDate","ApiClient","get","then","res","collection","map","id","pagination","clear","f","platform","role","isAllow","key","permissions","useEffect","loggedIn","loader","resource","refresh_token","success","access_token","organization","current_organization","_res$data","_res$data2","_res$data2$pagination","total_count","_jsx","_Fragment","children","Html","edit","shared","url","view","sortClass","cls","sorder","sorting","e","pageChange","deleteItem","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","delete","deleteApi","statusChange","check","put","statusApi","changestatus","exportfun","async","token","req","axios","method","environment","api","responseType","body","blob","Blob","headers","link","document","createElement","href","window","URL","createObjectURL","download","click","getRolesData","uploadFile","files","target","file","item","postFormFileData"],"sourceRoot":""}