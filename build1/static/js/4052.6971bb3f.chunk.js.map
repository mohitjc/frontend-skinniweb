{"version":3,"file":"static/js/4052.6971bb3f.chunk.js","mappings":"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","sources":["Pages/Asana/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ApiClient from \"../../methods/api/apiClient\";\r\nimport \"./style.scss\";\r\nimport loader from \"../../methods/loader\";\r\nimport Html from \"./html\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Asana = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const [filters, setFilter] = useState({ page: 1, count: 10, search: \"\" });\r\n  const [data, setData] = useState([]);\r\n  const [loaging, setLoader] = useState(false);\r\n  const [worksapceData, setWorkspaceData] = useState();\r\n\r\n  const sortClass = (key) => {\r\n    let cls = \"fa-sort\";\r\n    if (filters.key == key && filters.sorder == \"asc\") cls = \"fa-sort-up\";\r\n    else if (filters.key == key && filters.sorder == \"desc\")\r\n      cls = \"fa-sort-down\";\r\n    return \"fa \" + cls;\r\n  };\r\n\r\n  const sorting = (key) => {\r\n    let sorder = \"asc\";\r\n    if (filters.key == key) {\r\n      if (filters.sorder == \"asc\") {\r\n        sorder = \"desc\";\r\n      } else {\r\n        sorder = \"asc\";\r\n      }\r\n    }\r\n\r\n    let sortBy = `${key} ${sorder}`;\r\n    setFilter({ ...filters, sortBy, key, sorder });\r\n    getData({ sortBy, key, sorder });\r\n  };\r\n\r\n  const getData = (p = {}) => {\r\n    let filter = {\r\n      workspaceId: worksapceData[0]?.id,\r\n    };\r\n    if (filter.eventType) filter.event_type = filter.eventType;\r\n    if (filter.sortBy) filter.sort = filter.sortBy.replace(\" \", \":\");\r\n    if (filter.startDate) {\r\n      filter.min_start_time = new Date(filter.startDate).toUTCString();\r\n      filter.max_start_time = new Date(filter.endDate).toUTCString();\r\n    }\r\n    loader(true);\r\n    let url = \"asana/projects\";\r\n    ApiClient.get(url, filter).then((res) => {\r\n      if (res?.success) {\r\n        setData(res.data);\r\n      }\r\n      loader(false);\r\n    });\r\n  };\r\n\r\n  const clear = () => {\r\n    let f = {\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      platform: \"\",\r\n      search: \"\",\r\n      status: \"\",\r\n      eventType: \"\",\r\n      page: 1,\r\n      role: \"\",\r\n    };\r\n    setFilter({ ...filters, ...f });\r\n    getData({ ...f });\r\n  };\r\n\r\n  const filter = (p = {}) => {\r\n    let f = {\r\n      page: 1,\r\n      ...p,\r\n    };\r\n    setFilter({ ...filters, ...f });\r\n    getData({ ...f });\r\n  };\r\n\r\n  const pageChange = (e) => {\r\n    setFilter({ ...filters, page: e });\r\n    getData({ page: e });\r\n  };\r\n  const count = (e) => {\r\n    setFilter({ ...filters, count: e });\r\n    getData({ ...filters, count: e });\r\n  };\r\n\r\n  const isAllow = (key = \"\") => {\r\n    let permissions = user?.permissions;\r\n    let value = permissions?.[key];\r\n    // if(user.role=='admin') value=true\r\n    return value;\r\n  };\r\n\r\n  const worksapce = () => {\r\n    loader(true);\r\n    ApiClient.get(\"asana/workspaces\").then((res) => {\r\n      loader(false);\r\n      if (res.success) {\r\n        let data = res?.data?.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: item.gid,\r\n          };\r\n        });\r\n        setWorkspaceData(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    worksapce();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (worksapceData) {\r\n      getData();\r\n    }\r\n  }, [worksapceData]);\r\n\r\n  return (\r\n    <>\r\n      <Html\r\n        clear={clear}\r\n        sortClass={sortClass}\r\n        sorting={sorting}\r\n        isAllow={isAllow}\r\n        count={count}\r\n        pageChange={pageChange}\r\n        filters={filters}\r\n        setFilter={setFilter}\r\n        filter={filter}\r\n        loaging={loaging}\r\n        data={data}\r\n        worksapceData={worksapceData}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Asana;\r\n"],"names":["Asana","user","useSelector","state","filters","setFilter","useState","page","count","search","data","setData","loaging","setLoader","worksapceData","setWorkspaceData","getData","_worksapceData$","filter","workspaceId","id","eventType","event_type","sortBy","sort","replace","startDate","min_start_time","Date","toUTCString","max_start_time","endDate","loader","ApiClient","get","then","res","success","useEffect","_res$data","map","item","gid","_jsx","_Fragment","children","Html","clear","f","platform","status","role","sortClass","key","cls","sorder","sorting","isAllow","arguments","length","undefined","permissions","e","pageChange"],"sourceRoot":""}